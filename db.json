{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/category-page.js","path":"js/category-page.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-block.js","path":"js/code-block.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/links-page.js","path":"js/links-page.js","modified":0,"renderable":1},{"_id":"themes/keep/source/images/QQ.png","path":"images/QQ.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/preview.png","path":"images/preview.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/lxp.png","path":"images/lxp.png","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/css-variables.styl","path":"css/common/css-variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/keep-style.styl","path":"css/common/keep-style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/stylus-variables.styl","path":"css/common/stylus-variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-list.styl","path":"css/layout/tag-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/post/copyright-info.js","path":"js/post/copyright-info.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/post/post-helper.js","path":"js/post/post-helper.js","modified":0,"renderable":1},{"_id":"themes/keep/source/font/css/brands.min.css","path":"font/css/brands.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/js/post/share.js","path":"js/post/share.js","modified":0,"renderable":1},{"_id":"themes/keep/source/font/css/fontawesome.min.css","path":"font/css/fontawesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/font/css/regular.min.css","path":"font/css/regular.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/font/css/solid.min.css","path":"font/css/solid.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-brands-400.ttf","path":"font/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-brands-400.woff2","path":"font/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/js/post/toc.js","path":"js/post/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-regular-400.ttf","path":"font/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-regular-400.woff2","path":"font/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-solid-900.ttf","path":"font/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-v4compatibility.ttf","path":"font/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-solid-900.woff2","path":"font/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/images/deploy-provider/aliyun.png","path":"images/deploy-provider/aliyun.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/deploy-provider/gitee.png","path":"images/deploy-provider/gitee.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/deploy-provider/github.png","path":"images/deploy-provider/github.png","modified":0,"renderable":1},{"_id":"themes/keep/source/font/webfonts/fa-v4compatibility.woff2","path":"font/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/images/deploy-provider/netlify.png","path":"images/deploy-provider/netlify.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/deploy-provider/tencent_cloud.png","path":"images/deploy-provider/tencent_cloud.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/deploy-provider/upyun.png","path":"images/deploy-provider/upyun.png","modified":0,"renderable":1},{"_id":"themes/keep/source/images/deploy-provider/vercel.png","path":"images/deploy-provider/vercel.png","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/code-block/code-theme.styl","path":"css/common/code-block/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/code-block/highlight.styl","path":"css/common/code-block/highlight.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/code-block/code-block.styl","path":"css/common/code-block/code-block.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/tags/keep-button.styl","path":"css/common/tags/keep-button.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/tags/keep-note.styl","path":"css/common/tags/keep-note.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/tags/keep-tabs.styl","path":"css/common/tags/keep-tabs.styl","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"e7c1b3d0102a0923a8e9f12a3df8ce6c44338729","modified":1744725696337},{"_id":"source/_posts/Linux-windows双系统时间不一致.md","hash":"c3d61f7867c788f6f100b3510e45916da716c65c","modified":1744726132174},{"_id":"source/_posts/Systemd一些技巧.md","hash":"f7d360ddfeace4574ce39f4eb59ed0d327e5c01a","modified":1744726132182},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程.md","hash":"33eff90ce95f6676d1e3cb8aba83d5f0cea2959d","modified":1744726132174},{"_id":"source/_posts/Win11Activation.md","hash":"f27efca20e2c4383d2e2d821cad51b9801026510","modified":1744726132171},{"_id":"source/_posts/codeforces1870C.md","hash":"92a87882c5252a35359cd55c5cdfa0e1c711a938","modified":1744726132174},{"_id":"source/_posts/codeforces1920D.md","hash":"661ca8d36af4d78b84bbd524ee84fc821b146a75","modified":1744726132174},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装.md","hash":"f5d9606da669c13df2163f907c0411321c4c7e24","modified":1744726132171},{"_id":"source/_posts/codeforces1954D.md","hash":"3a07a4f9a2b3dd318166f117c21fbb3aaf5a51e9","modified":1744726132166},{"_id":"source/_posts/hexo的常用命令.md","hash":"6a914fed16f1edd8fdeffb5ef5981061f85c5702","modified":1744726132182},{"_id":"source/archives/index.md","hash":"539073ef35239d9fee1eba7ad1cbd55eb4a927fe","modified":1708185891621},{"_id":"source/_posts/redis.md","hash":"d35ef0102b28eb909226101100adb2c1f992dcef","modified":1744726132182},{"_id":"source/all-tags/index.md","hash":"7cef59748bd2d2b7ac492ca4980a45827f51f6c7","modified":1751207787101},{"_id":"source/_posts/实习.md","hash":"dade4054262157ced965a32b9073cccf068be844","modified":1751206683506},{"_id":"source/_posts/codeforces882D.md","hash":"0b1f439afb8bd6673e0821406fb35e8174489d35","modified":1744726132174},{"_id":"source/_posts/背包问题.md","hash":"48e267dbfff62b71245dfb3e3d6ad2e9c666af64","modified":1751205211353},{"_id":"source/categories/index.md","hash":"7f6cf72dbd7ac7f4e8e055158d42a28543a8ebb3","modified":1751207728877},{"_id":"source/tags/index.md","hash":"13d152a83dc05bcfcaca303fcf812fc7fa12f7ec","modified":1751207910605},{"_id":"source/_posts/树状数组维护区间最值.md","hash":"e9d875993aa9226e117951f0fb067fb2272e9218","modified":1744726132166},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_02.png","hash":"98a1fad10cbe2c790458ae8f2f1770b74dbe87f5","modified":1713178912899},{"_id":"source/about/index.md","hash":"3db4bd29c187f03ddb27f35ea84e28fb05a44894","modified":1751205117765},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_03.png","hash":"cc7b864d2bdfa2dfeeadaa67d095e13a7dc8f743","modified":1713179370780},{"_id":"source/_posts/树状数组维护区间最值/01.svg","hash":"320d2d66e9b18a07e831f1decc29dd95901b9e92","modified":1715346460355},{"_id":"source/_posts/树状数组维护区间最值/02.png","hash":"751e3ec186b613b6e4c35c551efa2677efb5849a","modified":1715346467889},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/03.png","hash":"3df0d8cbf6eafe713d8195663a303fb01403dfa9","modified":1708184466701},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/05.png","hash":"c4f301314f91fa3fa69fb65e2998e57291844640","modified":1708184486355},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/06.png","hash":"a51ccf99302b6cd7a67536b1c1cc63bb97cb8cf6","modified":1708184500231},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/04.png","hash":"88a057676d881826ca2b41c3aab4286a1bac6983","modified":1708184565079},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/07.png","hash":"ce610bbb624e27585f8f8e9f1b425d1744c89925","modified":1708184504632},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/09.png","hash":"c8d0adf9f959df8dcb7febb2bea8ea9d319576be","modified":1708184515259},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/08.png","hash":"409701e44be6591ed9ebb9721407186967647315","modified":1708184509386},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/10.png","hash":"bd964bade2ccc923926c5875423cbb993a280d24","modified":1708184880065},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/12.png","hash":"467a43a3818b432368e6b74e2a0869b5a38ddcaa","modified":1708185011261},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/11.png","hash":"da7e406a3f14138f35334a4879f1e9b4be1a4010","modified":1708184885535},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_01.png","hash":"9fc06c5f15cbcc52f317a2095a685b17bb24a053","modified":1713174939272},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_04.png","hash":"fe8f17a9766af0bc1e2db2d0ec514b4bb020e36c","modified":1713179949785},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/02.png","hash":"120186781917b4ea90e2e1032d67302aac844107","modified":1708184369272},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/15.png","hash":"cdddc8cca664e3f7ba1aa1429b7c07bbd607fc7e","modified":1708185306354},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/14.png","hash":"2532d3d57bf7595fc3a7b8249fc17bee25c2fb54","modified":1708185297378},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/13.png","hash":"6612447b278ee527923f6437085295c28b266bf8","modified":1708185043253},{"_id":"themes/keep/.gitignore","hash":"a7bf5f6a1f1c0dc261fe61b83d85632f155f0cab","modified":1698367090094},{"_id":"themes/keep/.commitlintrc.js","hash":"61d63456a730aa46e3b0860b1a5264c0825d8c17","modified":1698367090089},{"_id":"themes/keep/.editorconfig","hash":"26a27140a04ad1873639b19f8240fb2bae367878","modified":1698367090089},{"_id":"themes/keep/.stylelintrc.js","hash":"e7a63a0e7077c0a6751485eb700d30e303fac8da","modified":1698367090096},{"_id":"themes/keep/.prettierrc","hash":"9f7924c8fc2a5951e84dfea778c569b29ae7e1d3","modified":1698367090096},{"_id":"themes/keep/.npmignore","hash":"689096e055dad77b33a48a03728b26f50f02e1a7","modified":1698367090096},{"_id":"themes/keep/CHANGELOG.md","hash":"27f1375f224ecdb861cbec11c04e57a1a00c028c","modified":1698367090096},{"_id":"themes/keep/README.md","hash":"5678955e08bd7a8616d17273693de58d524f9092","modified":1698905370149},{"_id":"themes/keep/.husky/pre-commit","hash":"ea88ade0979e60adde389012fee2ef3fceb9ebc4","modified":1698367090095},{"_id":"themes/keep/_config.yml","hash":"bf8121abed2685381be171b06a5ef9f116f74a5a","modified":1751207944352},{"_id":"themes/keep/package.json","hash":"89e4bab4d0fb967d647621f6d2589ad08399fb68","modified":1698367090122},{"_id":"themes/keep/.github/FUNDING.yml","hash":"761faf20ca38076b59793aeebc550165fa3bfbae","modified":1698367090090},{"_id":"themes/keep/LICENSE","hash":"231aa27eb8d3ed016f074aa5afd302d2abf27db3","modified":1698367090097},{"_id":"themes/keep/.husky/commit-msg","hash":"624a8903e9162f072796190f263f6897e878b4d5","modified":1698367090095},{"_id":"themes/keep/languages/en.yml","hash":"0e3a53f5bc6f3de6a3b1c4a0374824b5e3efecf4","modified":1698367090101},{"_id":"themes/keep/layout/archive-content.ejs","hash":"92202ef1f93ad5d7256fdb3cdd8a14bdc9e8dc3a","modified":1698367090116},{"_id":"themes/keep/docs/README_zh-CN.md","hash":"a4c1f54905516a9dc03cc83f234048dc3ae01ca4","modified":1698367090099},{"_id":"themes/keep/languages/zh-CN.yml","hash":"2320a493579e47f7b868c842454f7ecdec92aa38","modified":1698367090101},{"_id":"themes/keep/docs/README_zh-TW.md","hash":"f09c187b8c7beed070885a4ff6a9862d366d95de","modified":1698367090100},{"_id":"themes/keep/languages/zh-TW.yml","hash":"63a3cd6fec20c76537d8f43c8aa611c38e059e18","modified":1698367090101},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1698367090116},{"_id":"themes/keep/layout/category-list.ejs","hash":"a06c1c220cc8e6eec35ff26284141ad91fc5bd4e","modified":1698367090117},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1698367090117},{"_id":"themes/keep/layout/article-content.ejs","hash":"fa0190b2158063233262a9d988f522705fa80f0a","modified":1698367090117},{"_id":"themes/keep/layout/home-content.ejs","hash":"8a67544ec45b5fe73f224ca925c724b8e8fbcb6f","modified":1698367090119},{"_id":"themes/keep/layout/category-content.ejs","hash":"a46fec9cc6de112ff0c179c359765c1967c3abb4","modified":1698367090117},{"_id":"themes/keep/layout/index.ejs","hash":"d04b5608fc801f00e247e7355c89a8643dc76914","modified":1698367090119},{"_id":"themes/keep/layout/layout.ejs","hash":"3e5da4f2ed7cefb4558a30a0aec9a83d9b08917e","modified":1698367090119},{"_id":"themes/keep/layout/page-template.ejs","hash":"823d81735d21d3c69e9e30379ac8f24016161119","modified":1698367090119},{"_id":"themes/keep/layout/page.ejs","hash":"fe1955b089550cc026f51e979a36b41eb706e0df","modified":1744729371335},{"_id":"themes/keep/scripts/use-source-data.js","hash":"efa606064ca4d62d467e1ea3d9aec5de2305f4b3","modified":1698367090126},{"_id":"themes/keep/layout/tag-content.ejs","hash":"a642c5106da834fc4996be5bc884c6182a0f8b02","modified":1698367090120},{"_id":"themes/keep/layout/tag.ejs","hash":"d0fec63978eef4fbc3bd05ac700a78b8b89625a3","modified":1751206922532},{"_id":"themes/keep/layout/tags.ejs","hash":"3a285c44cffb7068dfcf133f01cb85c5e7429f97","modified":1751207230279},{"_id":"themes/keep/layout/tag-list.ejs","hash":"01e6df0ebf1eeef33220cf51669bf565b55ad9c8","modified":1751207798517},{"_id":"themes/keep/.github/ISSUE_TEMPLATE/bug-report.yml","hash":"ba73475aba5477317256fc2aacf8781f4f345ab3","modified":1698367090091},{"_id":"themes/keep/.github/ISSUE_TEMPLATE/feature-request.yml","hash":"dad7ec34d778346b6a6b2795ce697a32e5e0323d","modified":1698367090092},{"_id":"themes/keep/.github/ISSUE_TEMPLATE/other.yml","hash":"1ef410d79cad68f33ed051107ef45b93f239b8ad","modified":1698367090092},{"_id":"themes/keep/.github/workflows/auto-merge.yml","hash":"ea7af5dca09271305cd9c39b452f447a1ce35446","modified":1698367090093},{"_id":"themes/keep/.github/ISSUE_TEMPLATE/config.yml","hash":"0f9472a12c9de9573e9ca5f463c7a5e6c45b16a0","modified":1698367090092},{"_id":"themes/keep/.github/workflows/release.yml","hash":"2a527d614a0d23551aface6e85433b38e2104f6c","modified":1698367090094},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"23dc3858255aa5dc105ab2f90cc20f9fad98d02e","modified":1698367090107},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"5df1176b6c5623ede7fc763da3bb0564c7bb24d6","modified":1698367090103},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"07373cb62d928513f36bf59640213f8ab38b144b","modified":1698367090108},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"8cb83e6eeebab073a5333bd6c0c5fe5a7663f57c","modified":1698367090102},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"c91e765fafb2693eb89700dd9ac132f1f4151d1c","modified":1698367090107},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"97712d4cf3108e70948ed97416f09774f5ad223e","modified":1698367090108},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"cda3dddaa679fc276a7918fd1c1b4904b8d7183b","modified":1698367090110},{"_id":"themes/keep/layout/_partial/image-mask.ejs","hash":"83dc6bc6ee2c0cda531505de07b6984076018e50","modified":1698367090109},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"b892713542e5ff3c6c355f656456da295f90c17b","modified":1698367090110},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"b879c22726efb050993d4333e8efdcea31667791","modified":1698367090114},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"e6cb920a1e8a4f7a124782aeb29ff7b5a274bdb5","modified":1698367090114},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"d4012eda09f7c7d473df5ebad05e094e2557d2aa","modified":1698367090114},{"_id":"themes/keep/source/js/back2top.js","hash":"4ef4e1e7cbf9c9a31fd437291aadc1173641b9ae","modified":1698367090166},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"967a0241f7d581c6511ef2a77ab50ffd02c0ef06","modified":1698367090109},{"_id":"themes/keep/source/css/style.styl","hash":"8e099ccf3dcb38bbabae95e4d1c5aa34e87e1440","modified":1744728844245},{"_id":"themes/keep/source/js/code-block.js","hash":"ca419c3c65ccad0c62469a33e2fb1825de42d7a2","modified":1698367090167},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"282e12f08ca0fb705b5c9b15c6598b3527951f97","modified":1698367090115},{"_id":"themes/keep/source/js/category-page.js","hash":"f344468496661ec2e321496d078d1008c55cca0f","modified":1698367090166},{"_id":"themes/keep/source/js/header-shrink.js","hash":"4a5d8938b32e525cfa575d811377cd4fe2bf3234","modified":1698367090167},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"6335d09cbe76ceed56d04a3ee4d716d898518a15","modified":1698367090115},{"_id":"themes/keep/source/js/main.js","hash":"f029c5e394ffd3edb31f88fe812908397b797b8f","modified":1698367090171},{"_id":"themes/keep/source/js/lazyload.js","hash":"655070897b561a3053507f7e2bcc299e1b8331e4","modified":1698367090169},{"_id":"themes/keep/scripts/tags/index.js","hash":"8142f8dd0162b1f214b4f5e5b26f105c91c1ab01","modified":1698367090125},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"cd7104e5f0cd359d60ff97b7ae43fb9621e9099d","modified":1698367090167},{"_id":"themes/keep/source/js/links-page.js","hash":"7f25b5b391b81e88850c286a8c0463bf25d40122","modified":1698367090171},{"_id":"themes/keep/source/js/local-search.js","hash":"b2b5d639e3c65a772a09d6fb0d57820d68209654","modified":1698367090171},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"795ff25865ce9fa78b718e18bd34f74d4ede2720","modified":1698367090123},{"_id":"themes/keep/source/js/utils.js","hash":"865f08983777298e3dd43551e0fbe3887d4b1e69","modified":1698367090174},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"6988ecac4cbefd1c0940effe0e75762a49a0dc0f","modified":1698367090124},{"_id":"themes/keep/scripts/tags/tabs.js","hash":"7ee33fc27be0c256eb947065feb9a7e49297ad26","modified":1698367090126},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"65a868d92b654ff71c656fff25e8844add24fadb","modified":1698367090123},{"_id":"themes/keep/scripts/tags/note.js","hash":"4091058ad042ea342ed5dd5b86172f91135ea52a","modified":1698367090126},{"_id":"themes/keep/scripts/tags/button.js","hash":"12b4e8f1b647b72747b9cc651715224ee64eb166","modified":1698367090125},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"4c16fe6090a5fba4a1e4e092795f70eea9048041","modified":1698367090124},{"_id":"themes/keep/source/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1698367090165},{"_id":"themes/keep/source/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1698367090161},{"_id":"themes/keep/source/images/QQ.png","hash":"dc4b87ec4e8c6fc0427ac68aea8bdfaa76f0bc92","modified":1698422092380},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"8058f6cf5032c677e4007973787a51c7e1cff4ed","modified":1698367090104},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"5920b4e518680ebb7fcc1803598bddd0b7b76512","modified":1698367090105},{"_id":"themes/keep/layout/_partial/comment/giscus.ejs","hash":"5f3a22a746c7e75ee5bf2254756e93d9778bd5bf","modified":1698367090104},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"9e5c17576550046609263f3ad3e87df7a3101430","modified":1698367090105},{"_id":"themes/keep/source/images/preview.png","hash":"05aee3364639e1aad7a69a609cb55f215698c09d","modified":1712662350983},{"_id":"themes/keep/layout/_partial/common/mermaid.ejs","hash":"303808757cf129b7d9f8db22e140ccacfd5de9d7","modified":1698367090106},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"951fee60b1393d253f4dbf7d4be758b6af9acb23","modified":1698367090105},{"_id":"themes/keep/source/css/common/animated.styl","hash":"d2b42ed2df1f77f6a5b1ff4c22b60b2dace9365d","modified":1698367090128},{"_id":"themes/keep/layout/_partial/common/empty-content.ejs","hash":"81e6c322780882699e0c3374d1f58450284e23f9","modified":1698367090106},{"_id":"themes/keep/source/css/common/basic.styl","hash":"fecd389f4ce6803d1be0a3c4c0cfb1f14030ff88","modified":1698367090129},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"a36428100e797b15104c5530b802d8238e227f73","modified":1698367090111},{"_id":"themes/keep/layout/_partial/comment/waline.ejs","hash":"dd29498f7caa32534ee9ad71a02dbdc443d3eb21","modified":1698367090106},{"_id":"themes/keep/source/css/common/stylus-variables.styl","hash":"93bcd78e47d8749daa17dda9abd92436938bd17b","modified":1698367090132},{"_id":"themes/keep/source/css/common/css-variables.styl","hash":"10a638055c4492a7549d0d3001c0922f81733cac","modified":1698367090131},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"941608b34f64a45c88766d6937fb72e3a82efd0b","modified":1698367090146},{"_id":"themes/keep/source/css/common/keep-style.styl","hash":"e96013ab1b999bfe91d80c5d7bac30a8f4cddc08","modified":1698367090131},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"99ceae9e3a7e55b2e79df61715ff5b7905507c19","modified":1698367090146},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"0e255aaab955e4244bd54a0aaafaf9383a012feb","modified":1698367090147},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"eff0c623a6fbf0f3dd70c5559e9fd627805ffdbe","modified":1698367090132},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"e81d6ea83282d69160a99e3a837429eb76d87d5a","modified":1698367090147},{"_id":"themes/keep/layout/_partial/post/post-copyright-info.ejs","hash":"a90ff4a28236bfe860475a1708b227cfad768d00","modified":1698367090112},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"e0d763993ca2c6c2b52ea4b1f8a3551da5e5bf1b","modified":1698367090148},{"_id":"themes/keep/layout/_partial/post/post-tools.ejs","hash":"df4beecfbc24d4f996ad58a16d1821f881c5eae5","modified":1698367090113},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"92e8c87f9a2ec1edcfcc4acb0ddfc37b1aecdb55","modified":1698367090147},{"_id":"themes/keep/layout/_partial/post/post-share.ejs","hash":"87d0742198c1332e17ec225427b382adf0a22bea","modified":1698367090112},{"_id":"themes/keep/source/css/layout/page.styl","hash":"3150bdcfbff45fb423f88a80ca2334e94ad335fa","modified":1698367090148},{"_id":"themes/keep/source/css/layout/tag-list.styl","hash":"63c34681102f6dd60bbdd6e9e6ca93d8b057bd95","modified":1744729009543},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1698367090170},{"_id":"themes/keep/source/js/post/post-helper.js","hash":"ff613ac0e8fb8666f6b76d78276ba1ec5a286432","modified":1698367090173},{"_id":"themes/keep/layout/_partial/post/reward-author.ejs","hash":"c0e450571656eae668927a383a61d2d854adac8c","modified":1698367090113},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1698367090170},{"_id":"themes/keep/source/font/css/brands.min.css","hash":"aff2b6462d7e89e92446e966c5a8afefc684ff90","modified":1698367090150},{"_id":"themes/keep/source/js/post/share.js","hash":"727b4d6737109036bc71221f10b5abd9441a1d14","modified":1698367090173},{"_id":"themes/keep/source/js/post/copyright-info.js","hash":"ba75cd7f71dfae675aa5ca61816f6f70a5adf2a0","modified":1698367090172},{"_id":"themes/keep/source/font/css/regular.min.css","hash":"fe7a2d1a58a63ec537279e587fb87c9c8392220e","modified":1698367090151},{"_id":"themes/keep/source/font/css/solid.min.css","hash":"c95ac63f7df0d5f8f82090208f3960d6d4473fff","modified":1698367090152},{"_id":"themes/keep/source/font/webfonts/fa-regular-400.ttf","hash":"2d7890e12afb77490112ec57fe47ca0688aebda2","modified":1698367090155},{"_id":"themes/keep/source/js/post/toc.js","hash":"25de151578a599e0069eff3d06e0ee563e6fa50a","modified":1698367090173},{"_id":"themes/keep/source/font/webfonts/fa-v4compatibility.ttf","hash":"321d89c65f1746f111341556bc62c7e217ad2544","modified":1698367090160},{"_id":"themes/keep/source/font/webfonts/fa-regular-400.woff2","hash":"07fc0ae14bb3187839082aed3bca11dfb1e04524","modified":1698367090156},{"_id":"themes/keep/source/images/deploy-provider/gitee.png","hash":"d4c79d132c914bf28386df102e7c3f0607c95369","modified":1698367090162},{"_id":"themes/keep/source/images/deploy-provider/github.png","hash":"fa9ed69cd0a004f3cd334d098b8fea5ae2ac3835","modified":1698367090163},{"_id":"themes/keep/source/font/webfonts/fa-v4compatibility.woff2","hash":"35794892fa2b4aede41ec686df49a1283ab2b2b3","modified":1698367090160},{"_id":"themes/keep/source/images/deploy-provider/netlify.png","hash":"894e9d227c3ebe1ca05d431c74b61c716eaf4e4d","modified":1698367090163},{"_id":"themes/keep/source/images/deploy-provider/tencent_cloud.png","hash":"be5357326af6c68b7c109fe5d4f92ada5daec900","modified":1698367090164},{"_id":"themes/keep/source/images/deploy-provider/vercel.png","hash":"2b0538b5cd09f71f06f5968a6cd0ae910a96f4ca","modified":1698367090165},{"_id":"themes/keep/source/images/deploy-provider/aliyun.png","hash":"4a4464a8a66adb9ecddf2084087dd652690942d5","modified":1698367090162},{"_id":"themes/keep/source/css/common/code-block/code-block.styl","hash":"3ababf6681684d51c22e78e4d37168353b8bda4b","modified":1698367090130},{"_id":"themes/keep/source/images/deploy-provider/upyun.png","hash":"923dafcc484388f2a1c20356e37eaf62b85479f4","modified":1698367090164},{"_id":"themes/keep/source/css/common/code-block/highlight.styl","hash":"347ee5448a05d55bc457877c50364f1734dc2a2c","modified":1698367090130},{"_id":"themes/keep/source/css/common/code-block/code-theme.styl","hash":"9b9060d09041acb913776937adbc54d404daab76","modified":1698367090130},{"_id":"themes/keep/source/css/common/tags/keep-button.styl","hash":"d8fd1ce5aa4279ffd987afbf578ddfde6b430cee","modified":1698367090133},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"773a41952fa9f607dde5ca666108515d87890ffa","modified":1698367090135},{"_id":"themes/keep/source/css/common/tags/keep-note.styl","hash":"2c98c9d206d7a836805b3d13569a2e8195afc05a","modified":1698367090134},{"_id":"themes/keep/source/css/common/tags/keep-tabs.styl","hash":"a3e703ba14fbe4e91740a3caa24125b08ea580c2","modified":1698367090134},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"044197a31d7340b0967975d9a680a41cdccbba9a","modified":1698367090135},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"a7918990dc8e9689436f375e3ae18f7d10aee08e","modified":1698367090140},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"2dc1b92ff6e7ae4f3b804db9bc2f9f7fc4249e57","modified":1698367090140},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"58ba50b8a2f33d072cbf4cbd3236f2a88f3dd434","modified":1698367090140},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"4d69dd6641f7c5ae6309a2eea150624dd91f80d4","modified":1698367090141},{"_id":"themes/keep/source/css/layout/_partial/image-mask.styl","hash":"3576daf94e5b6b51b731b3a707d33da6be1657dd","modified":1698367090140},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"19940cfe819f4dfe672aef062f48003ff9cf68ed","modified":1698367090141},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"eaf865858a101a48fb21ce81a85e232fd4968892","modified":1698367090142},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"c4816da2c2833474c13359b0bfed2a8afb89ebe3","modified":1698367090144},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"d3b57a0222dd35f784cd45a122b0b34f6fbef0f3","modified":1698367090136},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"b4b44a2d0cb8f5edca08f8edbb34423f80f366e6","modified":1698367090137},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"046d0e57b7d3b428650db39d896b30fbb69728f5","modified":1744728628570},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"a680826f277f78ecc29145012df0dcc82f89601b","modified":1698367090145},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"39e6fdf71cb35467b2a9dde7913ec0eb9a97a2b8","modified":1698367090137},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"64b20714dfbc9cea47ec368c30833380268c166b","modified":1698367090145},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"71c7ee72183057039734d45cc5274b33a293526b","modified":1698367090137},{"_id":"themes/keep/source/css/layout/_partial/post/post-share.styl","hash":"d13288d9ce61797de649ffe9f103bcc1e04b8306","modified":1698367090143},{"_id":"themes/keep/source/css/layout/_partial/post/post-copyright-info.styl","hash":"3ed96d154b024727fea164793b402768c7af75cc","modified":1698367090142},{"_id":"themes/keep/source/css/layout/_partial/comment/waline.styl","hash":"b39ee538b12a067d88968bc467c94e3ce7a5039c","modified":1698367090137},{"_id":"themes/keep/source/css/layout/_partial/post/reward-author.styl","hash":"caa29cc2815cb9ef854d5bbf5db9fed1a3ff345b","modified":1698367090144},{"_id":"themes/keep/source/css/layout/_partial/common/empty-content.styl","hash":"e8713d1eb7aba30b999e0efa753d98685279885b","modified":1698367090139},{"_id":"themes/keep/source/css/layout/_partial/post/post-tools.styl","hash":"6efac3c4d071ebd9e64dd03d44cfecda50dcfaf9","modified":1698367090143},{"_id":"themes/keep/source/images/lxp.png","hash":"e4cba1b16a653e98f7a08947927764883a95b473","modified":1698368474475},{"_id":"themes/keep/source/font/css/fontawesome.min.css","hash":"8ab66bda1a49046649da57b07b4e6e8016897c25","modified":1698367090151},{"_id":"themes/keep/source/font/webfonts/fa-brands-400.woff2","hash":"373361ed756b1fe68ce2f5968d467826b6973bb5","modified":1698367090155},{"_id":"themes/keep/source/font/webfonts/fa-brands-400.ttf","hash":"d8b3568e9d8a1d3c01c85520eb9ca0b49b72815d","modified":1698367090154},{"_id":"themes/keep/source/font/webfonts/fa-solid-900.woff2","hash":"97f0942c6627ddd89fb62170e5cac9a2cbd6c98c","modified":1698367090159},{"_id":"themes/keep/source/font/webfonts/fa-solid-900.ttf","hash":"e9ace557c3aa403307f1e7a2cef1c035d522b94b","modified":1698367090158},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/01.png","hash":"61a673fc2fe674fb2f57e2f95827c4a1d7c6523c","modified":1708183758429},{"_id":"public/search.json","hash":"76873b782f3bdb21f6a7c9542e26971fb3ffba9a","modified":1751207951079},{"_id":"public/archives/index.html","hash":"848ed43d43a0e48243a9e6efef3491a870a22472","modified":1751207951079},{"_id":"public/categories/index.html","hash":"33269c1434a71959a29a82776d5767ffc910284a","modified":1751207951079},{"_id":"public/all-tags/index.html","hash":"181e7a76b2367cd8915cfe0abdb2b0272490d365","modified":1751207951079},{"_id":"public/2024/05/30/实习/index.html","hash":"884a9e6e56584abad6b49bc4325a15b6a3458981","modified":1751207951079},{"_id":"public/about/index.html","hash":"6ac373b5706abde1911b6e13e6451a826ad4a0d4","modified":1751207951079},{"_id":"public/tags/index.html","hash":"31363aff2cb7ef8e3f1e49baf07b6776e7b46c90","modified":1751207951079},{"_id":"public/2024/05/11/背包问题/index.html","hash":"fcba14294579cbbc3e639ac8399006133da3d866","modified":1751207951079},{"_id":"public/2024/04/26/codeforces1954D/index.html","hash":"e97e8365448f20451303ea67295edc9f9c218586","modified":1751207951079},{"_id":"public/2024/04/15/Linux-windows双系统时间不一致/index.html","hash":"465fef0f3679444fb2a223205fee65c8929cddf4","modified":1751207951079},{"_id":"public/2024/04/15/Windows与Ubuntu22-04-双系统安装/index.html","hash":"767e919692c4cb65feca97d50bed65c75a3b0125","modified":1751207951079},{"_id":"public/2024/05/10/树状数组维护区间最值/index.html","hash":"f16a32fcfb0603a9c1984df49177609c34bdbf3f","modified":1751207951079},{"_id":"public/2024/02/03/codeforces1920D/index.html","hash":"9c1cbb5147eab38448ed9361ab8f57f989531e08","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/index.html","hash":"9963afa515a62d8e6e31623358deaf813ce03426","modified":1751207951079},{"_id":"public/2023/10/28/hexo的常用命令/index.html","hash":"2e0357ee45d3c4c937df4f65ca616b1491464945","modified":1751207951079},{"_id":"public/2023/11/03/Systemd一些技巧/index.html","hash":"73c288b736608dd90e2694b7edc35840abc4d271","modified":1751207951079},{"_id":"public/2023/09/07/codeforces1870C/index.html","hash":"e9fbac1aa20a0c00063a7cbfa9a70bba2b847f0c","modified":1751207951079},{"_id":"public/2024/02/02/redis/index.html","hash":"103a4452c790db9688a10de885bb0e49c033c0d9","modified":1751207951079},{"_id":"public/2023/09/07/codeforces882D/index.html","hash":"c3520ea52176aa49973c1aa30a09808a1a44fa4e","modified":1751207951079},{"_id":"public/2023/09/07/Win11Activation/index.html","hash":"3435946d6f57237fdc3650f5ef990d0a463ecfcc","modified":1751207951079},{"_id":"public/categories/杂项/index.html","hash":"554523a908d8c87e57794eb5f59f85044ac6e584","modified":1751207951079},{"_id":"public/index.html","hash":"6f99264ba368f3f3ddfcf9c7dff4a75e403ca772","modified":1751207951079},{"_id":"public/categories/实习/index.html","hash":"346c1018a53a07f2b104698521702deaf4999b17","modified":1751207951079},{"_id":"public/categories/codeforces/index.html","hash":"b7bdae5c31884923719cea47b84d18d763c46ba2","modified":1751207951079},{"_id":"public/page/2/index.html","hash":"b243b86591b0afd39f966bc549680ae5ea1a0cf8","modified":1751207951079},{"_id":"public/archives/page/2/index.html","hash":"705f8482c4830948293cf60da269311b4b0c9004","modified":1751207951079},{"_id":"public/archives/2023/index.html","hash":"2b38f1ecf414b75c960a16efacaed86d8a22367f","modified":1751207951079},{"_id":"public/archives/2023/09/index.html","hash":"e5ab9a00a861e9681cb2b8353ddfc0dacfcb97a6","modified":1751207951079},{"_id":"public/archives/2023/10/index.html","hash":"56171069063ad354744e54d7c056e7ee5bcbcbd7","modified":1751207951079},{"_id":"public/archives/2024/index.html","hash":"6139ccefcdd1092697c05966627b8a17bccafcac","modified":1751207951079},{"_id":"public/archives/2023/11/index.html","hash":"6b9db8e650bc37c71531f91c55b5bb6907b3d43f","modified":1751207951079},{"_id":"public/archives/2024/02/index.html","hash":"ff63b2b39a45b8c6381f2b3c6d98d86b9f0ba935","modified":1751207951079},{"_id":"public/archives/2024/04/index.html","hash":"ffe0242ce68d6b734ef631cdb1b4b359ff185cfa","modified":1751207951079},{"_id":"public/tags/codeforces/index.html","hash":"4cb5df99dba248458fcb42243cde218763f06697","modified":1751207951079},{"_id":"public/tags/工具/index.html","hash":"b0e5bfabd0259defbdf447bbc4162d0d0e92cfcb","modified":1751207951079},{"_id":"public/tags/实习/index.html","hash":"b66c457d78cfe4d5c365728bb710325f78116d8e","modified":1751207951079},{"_id":"public/archives/2024/05/index.html","hash":"7c121e215458af373b69b6e6843c019880d3ea6c","modified":1751207951079},{"_id":"public/images/QQ.png","hash":"dc4b87ec4e8c6fc0427ac68aea8bdfaa76f0bc92","modified":1751207951079},{"_id":"public/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1751207951079},{"_id":"public/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1751207951079},{"_id":"public/images/preview.png","hash":"05aee3364639e1aad7a69a609cb55f215698c09d","modified":1751207951079},{"_id":"public/font/webfonts/fa-regular-400.ttf","hash":"2d7890e12afb77490112ec57fe47ca0688aebda2","modified":1751207951079},{"_id":"public/font/webfonts/fa-regular-400.woff2","hash":"07fc0ae14bb3187839082aed3bca11dfb1e04524","modified":1751207951079},{"_id":"public/font/webfonts/fa-v4compatibility.ttf","hash":"321d89c65f1746f111341556bc62c7e217ad2544","modified":1751207951079},{"_id":"public/images/deploy-provider/gitee.png","hash":"d4c79d132c914bf28386df102e7c3f0607c95369","modified":1751207951079},{"_id":"public/images/deploy-provider/github.png","hash":"fa9ed69cd0a004f3cd334d098b8fea5ae2ac3835","modified":1751207951079},{"_id":"public/font/webfonts/fa-v4compatibility.woff2","hash":"35794892fa2b4aede41ec686df49a1283ab2b2b3","modified":1751207951079},{"_id":"public/images/deploy-provider/aliyun.png","hash":"4a4464a8a66adb9ecddf2084087dd652690942d5","modified":1751207951079},{"_id":"public/images/deploy-provider/tencent_cloud.png","hash":"be5357326af6c68b7c109fe5d4f92ada5daec900","modified":1751207951079},{"_id":"public/images/deploy-provider/netlify.png","hash":"894e9d227c3ebe1ca05d431c74b61c716eaf4e4d","modified":1751207951079},{"_id":"public/images/deploy-provider/upyun.png","hash":"923dafcc484388f2a1c20356e37eaf62b85479f4","modified":1751207951079},{"_id":"public/images/deploy-provider/vercel.png","hash":"2b0538b5cd09f71f06f5968a6cd0ae910a96f4ca","modified":1751207951079},{"_id":"public/CNAME","hash":"e7c1b3d0102a0923a8e9f12a3df8ce6c44338729","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/03.png","hash":"3df0d8cbf6eafe713d8195663a303fb01403dfa9","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/06.png","hash":"a51ccf99302b6cd7a67536b1c1cc63bb97cb8cf6","modified":1751207951079},{"_id":"public/js/back2top.js","hash":"a20b7f4664eb0c5efaf027edb7b922e9e2ee5d79","modified":1751207951079},{"_id":"public/css/style.css","hash":"6da89c4e36454b1121e25cc09b065c7a41fbab15","modified":1751207951079},{"_id":"public/js/category-page.js","hash":"48e5c9448a516ccc77faca113cde28a1b32b2fca","modified":1751207951079},{"_id":"public/js/code-block.js","hash":"4a7e95326e2896f455dacd0fc77256aaf4f34bfb","modified":1751207951079},{"_id":"public/js/dark-light-toggle.js","hash":"4acefb833dc7ae70e3a0126b86895d2fd1fdde73","modified":1751207951079},{"_id":"public/js/lazyload.js","hash":"d0e0878947b429ba59b0f952a498a05d6d77d0fa","modified":1751207951079},{"_id":"public/js/header-shrink.js","hash":"7a14d3a1d4cafe6ee60677011a65df44688db12d","modified":1751207951079},{"_id":"public/js/main.js","hash":"7b85219c8afe9baf88c05a845dee8fef81eff551","modified":1751207951079},{"_id":"public/js/utils.js","hash":"0d8cf3e2f02f4b54939894a45e91935151be0672","modified":1751207951079},{"_id":"public/js/links-page.js","hash":"d00dcf4c1717155823d58ec8940dcddac4529b06","modified":1751207951079},{"_id":"public/js/local-search.js","hash":"35756189425600fdf39106c285784ec6ea9eb247","modified":1751207951079},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1751207951079},{"_id":"public/css/common/basic.css","hash":"0e56e058fc5d7551042050c5c754d333246bf33b","modified":1751207951079},{"_id":"public/css/common/animated.css","hash":"d2394f3f9f21c1337c2c8ceaf184669678a52093","modified":1751207951079},{"_id":"public/css/common/stylus-variables.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1751207951079},{"_id":"public/css/layout/category-list.css","hash":"3055c790941ab753c8ab45cef7a569a232e94a76","modified":1751207951079},{"_id":"public/css/common/keep-style.css","hash":"b3383257e2bc5f4add039b006556372d136571bc","modified":1751207951079},{"_id":"public/css/layout/article-content.css","hash":"ef1f1fd53c2d0599b0912e169278e57312d520a7","modified":1751207951079},{"_id":"public/css/common/markdown.css","hash":"975293c9ec51e413363acdfc2c2e95bc749a9e92","modified":1751207951079},{"_id":"public/css/layout/category-content.css","hash":"c8b8a3b8a5155106ac8baa4c8af3a4aacb7aca1a","modified":1751207951079},{"_id":"public/css/common/css-variables.css","hash":"db844754d6219c6d9d5efbb5d2c51f29372a2365","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/05.png","hash":"c4f301314f91fa3fa69fb65e2998e57291844640","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/04.png","hash":"88a057676d881826ca2b41c3aab4286a1bac6983","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/08.png","hash":"409701e44be6591ed9ebb9721407186967647315","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/10.png","hash":"bd964bade2ccc923926c5875423cbb993a280d24","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/09.png","hash":"c8d0adf9f959df8dcb7febb2bea8ea9d319576be","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/07.png","hash":"ce610bbb624e27585f8f8e9f1b425d1744c89925","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/12.png","hash":"467a43a3818b432368e6b74e2a0869b5a38ddcaa","modified":1751207951079},{"_id":"public/2024/04/15/Windows与Ubuntu22-04-双系统安装/image_02.png","hash":"98a1fad10cbe2c790458ae8f2f1770b74dbe87f5","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/11.png","hash":"da7e406a3f14138f35334a4879f1e9b4be1a4010","modified":1751207951079},{"_id":"public/2024/05/10/树状数组维护区间最值/01.svg","hash":"320d2d66e9b18a07e831f1decc29dd95901b9e92","modified":1751207951079},{"_id":"public/2024/04/15/Windows与Ubuntu22-04-双系统安装/image_03.png","hash":"cc7b864d2bdfa2dfeeadaa67d095e13a7dc8f743","modified":1751207951079},{"_id":"public/2024/05/10/树状数组维护区间最值/02.png","hash":"751e3ec186b613b6e4c35c551efa2677efb5849a","modified":1751207951079},{"_id":"public/images/lxp.png","hash":"e4cba1b16a653e98f7a08947927764883a95b473","modified":1751207951079},{"_id":"public/font/webfonts/fa-brands-400.woff2","hash":"373361ed756b1fe68ce2f5968d467826b6973bb5","modified":1751207951079},{"_id":"public/css/layout/tag-content.css","hash":"335deb9379466fd46b7880bf4e3090185b0aa963","modified":1751207951079},{"_id":"public/css/layout/home-content.css","hash":"b979147edf6501a23bee39b5b7b2dc95731b27c3","modified":1751207951079},{"_id":"public/css/layout/page.css","hash":"4d210aee86acbea80b8afd805431a3e28601af5e","modified":1751207951079},{"_id":"public/css/layout/tag-list.css","hash":"1ae6828943415ba69ae812f27c7fd5aa57844291","modified":1751207951079},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1751207951079},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1751207951079},{"_id":"public/font/css/brands.min.css","hash":"75e0c506eff6c93d4d3311b300d251c48236b714","modified":1751207951079},{"_id":"public/js/post/copyright-info.js","hash":"7ec17f1bce99224a8dc3e05230c3c792b783b81c","modified":1751207951079},{"_id":"public/font/css/regular.min.css","hash":"7d1c0737e27ee4c129fe5b74204c0b588dc4091c","modified":1751207951079},{"_id":"public/js/post/share.js","hash":"7ea60518e86c3b15f164592b4600c61033b8bc4a","modified":1751207951079},{"_id":"public/js/post/post-helper.js","hash":"2f6ddd6e5e2ce8431fb1493cbde1a054237b1873","modified":1751207951079},{"_id":"public/font/css/solid.min.css","hash":"65f70e8978fb1db423c007310387573b635498aa","modified":1751207951079},{"_id":"public/js/post/toc.js","hash":"07f94bd316d4fc42e650ad2b76cb37035af58bde","modified":1751207951079},{"_id":"public/font/css/fontawesome.min.css","hash":"c562501b761480adb1b4db14b6b09981b3510ac8","modified":1751207951079},{"_id":"public/css/common/code-block/code-theme.css","hash":"22febd2cec698691d270ab494ae2099e62dc67ca","modified":1751207951079},{"_id":"public/css/common/code-block/highlight.css","hash":"bb3d6619b583c41e6bef0eb6689f073460c9bf0f","modified":1751207951079},{"_id":"public/css/common/tags/keep-button.css","hash":"17bd98d7daad3ddaf5e0ea44e16007548b49305b","modified":1751207951079},{"_id":"public/css/common/tags/keep-note.css","hash":"483632c7c234da5fd88ecb943be54455b3f1644b","modified":1751207951079},{"_id":"public/css/common/tags/keep-tabs.css","hash":"795cb5e2bf4e25f079303aaf9044fc50a8f8b8d5","modified":1751207951079},{"_id":"public/css/common/code-block/code-block.css","hash":"45f442bcbd1c1813825c938ea448e0e38d9996ac","modified":1751207951079},{"_id":"public/2024/04/15/Windows与Ubuntu22-04-双系统安装/image_01.png","hash":"9fc06c5f15cbcc52f317a2095a685b17bb24a053","modified":1751207951079},{"_id":"public/2024/04/15/Windows与Ubuntu22-04-双系统安装/image_04.png","hash":"fe8f17a9766af0bc1e2db2d0ec514b4bb020e36c","modified":1751207951079},{"_id":"public/font/webfonts/fa-brands-400.ttf","hash":"d8b3568e9d8a1d3c01c85520eb9ca0b49b72815d","modified":1751207951079},{"_id":"public/font/webfonts/fa-solid-900.woff2","hash":"97f0942c6627ddd89fb62170e5cac9a2cbd6c98c","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/02.png","hash":"120186781917b4ea90e2e1032d67302aac844107","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/14.png","hash":"2532d3d57bf7595fc3a7b8249fc17bee25c2fb54","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/15.png","hash":"cdddc8cca664e3f7ba1aa1429b7c07bbd607fc7e","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/13.png","hash":"6612447b278ee527923f6437085295c28b266bf8","modified":1751207951079},{"_id":"public/font/webfonts/fa-solid-900.ttf","hash":"e9ace557c3aa403307f1e7a2cef1c035d522b94b","modified":1751207951079},{"_id":"public/2024/02/16/Proxifier-2023年11月时最新版-激活教程/01.png","hash":"61a673fc2fe674fb2f57e2f95827c4a1d7c6523c","modified":1751207951079}],"Category":[{"name":"杂项","_id":"cmchrzzki00083od9hwb30g37"},{"name":"codeforces","_id":"cmchrzzkk000d3od958tp1r4b"},{"name":"实习","_id":"cmchrzzkn000v3od93lqx9nfw"}],"Data":[],"Page":[{"title":"归档","date":"2023-09-07T11:01:57.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: 归档\ndate: 2023-09-07 19:01:57\n---\n","updated":"2024-02-17T16:04:51.621Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cmchrzzkd00003od908i6dep4","content":"\r\n","site":{"data":{}},"excerpt":"","more":"\r\n"},{"title":"所有标签","layout":"tags","_content":"","source":"all-tags/index.md","raw":"---\ntitle: 所有标签\nlayout: tags\n---\n","date":"2025-06-29T14:40:14.437Z","updated":"2025-06-29T14:40:14.437Z","path":"all-tags/index.html","_id":"cmchrzzkg00023od935z1gbfw","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2024-04-15T14:17:00.000Z","type":"categories","layout":"categories","comments":0,"_content":" ","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-04-15 22:17:00\ntype: categories\nlayout: categories\ncomments: false\n--- ","updated":"2025-06-29T14:35:28.877Z","path":"categories/index.html","_id":"cmchrzzkh00043od90gqo65ee","content":"\r\n","site":{"data":{}},"excerpt":"","more":"\r\n"},{"title":"标签","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\n---","date":"2025-06-29T14:38:30.605Z","updated":"2025-06-29T14:38:30.605Z","path":"tags/index.html","comments":1,"_id":"cmchrzzkh00063od96n2falbs","content":"\r\n","site":{"data":{}},"excerpt":"","more":"\r\n"},{"title":"关于","date":"2023-09-07T11:01:21.000Z","_content":"\n<p>C++ 菜鸟</p>\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2023-09-07 19:01:21\n---\n\n<p>C++ 菜鸟</p>\n","updated":"2025-06-29T13:51:57.765Z","path":"about/index.html","comments":1,"layout":"page","_id":"cmchrzzkj00093od9hb171ap5","content":"<p>\r\nC++ 菜鸟\r\n</p>\r\n","site":{"data":{}},"excerpt":"","more":"<p>\r\nC++ 菜鸟\r\n</p>\r\n"}],"Post":[{"title":"Linux-windows双系统时间不一致","date":"2024-04-15T11:35:40.000Z","_content":"* 问题：\n\nLinux和windows双系统安装完成后，两个系统显示时间相差八个小时。\n\n* 基础知识：\n\nUTC（Universal Time Coordinated）即协调世界时，以原子时长为基础，精度好。\n\nRTC（Real-Time Clock）实时时钟，在计算机领域称为硬件时钟，顾名思义电脑上有个硬件保存了时间信息。让我们下次启动之后，时间还可以正常显示。\n\n* 原因：\n\nwindows把RTC时间当作本地时间——在中国，就是东八区时间。而Linux会将RTC时间当作UTC时间。\n\n所以：Linux会将RTC设置成UTC时间。显示时间会根据时区显示，例如在中国，显示时间时会自动+8小时。\n\nLinux关机，启动windows后。Window把RTC当成了本时区的时间，直接显示。但是RTC已经被Linux设置成了UTC时间，所以显示时间会晚8个小时。\n\n* 解决办法：\n\n修改windows，让其将RTC硬件时间当作UTC时间。因为Linux使用RTC时间可能会导致一些程序发生错误。\n\n以管理员身份打开 「PowerShell」，输入以下命令：\n```Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /tREG_DWORD /d 1```\n\n\n或者打开```注册表编辑器```，定位到计算机```\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInfor\nmation``` 目录下，新建一个 ```DWORD``` 类型，名称为 ```RealTimeIsUniversal``` 的键，并修改键值为 ```1``` 即可。\n","source":"_posts/Linux-windows双系统时间不一致.md","raw":"---\ntitle: Linux-windows双系统时间不一致\ndate: 2024-04-15 19:35:40\ntags:\n---\n* 问题：\n\nLinux和windows双系统安装完成后，两个系统显示时间相差八个小时。\n\n* 基础知识：\n\nUTC（Universal Time Coordinated）即协调世界时，以原子时长为基础，精度好。\n\nRTC（Real-Time Clock）实时时钟，在计算机领域称为硬件时钟，顾名思义电脑上有个硬件保存了时间信息。让我们下次启动之后，时间还可以正常显示。\n\n* 原因：\n\nwindows把RTC时间当作本地时间——在中国，就是东八区时间。而Linux会将RTC时间当作UTC时间。\n\n所以：Linux会将RTC设置成UTC时间。显示时间会根据时区显示，例如在中国，显示时间时会自动+8小时。\n\nLinux关机，启动windows后。Window把RTC当成了本时区的时间，直接显示。但是RTC已经被Linux设置成了UTC时间，所以显示时间会晚8个小时。\n\n* 解决办法：\n\n修改windows，让其将RTC硬件时间当作UTC时间。因为Linux使用RTC时间可能会导致一些程序发生错误。\n\n以管理员身份打开 「PowerShell」，输入以下命令：\n```Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /tREG_DWORD /d 1```\n\n\n或者打开```注册表编辑器```，定位到计算机```\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInfor\nmation``` 目录下，新建一个 ```DWORD``` 类型，名称为 ```RealTimeIsUniversal``` 的键，并修改键值为 ```1``` 即可。\n","slug":"Linux-windows双系统时间不一致","published":1,"updated":"2025-04-15T14:08:52.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzke00013od98vdhcu6i","content":"<ul>\r\n<li>问题：</li>\r\n</ul>\r\n<p>Linux和windows双系统安装完成后，两个系统显示时间相差八个小时。</p>\r\n<ul>\r\n<li>基础知识：</li>\r\n</ul>\r\n<p>UTC（Universal Time\r\nCoordinated）即协调世界时，以原子时长为基础，精度好。</p>\r\n<p>RTC（Real-Time\r\nClock）实时时钟，在计算机领域称为硬件时钟，顾名思义电脑上有个硬件保存了时间信息。让我们下次启动之后，时间还可以正常显示。</p>\r\n<ul>\r\n<li>原因：</li>\r\n</ul>\r\n<p>windows把RTC时间当作本地时间——在中国，就是东八区时间。而Linux会将RTC时间当作UTC时间。</p>\r\n<p>所以：Linux会将RTC设置成UTC时间。显示时间会根据时区显示，例如在中国，显示时间时会自动+8小时。</p>\r\n<p>Linux关机，启动windows后。Window把RTC当成了本时区的时间，直接显示。但是RTC已经被Linux设置成了UTC时间，所以显示时间会晚8个小时。</p>\r\n<ul>\r\n<li>解决办法：</li>\r\n</ul>\r\n<p>修改windows，让其将RTC硬件时间当作UTC时间。因为Linux使用RTC时间可能会导致一些程序发生错误。</p>\r\n<p>以管理员身份打开 「PowerShell」，输入以下命令：\r\n<code>Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /tREG_DWORD /d 1</code></p>\r\n<p>或者打开<code>注册表编辑器</code>，定位到计算机<code>\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInfor mation</code>\r\n目录下，新建一个 <code>DWORD</code> 类型，名称为\r\n<code>RealTimeIsUniversal</code> 的键，并修改键值为 <code>1</code>\r\n即可。</p>\r\n","site":{"data":{}},"excerpt":"","more":"<ul>\r\n<li>问题：</li>\r\n</ul>\r\n<p>Linux和windows双系统安装完成后，两个系统显示时间相差八个小时。</p>\r\n<ul>\r\n<li>基础知识：</li>\r\n</ul>\r\n<p>UTC（Universal Time\r\nCoordinated）即协调世界时，以原子时长为基础，精度好。</p>\r\n<p>RTC（Real-Time\r\nClock）实时时钟，在计算机领域称为硬件时钟，顾名思义电脑上有个硬件保存了时间信息。让我们下次启动之后，时间还可以正常显示。</p>\r\n<ul>\r\n<li>原因：</li>\r\n</ul>\r\n<p>windows把RTC时间当作本地时间——在中国，就是东八区时间。而Linux会将RTC时间当作UTC时间。</p>\r\n<p>所以：Linux会将RTC设置成UTC时间。显示时间会根据时区显示，例如在中国，显示时间时会自动+8小时。</p>\r\n<p>Linux关机，启动windows后。Window把RTC当成了本时区的时间，直接显示。但是RTC已经被Linux设置成了UTC时间，所以显示时间会晚8个小时。</p>\r\n<ul>\r\n<li>解决办法：</li>\r\n</ul>\r\n<p>修改windows，让其将RTC硬件时间当作UTC时间。因为Linux使用RTC时间可能会导致一些程序发生错误。</p>\r\n<p>以管理员身份打开 「PowerShell」，输入以下命令：\r\n<code>Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /tREG_DWORD /d 1</code></p>\r\n<p>或者打开<code>注册表编辑器</code>，定位到计算机<code>\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInfor mation</code>\r\n目录下，新建一个 <code>DWORD</code> 类型，名称为\r\n<code>RealTimeIsUniversal</code> 的键，并修改键值为 <code>1</code>\r\n即可。</p>\r\n"},{"title":"Systemd 一些常用命令","mathjax":true,"date":"2023-11-03T03:17:10.000Z","_content":"## 一、Systemd 概述\n__Systemd__ 是 Linux 系统工具，用来启动[守护进程](https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html)，已成为大多数发行版的标准配置。根据 Linux 惯例，字母d是守护进程（daemon）的缩写。Systemd 这个名字的含义，就是它要守护整个系统。\n\n```systemctl --version```  \n上面的命令可以查看你的 Systemd 的版本。\n\n__Systemd__ 的优点是功能强大，使用方便，缺点是体系庞大，非常复杂。事实上，现在还有很多人反对使用 Systemd，理由就是它过于复杂，与操作系统的其他部分强耦合，违反 $keep$ $simple$, $keep$ $stupid$ 的 [Unix](https://www.ruanyifeng.com/blog/2009/06/unix_philosophy.html)哲学。\n\n<!-- ![Alt text](image.png) -->\n<!-- （上图为 Systemd 架构图） -->\n\n## 二、常用命令\n对于那些支持 ```Systemd``` 的软件，安装的时候，会自动在```/usr/lib/systemd/system```目录添加一个配置文件。  \n\n而不支持 Systemd 的软件，如 ```Nginx```, ```Alist```...（以```Alist```为例）则需要手动编辑或创建 ```/usr/lib/systemd/system/alist.service```并添加如下内容，其中 ```path_alist``` 为 ```AList``` 所在的路径\n```shell\n[Unit]\nDescription=alist                        //名称\nAfter=network.target                     //在什么之后启动\n \n[Service]\nType=simple                              //启动类型\nWorkingDirectory=path_alist              \nExecStart=path_alist/alist server        //启动进程时执行的命令 \nRestart=on-failure\n \n[Install]\nWantedBy=multi-user.target\n```\n\n\n然后，执行 ```systemctl daemon-reload``` 重载配置，现在你可以使用这些命令来管理程序:  \n启动: ```systemctl start alist```  \n关闭: ```systemctl stop alist```  \n配置开机自启: ```systemctl enable alist```  \n取消开机自启: ```systemctl disable alist```  \n状态: ```systemctl status alist```  \n重启: ```systemctl restart alist```  \n\n\n## 三、读懂配置文件\n配置文件主要放在 ```/usr/lib/systemd/system``` 目录，也可能在 ```/etc/systemd/system``` 目录。找到配置文件以后，使用 ```vim``` 打开即可。\n\n命令可以用来查看配置文件，下面以 ```sshd.service``` 文件为例，它的作用是启动一个 ```SSH``` 服务器，供其他用户以 ```SSH``` 方式登录.\n\n```shell\n[root@jacl system]# systemctl cat sshd.service\n# /usr/lib/systemd/system/sshd.service\n\n[Unit]\nDescription=OpenSSH server daemon                              //当前服务的简单描述                          \nDocumentation=man:sshd(8) man:sshd_config(5)                   //文档位置\nAfter=network.target sshd-keygen.target                        \nWants=sshd-keygen.target\n\n[Service]\nType=notify\nEnvironmentFile=-/etc/crypto-policies/back-ends/opensshserver.config\nEnvironmentFile=-/etc/sysconfig/sshd\nExecStart=/usr/sbin/sshd -D $OPTIONS $CRYPTO_POLICY\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=process\nRestart=on-failure\nRestartSec=42s\n\n[Install]\nWantedBy=multi-user.target\n```\n可以看到，配置文件分成几个区块，每个区块包含若干条键值对。\n\n下面依次解释每个区块的内容。\n\n## 四、[Unit] 区块：启动顺序与依赖关系\n> **After**字段：表示如果```network.target```或```sshd-keygen.service```需要启动，那么```sshd.service```应该在它们之后启动。\n\n相应地，还有一个```Before```字段，定义```sshd.service```应该在哪些服务之前启动。\n\n注意，```After```和```Before```字段只涉及启动顺序，不涉及依赖关系。\n\n举例来说，某 **Web** 应用需要 **postgresql** 数据库储存数据。在配置文件中，它只定义要在 **postgresql** 之后启动，而没有定义依赖 **postgresql** 。上线后，由于某种原因，**postgresql** 需要重新启动，在停止服务期间，该 **Web** 应用就会无法建立数据库连接。\n\n设置依赖关系，需要使用```Wants```字段和```Requires```字段。\n\n> **Wants**字段：表示```sshd.service```与```sshd-keygen.service```之间存在\"弱依赖\"关系，即如果```sshd-keygen.service```启动失败或停止运行，不影响```sshd.service```继续执行。\n\n> **Requires**字段则表示\"强依赖\"关系，即如果该服务启动失败或异常退出，那么```sshd.service```也必须退出。\n\n## 五、Service] 区块：启动行为\n> **Service**区块定义如何启动当前服务。\n\n#### 启动命令\n许多软件都有自己的环境参数文件，该文件可以用```EnvironmentFile```字段读取。\n\n> **EnvironmentFile**字段：指定当前服务的环境参数文件。该文件内部的key=value键值对，可以用key的形式，在当前配置文件中获取。\n\n上面的例子中，**sshd** 的环境参数文件是```/etc/sysconfig/sshd```。\n\n配置文件里面最重要的字段是**ExecStart**。\n\n> **ExecStart**字段：定义启动进程时执行的命令。\n\n上面的例子中，启动```sshd```，执行的命令是```/usr/sbin/sshd -D $OPTIONS```，其中的变量```$OPTIONS```就来自```EnvironmentFile```字段指定的环境参数文件。\n\n与之作用相似的，还有如下这些字段。\n```shell\nExecReload字段：重启服务时执行的命令\nExecStop字段：停止服务时执行的命令\nExecStartPre字段：启动服务之前执行的命令\nExecStartPost字段：启动服务之后执行的命令\nExecStopPost字段：停止服务之后执行的命令\n```\n\n#### 启动类型\n**Type**字段定义启动类型。它可以设置的值如下。\n```shell\nsimple（默认值）：ExecStart字段启动的进程为主进程\nforking：ExecStart字段将以fork()方式启动，此时父进程将会退出，子进程将成为主进程\noneshot：类似于simple，但只执行一次，Systemd 会等它执行完，才启动其他服务\ndbus：类似于simple，但会等待 D-Bus 信号后启动\nnotify：类似于simple，启动结束后会发出通知信号，然后 Systemd 再启动其他服务\nidle：类似于simple，但是要等到其他任务都执行完，才会启动该服务。一种使用场合是为让该服务的输出，不与其他服务的输出相混合\n```\n下面是一个**oneshot**的例子，笔记本电脑启动时，要把触摸板关掉，配置文件可以这样写。\n```shell\n[Unit]\nDescription=Switch-off Touchpad\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/touchpad-off\n\n[Install]\nWantedBy=multi-user.target\n```\n上面的配置文件，启动类型设为**oneshot**，就表明这个服务只要运行一次就够了，不需要长期运行。\n\n如果关闭以后，将来某个时候还想打开，配置文件修改如下。\n```shell\n[Unit]\nDescription=Switch-off Touchpad\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/touchpad-off start\nExecStop=/usr/bin/touchpad-off stop\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target\n```\n上面配置文件中，**RemainAfterExit**字段设为**yes**，表示进程退出以后，服务仍然保持执行。这样的话，一旦使用**systemctl stop**命令停止服务，**ExecStop**指定的命令就会执行，从而重新开启触摸板。\n\n#### 重启行为\n\n","source":"_posts/Systemd一些技巧.md","raw":"---\ntitle: Systemd 一些常用命令\nmathjax: true\ndate: 2023-11-03 11:17:10\ntags:\n---\n## 一、Systemd 概述\n__Systemd__ 是 Linux 系统工具，用来启动[守护进程](https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html)，已成为大多数发行版的标准配置。根据 Linux 惯例，字母d是守护进程（daemon）的缩写。Systemd 这个名字的含义，就是它要守护整个系统。\n\n```systemctl --version```  \n上面的命令可以查看你的 Systemd 的版本。\n\n__Systemd__ 的优点是功能强大，使用方便，缺点是体系庞大，非常复杂。事实上，现在还有很多人反对使用 Systemd，理由就是它过于复杂，与操作系统的其他部分强耦合，违反 $keep$ $simple$, $keep$ $stupid$ 的 [Unix](https://www.ruanyifeng.com/blog/2009/06/unix_philosophy.html)哲学。\n\n<!-- ![Alt text](image.png) -->\n<!-- （上图为 Systemd 架构图） -->\n\n## 二、常用命令\n对于那些支持 ```Systemd``` 的软件，安装的时候，会自动在```/usr/lib/systemd/system```目录添加一个配置文件。  \n\n而不支持 Systemd 的软件，如 ```Nginx```, ```Alist```...（以```Alist```为例）则需要手动编辑或创建 ```/usr/lib/systemd/system/alist.service```并添加如下内容，其中 ```path_alist``` 为 ```AList``` 所在的路径\n```shell\n[Unit]\nDescription=alist                        //名称\nAfter=network.target                     //在什么之后启动\n \n[Service]\nType=simple                              //启动类型\nWorkingDirectory=path_alist              \nExecStart=path_alist/alist server        //启动进程时执行的命令 \nRestart=on-failure\n \n[Install]\nWantedBy=multi-user.target\n```\n\n\n然后，执行 ```systemctl daemon-reload``` 重载配置，现在你可以使用这些命令来管理程序:  \n启动: ```systemctl start alist```  \n关闭: ```systemctl stop alist```  \n配置开机自启: ```systemctl enable alist```  \n取消开机自启: ```systemctl disable alist```  \n状态: ```systemctl status alist```  \n重启: ```systemctl restart alist```  \n\n\n## 三、读懂配置文件\n配置文件主要放在 ```/usr/lib/systemd/system``` 目录，也可能在 ```/etc/systemd/system``` 目录。找到配置文件以后，使用 ```vim``` 打开即可。\n\n命令可以用来查看配置文件，下面以 ```sshd.service``` 文件为例，它的作用是启动一个 ```SSH``` 服务器，供其他用户以 ```SSH``` 方式登录.\n\n```shell\n[root@jacl system]# systemctl cat sshd.service\n# /usr/lib/systemd/system/sshd.service\n\n[Unit]\nDescription=OpenSSH server daemon                              //当前服务的简单描述                          \nDocumentation=man:sshd(8) man:sshd_config(5)                   //文档位置\nAfter=network.target sshd-keygen.target                        \nWants=sshd-keygen.target\n\n[Service]\nType=notify\nEnvironmentFile=-/etc/crypto-policies/back-ends/opensshserver.config\nEnvironmentFile=-/etc/sysconfig/sshd\nExecStart=/usr/sbin/sshd -D $OPTIONS $CRYPTO_POLICY\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=process\nRestart=on-failure\nRestartSec=42s\n\n[Install]\nWantedBy=multi-user.target\n```\n可以看到，配置文件分成几个区块，每个区块包含若干条键值对。\n\n下面依次解释每个区块的内容。\n\n## 四、[Unit] 区块：启动顺序与依赖关系\n> **After**字段：表示如果```network.target```或```sshd-keygen.service```需要启动，那么```sshd.service```应该在它们之后启动。\n\n相应地，还有一个```Before```字段，定义```sshd.service```应该在哪些服务之前启动。\n\n注意，```After```和```Before```字段只涉及启动顺序，不涉及依赖关系。\n\n举例来说，某 **Web** 应用需要 **postgresql** 数据库储存数据。在配置文件中，它只定义要在 **postgresql** 之后启动，而没有定义依赖 **postgresql** 。上线后，由于某种原因，**postgresql** 需要重新启动，在停止服务期间，该 **Web** 应用就会无法建立数据库连接。\n\n设置依赖关系，需要使用```Wants```字段和```Requires```字段。\n\n> **Wants**字段：表示```sshd.service```与```sshd-keygen.service```之间存在\"弱依赖\"关系，即如果```sshd-keygen.service```启动失败或停止运行，不影响```sshd.service```继续执行。\n\n> **Requires**字段则表示\"强依赖\"关系，即如果该服务启动失败或异常退出，那么```sshd.service```也必须退出。\n\n## 五、Service] 区块：启动行为\n> **Service**区块定义如何启动当前服务。\n\n#### 启动命令\n许多软件都有自己的环境参数文件，该文件可以用```EnvironmentFile```字段读取。\n\n> **EnvironmentFile**字段：指定当前服务的环境参数文件。该文件内部的key=value键值对，可以用key的形式，在当前配置文件中获取。\n\n上面的例子中，**sshd** 的环境参数文件是```/etc/sysconfig/sshd```。\n\n配置文件里面最重要的字段是**ExecStart**。\n\n> **ExecStart**字段：定义启动进程时执行的命令。\n\n上面的例子中，启动```sshd```，执行的命令是```/usr/sbin/sshd -D $OPTIONS```，其中的变量```$OPTIONS```就来自```EnvironmentFile```字段指定的环境参数文件。\n\n与之作用相似的，还有如下这些字段。\n```shell\nExecReload字段：重启服务时执行的命令\nExecStop字段：停止服务时执行的命令\nExecStartPre字段：启动服务之前执行的命令\nExecStartPost字段：启动服务之后执行的命令\nExecStopPost字段：停止服务之后执行的命令\n```\n\n#### 启动类型\n**Type**字段定义启动类型。它可以设置的值如下。\n```shell\nsimple（默认值）：ExecStart字段启动的进程为主进程\nforking：ExecStart字段将以fork()方式启动，此时父进程将会退出，子进程将成为主进程\noneshot：类似于simple，但只执行一次，Systemd 会等它执行完，才启动其他服务\ndbus：类似于simple，但会等待 D-Bus 信号后启动\nnotify：类似于simple，启动结束后会发出通知信号，然后 Systemd 再启动其他服务\nidle：类似于simple，但是要等到其他任务都执行完，才会启动该服务。一种使用场合是为让该服务的输出，不与其他服务的输出相混合\n```\n下面是一个**oneshot**的例子，笔记本电脑启动时，要把触摸板关掉，配置文件可以这样写。\n```shell\n[Unit]\nDescription=Switch-off Touchpad\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/touchpad-off\n\n[Install]\nWantedBy=multi-user.target\n```\n上面的配置文件，启动类型设为**oneshot**，就表明这个服务只要运行一次就够了，不需要长期运行。\n\n如果关闭以后，将来某个时候还想打开，配置文件修改如下。\n```shell\n[Unit]\nDescription=Switch-off Touchpad\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/touchpad-off start\nExecStop=/usr/bin/touchpad-off stop\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target\n```\n上面配置文件中，**RemainAfterExit**字段设为**yes**，表示进程退出以后，服务仍然保持执行。这样的话，一旦使用**systemctl stop**命令停止服务，**ExecStop**指定的命令就会执行，从而重新开启触摸板。\n\n#### 重启行为\n\n","slug":"Systemd一些技巧","published":1,"updated":"2025-04-15T14:08:52.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkg00033od9bs3j2hkc","content":"<h2 id=\"一systemd-概述\">一、Systemd 概述</h2>\r\n<p><strong>Systemd</strong> 是 Linux 系统工具，用来启动<a class=\"link\" href=\"https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html\">守护进程<i class=\"fas fa-external-link-alt\"></i></a>，已成为大多数发行版的标准配置。根据\r\nLinux 惯例，字母d是守护进程（daemon）的缩写。Systemd\r\n这个名字的含义，就是它要守护整个系统。</p>\r\n<p><code>systemctl --version</code><br>\r\n上面的命令可以查看你的 Systemd 的版本。</p>\r\n<p><strong>Systemd</strong>\r\n的优点是功能强大，使用方便，缺点是体系庞大，非常复杂。事实上，现在还有很多人反对使用\r\nSystemd，理由就是它过于复杂，与操作系统的其他部分强耦合，违反 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.425ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1956 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(987,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1453,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g></g></g></svg></mjx-container></span> <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.695ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 2959 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(469,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(814,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1692,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2195,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2493,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g></g></g></svg></mjx-container></span>, <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.425ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1956 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(987,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1453,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g></g></g></svg></mjx-container></span> <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.267ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 2770 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(469,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(830,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1402,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1905,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2250,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g></g></g></svg></mjx-container></span> 的 <a class=\"link\" href=\"https://www.ruanyifeng.com/blog/2009/06/unix_philosophy.html\">Unix<i class=\"fas fa-external-link-alt\"></i></a>哲学。</p>\r\n<!-- ![Alt text](image.png) -->\r\n<!-- （上图为 Systemd 架构图） -->\r\n<h2 id=\"二常用命令\">二、常用命令</h2>\r\n<p>对于那些支持 <code>Systemd</code>\r\n的软件，安装的时候，会自动在<code>/usr/lib/systemd/system</code>目录添加一个配置文件。</p>\r\n<p>而不支持 Systemd 的软件，如 <code>Nginx</code>,\r\n<code>Alist</code>...（以<code>Alist</code>为例）则需要手动编辑或创建\r\n<code>/usr/lib/systemd/system/alist.service</code>并添加如下内容，其中\r\n<code>path_alist</code> 为 <code>AList</code> 所在的路径\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=alist                        //名称</span><br><span class=\"line\">After=network.target                     //在什么之后启动</span><br><span class=\"line\"> </span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple                              //启动类型</span><br><span class=\"line\">WorkingDirectory=path_alist              </span><br><span class=\"line\">ExecStart=path_alist/alist server        //启动进程时执行的命令 </span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\"> </span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p>\r\n<p>然后，执行 <code>systemctl daemon-reload</code>\r\n重载配置，现在你可以使用这些命令来管理程序:<br>\r\n启动: <code>systemctl start alist</code><br>\r\n关闭: <code>systemctl stop alist</code><br>\r\n配置开机自启: <code>systemctl enable alist</code><br>\r\n取消开机自启: <code>systemctl disable alist</code><br>\r\n状态: <code>systemctl status alist</code><br>\r\n重启: <code>systemctl restart alist</code></p>\r\n<h2 id=\"三读懂配置文件\">三、读懂配置文件</h2>\r\n<p>配置文件主要放在 <code>/usr/lib/systemd/system</code> 目录，也可能在\r\n<code>/etc/systemd/system</code> 目录。找到配置文件以后，使用\r\n<code>vim</code> 打开即可。</p>\r\n<p>命令可以用来查看配置文件，下面以 <code>sshd.service</code>\r\n文件为例，它的作用是启动一个 <code>SSH</code> 服务器，供其他用户以\r\n<code>SSH</code> 方式登录.</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jacl system]# systemctl cat sshd.service</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/usr/lib/systemd/system/sshd.service</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=OpenSSH server daemon                              //当前服务的简单描述                          </span><br><span class=\"line\">Documentation=man:sshd(8) man:sshd_config(5)                   //文档位置</span><br><span class=\"line\">After=network.target sshd-keygen.target                        </span><br><span class=\"line\">Wants=sshd-keygen.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=notify</span><br><span class=\"line\">EnvironmentFile=-/etc/crypto-policies/back-ends/opensshserver.config</span><br><span class=\"line\">EnvironmentFile=-/etc/sysconfig/sshd</span><br><span class=\"line\">ExecStart=/usr/sbin/sshd -D $OPTIONS $CRYPTO_POLICY</span><br><span class=\"line\">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=42s</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\r\n<p>可以看到，配置文件分成几个区块，每个区块包含若干条键值对。</p>\r\n<p>下面依次解释每个区块的内容。</p>\r\n<h2 id=\"四unit-区块启动顺序与依赖关系\">四、[Unit]\r\n区块：启动顺序与依赖关系</h2>\r\n<blockquote>\r\n<p><strong>After</strong>字段：表示如果<code>network.target</code>或<code>sshd-keygen.service</code>需要启动，那么<code>sshd.service</code>应该在它们之后启动。</p>\r\n</blockquote>\r\n<p>相应地，还有一个<code>Before</code>字段，定义<code>sshd.service</code>应该在哪些服务之前启动。</p>\r\n<p>注意，<code>After</code>和<code>Before</code>字段只涉及启动顺序，不涉及依赖关系。</p>\r\n<p>举例来说，某 <strong>Web</strong> 应用需要\r\n<strong>postgresql</strong> 数据库储存数据。在配置文件中，它只定义要在\r\n<strong>postgresql</strong> 之后启动，而没有定义依赖\r\n<strong>postgresql</strong>\r\n。上线后，由于某种原因，<strong>postgresql</strong>\r\n需要重新启动，在停止服务期间，该 <strong>Web</strong>\r\n应用就会无法建立数据库连接。</p>\r\n<p>设置依赖关系，需要使用<code>Wants</code>字段和<code>Requires</code>字段。</p>\r\n<blockquote>\r\n<p><strong>Wants</strong>字段：表示<code>sshd.service</code>与<code>sshd-keygen.service</code>之间存在\"弱依赖\"关系，即如果<code>sshd-keygen.service</code>启动失败或停止运行，不影响<code>sshd.service</code>继续执行。</p>\r\n</blockquote>\r\n<blockquote>\r\n<p><strong>Requires</strong>字段则表示\"强依赖\"关系，即如果该服务启动失败或异常退出，那么<code>sshd.service</code>也必须退出。</p>\r\n</blockquote>\r\n<h2 id=\"五service-区块启动行为\">五、Service] 区块：启动行为</h2>\r\n<blockquote>\r\n<p><strong>Service</strong>区块定义如何启动当前服务。</p>\r\n</blockquote>\r\n<h4 id=\"启动命令\">启动命令</h4>\r\n<p>许多软件都有自己的环境参数文件，该文件可以用<code>EnvironmentFile</code>字段读取。</p>\r\n<blockquote>\r\n<p><strong>EnvironmentFile</strong>字段：指定当前服务的环境参数文件。该文件内部的key=value键值对，可以用key的形式，在当前配置文件中获取。</p>\r\n</blockquote>\r\n<p>上面的例子中，<strong>sshd</strong>\r\n的环境参数文件是<code>/etc/sysconfig/sshd</code>。</p>\r\n<p>配置文件里面最重要的字段是<strong>ExecStart</strong>。</p>\r\n<blockquote>\r\n<p><strong>ExecStart</strong>字段：定义启动进程时执行的命令。</p>\r\n</blockquote>\r\n<p>上面的例子中，启动<code>sshd</code>，执行的命令是<code>/usr/sbin/sshd -D $OPTIONS</code>，其中的变量<code>$OPTIONS</code>就来自<code>EnvironmentFile</code>字段指定的环境参数文件。</p>\r\n<p>与之作用相似的，还有如下这些字段。 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExecReload字段：重启服务时执行的命令</span><br><span class=\"line\">ExecStop字段：停止服务时执行的命令</span><br><span class=\"line\">ExecStartPre字段：启动服务之前执行的命令</span><br><span class=\"line\">ExecStartPost字段：启动服务之后执行的命令</span><br><span class=\"line\">ExecStopPost字段：停止服务之后执行的命令</span><br></pre></td></tr></table></figure></p>\r\n<h4 id=\"启动类型\">启动类型</h4>\r\n<p><strong>Type</strong>字段定义启动类型。它可以设置的值如下。\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">simple（默认值）：ExecStart字段启动的进程为主进程</span><br><span class=\"line\">forking：ExecStart字段将以fork()方式启动，此时父进程将会退出，子进程将成为主进程</span><br><span class=\"line\">oneshot：类似于simple，但只执行一次，Systemd 会等它执行完，才启动其他服务</span><br><span class=\"line\">dbus：类似于simple，但会等待 D-Bus 信号后启动</span><br><span class=\"line\">notify：类似于simple，启动结束后会发出通知信号，然后 Systemd 再启动其他服务</span><br><span class=\"line\">idle：类似于simple，但是要等到其他任务都执行完，才会启动该服务。一种使用场合是为让该服务的输出，不与其他服务的输出相混合</span><br></pre></td></tr></table></figure>\r\n下面是一个<strong>oneshot</strong>的例子，笔记本电脑启动时，要把触摸板关掉，配置文件可以这样写。\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Switch-off Touchpad</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=oneshot</span><br><span class=\"line\">ExecStart=/usr/bin/touchpad-off</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\r\n上面的配置文件，启动类型设为<strong>oneshot</strong>，就表明这个服务只要运行一次就够了，不需要长期运行。</p>\r\n<p>如果关闭以后，将来某个时候还想打开，配置文件修改如下。 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Switch-off Touchpad</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=oneshot</span><br><span class=\"line\">ExecStart=/usr/bin/touchpad-off start</span><br><span class=\"line\">ExecStop=/usr/bin/touchpad-off stop</span><br><span class=\"line\">RemainAfterExit=yes</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\r\n上面配置文件中，<strong>RemainAfterExit</strong>字段设为<strong>yes</strong>，表示进程退出以后，服务仍然保持执行。这样的话，一旦使用<strong>systemctl\r\nstop</strong>命令停止服务，<strong>ExecStop</strong>指定的命令就会执行，从而重新开启触摸板。</p>\r\n<h4 id=\"重启行为\">重启行为</h4>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一systemd-概述\">一、Systemd 概述</h2>\r\n<p><strong>Systemd</strong> 是 Linux 系统工具，用来启动<a class=\"link\" href=\"https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html\">守护进程<i class=\"fas fa-external-link-alt\"></i></a>，已成为大多数发行版的标准配置。根据\r\nLinux 惯例，字母d是守护进程（daemon）的缩写。Systemd\r\n这个名字的含义，就是它要守护整个系统。</p>\r\n<p><code>systemctl --version</code><br>\r\n上面的命令可以查看你的 Systemd 的版本。</p>\r\n<p><strong>Systemd</strong>\r\n的优点是功能强大，使用方便，缺点是体系庞大，非常复杂。事实上，现在还有很多人反对使用\r\nSystemd，理由就是它过于复杂，与操作系统的其他部分强耦合，违反 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.425ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1956 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(987,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1453,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g></g></g></svg></mjx-container></span> <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.695ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 2959 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(469,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(814,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1692,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2195,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2493,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g></g></g></svg></mjx-container></span>, <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.425ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1956 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(987,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1453,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g></g></g></svg></mjx-container></span> <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.267ex\" height=\"2.009ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 2770 888\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(469,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(830,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1402,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1905,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2250,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g></g></g></svg></mjx-container></span> 的 <a class=\"link\" href=\"https://www.ruanyifeng.com/blog/2009/06/unix_philosophy.html\">Unix<i class=\"fas fa-external-link-alt\"></i></a>哲学。</p>\r\n<!-- ![Alt text](image.png) -->\r\n<!-- （上图为 Systemd 架构图） -->\r\n<h2 id=\"二常用命令\">二、常用命令</h2>\r\n<p>对于那些支持 <code>Systemd</code>\r\n的软件，安装的时候，会自动在<code>/usr/lib/systemd/system</code>目录添加一个配置文件。</p>\r\n<p>而不支持 Systemd 的软件，如 <code>Nginx</code>,\r\n<code>Alist</code>...（以<code>Alist</code>为例）则需要手动编辑或创建\r\n<code>/usr/lib/systemd/system/alist.service</code>并添加如下内容，其中\r\n<code>path_alist</code> 为 <code>AList</code> 所在的路径\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=alist                        //名称</span><br><span class=\"line\">After=network.target                     //在什么之后启动</span><br><span class=\"line\"> </span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple                              //启动类型</span><br><span class=\"line\">WorkingDirectory=path_alist              </span><br><span class=\"line\">ExecStart=path_alist/alist server        //启动进程时执行的命令 </span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\"> </span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p>\r\n<p>然后，执行 <code>systemctl daemon-reload</code>\r\n重载配置，现在你可以使用这些命令来管理程序:<br>\r\n启动: <code>systemctl start alist</code><br>\r\n关闭: <code>systemctl stop alist</code><br>\r\n配置开机自启: <code>systemctl enable alist</code><br>\r\n取消开机自启: <code>systemctl disable alist</code><br>\r\n状态: <code>systemctl status alist</code><br>\r\n重启: <code>systemctl restart alist</code></p>\r\n<h2 id=\"三读懂配置文件\">三、读懂配置文件</h2>\r\n<p>配置文件主要放在 <code>/usr/lib/systemd/system</code> 目录，也可能在\r\n<code>/etc/systemd/system</code> 目录。找到配置文件以后，使用\r\n<code>vim</code> 打开即可。</p>\r\n<p>命令可以用来查看配置文件，下面以 <code>sshd.service</code>\r\n文件为例，它的作用是启动一个 <code>SSH</code> 服务器，供其他用户以\r\n<code>SSH</code> 方式登录.</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jacl system]# systemctl cat sshd.service</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/usr/lib/systemd/system/sshd.service</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=OpenSSH server daemon                              //当前服务的简单描述                          </span><br><span class=\"line\">Documentation=man:sshd(8) man:sshd_config(5)                   //文档位置</span><br><span class=\"line\">After=network.target sshd-keygen.target                        </span><br><span class=\"line\">Wants=sshd-keygen.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=notify</span><br><span class=\"line\">EnvironmentFile=-/etc/crypto-policies/back-ends/opensshserver.config</span><br><span class=\"line\">EnvironmentFile=-/etc/sysconfig/sshd</span><br><span class=\"line\">ExecStart=/usr/sbin/sshd -D $OPTIONS $CRYPTO_POLICY</span><br><span class=\"line\">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=42s</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\r\n<p>可以看到，配置文件分成几个区块，每个区块包含若干条键值对。</p>\r\n<p>下面依次解释每个区块的内容。</p>\r\n<h2 id=\"四unit-区块启动顺序与依赖关系\">四、[Unit]\r\n区块：启动顺序与依赖关系</h2>\r\n<blockquote>\r\n<p><strong>After</strong>字段：表示如果<code>network.target</code>或<code>sshd-keygen.service</code>需要启动，那么<code>sshd.service</code>应该在它们之后启动。</p>\r\n</blockquote>\r\n<p>相应地，还有一个<code>Before</code>字段，定义<code>sshd.service</code>应该在哪些服务之前启动。</p>\r\n<p>注意，<code>After</code>和<code>Before</code>字段只涉及启动顺序，不涉及依赖关系。</p>\r\n<p>举例来说，某 <strong>Web</strong> 应用需要\r\n<strong>postgresql</strong> 数据库储存数据。在配置文件中，它只定义要在\r\n<strong>postgresql</strong> 之后启动，而没有定义依赖\r\n<strong>postgresql</strong>\r\n。上线后，由于某种原因，<strong>postgresql</strong>\r\n需要重新启动，在停止服务期间，该 <strong>Web</strong>\r\n应用就会无法建立数据库连接。</p>\r\n<p>设置依赖关系，需要使用<code>Wants</code>字段和<code>Requires</code>字段。</p>\r\n<blockquote>\r\n<p><strong>Wants</strong>字段：表示<code>sshd.service</code>与<code>sshd-keygen.service</code>之间存在\"弱依赖\"关系，即如果<code>sshd-keygen.service</code>启动失败或停止运行，不影响<code>sshd.service</code>继续执行。</p>\r\n</blockquote>\r\n<blockquote>\r\n<p><strong>Requires</strong>字段则表示\"强依赖\"关系，即如果该服务启动失败或异常退出，那么<code>sshd.service</code>也必须退出。</p>\r\n</blockquote>\r\n<h2 id=\"五service-区块启动行为\">五、Service] 区块：启动行为</h2>\r\n<blockquote>\r\n<p><strong>Service</strong>区块定义如何启动当前服务。</p>\r\n</blockquote>\r\n<h4 id=\"启动命令\">启动命令</h4>\r\n<p>许多软件都有自己的环境参数文件，该文件可以用<code>EnvironmentFile</code>字段读取。</p>\r\n<blockquote>\r\n<p><strong>EnvironmentFile</strong>字段：指定当前服务的环境参数文件。该文件内部的key=value键值对，可以用key的形式，在当前配置文件中获取。</p>\r\n</blockquote>\r\n<p>上面的例子中，<strong>sshd</strong>\r\n的环境参数文件是<code>/etc/sysconfig/sshd</code>。</p>\r\n<p>配置文件里面最重要的字段是<strong>ExecStart</strong>。</p>\r\n<blockquote>\r\n<p><strong>ExecStart</strong>字段：定义启动进程时执行的命令。</p>\r\n</blockquote>\r\n<p>上面的例子中，启动<code>sshd</code>，执行的命令是<code>/usr/sbin/sshd -D $OPTIONS</code>，其中的变量<code>$OPTIONS</code>就来自<code>EnvironmentFile</code>字段指定的环境参数文件。</p>\r\n<p>与之作用相似的，还有如下这些字段。 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExecReload字段：重启服务时执行的命令</span><br><span class=\"line\">ExecStop字段：停止服务时执行的命令</span><br><span class=\"line\">ExecStartPre字段：启动服务之前执行的命令</span><br><span class=\"line\">ExecStartPost字段：启动服务之后执行的命令</span><br><span class=\"line\">ExecStopPost字段：停止服务之后执行的命令</span><br></pre></td></tr></table></figure></p>\r\n<h4 id=\"启动类型\">启动类型</h4>\r\n<p><strong>Type</strong>字段定义启动类型。它可以设置的值如下。\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">simple（默认值）：ExecStart字段启动的进程为主进程</span><br><span class=\"line\">forking：ExecStart字段将以fork()方式启动，此时父进程将会退出，子进程将成为主进程</span><br><span class=\"line\">oneshot：类似于simple，但只执行一次，Systemd 会等它执行完，才启动其他服务</span><br><span class=\"line\">dbus：类似于simple，但会等待 D-Bus 信号后启动</span><br><span class=\"line\">notify：类似于simple，启动结束后会发出通知信号，然后 Systemd 再启动其他服务</span><br><span class=\"line\">idle：类似于simple，但是要等到其他任务都执行完，才会启动该服务。一种使用场合是为让该服务的输出，不与其他服务的输出相混合</span><br></pre></td></tr></table></figure>\r\n下面是一个<strong>oneshot</strong>的例子，笔记本电脑启动时，要把触摸板关掉，配置文件可以这样写。\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Switch-off Touchpad</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=oneshot</span><br><span class=\"line\">ExecStart=/usr/bin/touchpad-off</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\r\n上面的配置文件，启动类型设为<strong>oneshot</strong>，就表明这个服务只要运行一次就够了，不需要长期运行。</p>\r\n<p>如果关闭以后，将来某个时候还想打开，配置文件修改如下。 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Switch-off Touchpad</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=oneshot</span><br><span class=\"line\">ExecStart=/usr/bin/touchpad-off start</span><br><span class=\"line\">ExecStop=/usr/bin/touchpad-off stop</span><br><span class=\"line\">RemainAfterExit=yes</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\r\n上面配置文件中，<strong>RemainAfterExit</strong>字段设为<strong>yes</strong>，表示进程退出以后，服务仍然保持执行。这样的话，一旦使用<strong>systemctl\r\nstop</strong>命令停止服务，<strong>ExecStop</strong>指定的命令就会执行，从而重新开启触摸板。</p>\r\n<h4 id=\"重启行为\">重启行为</h4>\r\n"},{"title":"Win11 Activation","date":"2023-09-07T10:34:45.000Z","_content":"## win11专业版激活\n\n```shell\n用管理员在cmd中输入下列命令:\n1.slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX\n2.slmgr /skms kms.03k.org\n3.slmgr /ato\n```\n","source":"_posts/Win11Activation.md","raw":"---\ntitle: Win11 Activation\ndate: 2023-09-07 18:34:45\ncategories: 杂项\n---\n## win11专业版激活\n\n```shell\n用管理员在cmd中输入下列命令:\n1.slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX\n2.slmgr /skms kms.03k.org\n3.slmgr /ato\n```\n","slug":"Win11Activation","published":1,"updated":"2025-04-15T14:08:52.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkh00053od9etcrf0th","content":"<h2 id=\"win11专业版激活\">win11专业版激活</h2>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用管理员在cmd中输入下列命令:</span><br><span class=\"line\">1.slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class=\"line\">2.slmgr /skms kms.03k.org</span><br><span class=\"line\">3.slmgr /ato</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"win11专业版激活\">win11专业版激活</h2>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用管理员在cmd中输入下列命令:</span><br><span class=\"line\">1.slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class=\"line\">2.slmgr /skms kms.03k.org</span><br><span class=\"line\">3.slmgr /ato</span><br></pre></td></tr></table></figure>\r\n"},{"title":"Proxifier 2023年11月时最新版 激活教程","date":"2024-02-16T15:27:14.000Z","_content":"## 前言\nProxifier 是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持64位系统支持Xp，Vista，Win7，支持socks4，socks5，http 代理协议，支持TCPUDP协议，可以指定端口，IP，指定程序等运行模式，兼容性非常好。有许多网络应用程序不支持通过代理服务器工作，因此不能用于局域网或防火墙后面。这些会损害公司的隐私和导致很多限制。Proxifier 解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。此外它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。\n\n## 主要特点\n代理一切\n\n通过代理重定向任何互联网应用程序（浏览器、电子邮件、数据库、游戏等）的连接。\n\n掌握您的企业网络\n\n控制对资源的访问。通过单个入口点路由所有连接。从一个地方远程更新多个配置。\n\n改善您的联系\n\n通过更快的路线路由互联网流量。\n\n安全和隐私\n\n上网的轻量级和灵活的替代方案。通过加密通道隧道连接。\n\n超越限制\n\n使用代理作为您的 Internet 活动的网关。\n\n灵活性\n\n使用基于规则的系统将不同的代理或链分配给不同的连接。\n\n总结\n\n**抓包比较好用**\n\n软件官方网站地址  \nhttps://www.proxifier.com/\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/01.png)\n\n\n## 安装\n先去官网下载[The Most Advanced Proxy Client](https://www.proxifier.com/)安装版\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/02.png)\n\n我这里使用的标准版即安装版，双击启动安装包\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/03.png)\n\n中间弹出受否允许更改设备，请选择是，然后进入安装界面\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/04.png)\n\n然后点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/05.png)\n\n选择同意协议，然后点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/06.png)\n\n选择安装位置后点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/07.png)\n\n点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/08.png)\n\n这里默认即可，点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/09.png)\n\n这里按自己的情况勾选，我这里是因为我都不需要，选项介绍：\n\n- 是否让Proxifier开机自启动\n- 检查Proxifier的更新\n- 在桌面创建一个Proxifier的快捷方式\n\n选择完后点击Next\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/10.png)\n\n点击install进行安装操作\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/11.png)\n\n点击Finish完成安装并启动Proxifier\n\n## 激活Proxifier\n这东西是要购买的，所以这里得给Proxifier注册一下\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/12.png)\n\n点击Enter Registration key..进入注册界面\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/13.png)\n\n- 上面的是注册使用的用户名\n- 下面的是注册使用key\n\n下面是一些key\n\n>PS:尽量使用4.x系列\n\n- standard(标准版)\n```\n4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP\nYHAEF-HWLHS-CQR2A-ZENEQ-35H26\n987NH-LYFSC-L4V37-PWN3R-PWE7F\nCVYAW-WWVJD-8LA2Y-PWN3R-CZA82\nTET7R-EY3CC-4E43T-H0NUS-XQCS9\nG8E33-937CU-WM3YE-H0NUS-W236X\nNRNQ9-KWN42-PSU2N-CYBER-HCEB7\nGG2U7-5WH8W-TZF22-CYBER-BGTY3\nS4EMQ-NYMZF-LFT3E-ARSEN-SNZLF\nATV34-T2W3Y-WHNWV-ARSEN-AJJ4L\n5EZ8G-C3WL5-B56YG-SCXM9-6QZAP\n```\n\n- portable(便携版即免安装版)\n```\nYYEQ8-PYURB-PVJ3E-ZENEQ-6KCYC\nV4FRJ-JYBNC-X4P3F-ZENEQ-G5YNE\nL6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C\n```\n\n- macos\n```\n87PZC-V3C3H-GTLYP-ZENEQ-2GJLT\nNBBCX-D242M-F97WB-ZENEQ-7VH3H\nP427L-9Y552-5433E-8DSR3-58Z68\n```\n\n### 注册key的使用\n随便找一个，比如我这里 `4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP`\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/14.png)\n\n注册时有选项，问你是只为当前用户注册，还是此电脑上的所有用户，看自己选择。选择完成之后点击OK进行注册\n\n> PS：点击完OK后，会弹权限认证，询问是否允许Proxifier更改设备，这个时候请选择是\n> \n> ![图片](./Proxifier-2023年11月时最新版-激活教程/15.png)\n\n上面的图就是成功了的界面，点击确定后就可以快乐的使用Proxifier了\n\n原文链接：https://www.cnblogs.com/wushiyiwuzhong/p/17809020.html","source":"_posts/Proxifier-2023年11月时最新版-激活教程.md","raw":"---\ntitle: Proxifier 2023年11月时最新版 激活教程\ndate: 2024-02-16 23:27:14\ntags:\n---\n## 前言\nProxifier 是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持64位系统支持Xp，Vista，Win7，支持socks4，socks5，http 代理协议，支持TCPUDP协议，可以指定端口，IP，指定程序等运行模式，兼容性非常好。有许多网络应用程序不支持通过代理服务器工作，因此不能用于局域网或防火墙后面。这些会损害公司的隐私和导致很多限制。Proxifier 解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。此外它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。\n\n## 主要特点\n代理一切\n\n通过代理重定向任何互联网应用程序（浏览器、电子邮件、数据库、游戏等）的连接。\n\n掌握您的企业网络\n\n控制对资源的访问。通过单个入口点路由所有连接。从一个地方远程更新多个配置。\n\n改善您的联系\n\n通过更快的路线路由互联网流量。\n\n安全和隐私\n\n上网的轻量级和灵活的替代方案。通过加密通道隧道连接。\n\n超越限制\n\n使用代理作为您的 Internet 活动的网关。\n\n灵活性\n\n使用基于规则的系统将不同的代理或链分配给不同的连接。\n\n总结\n\n**抓包比较好用**\n\n软件官方网站地址  \nhttps://www.proxifier.com/\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/01.png)\n\n\n## 安装\n先去官网下载[The Most Advanced Proxy Client](https://www.proxifier.com/)安装版\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/02.png)\n\n我这里使用的标准版即安装版，双击启动安装包\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/03.png)\n\n中间弹出受否允许更改设备，请选择是，然后进入安装界面\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/04.png)\n\n然后点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/05.png)\n\n选择同意协议，然后点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/06.png)\n\n选择安装位置后点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/07.png)\n\n点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/08.png)\n\n这里默认即可，点击Next进入下一步\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/09.png)\n\n这里按自己的情况勾选，我这里是因为我都不需要，选项介绍：\n\n- 是否让Proxifier开机自启动\n- 检查Proxifier的更新\n- 在桌面创建一个Proxifier的快捷方式\n\n选择完后点击Next\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/10.png)\n\n点击install进行安装操作\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/11.png)\n\n点击Finish完成安装并启动Proxifier\n\n## 激活Proxifier\n这东西是要购买的，所以这里得给Proxifier注册一下\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/12.png)\n\n点击Enter Registration key..进入注册界面\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/13.png)\n\n- 上面的是注册使用的用户名\n- 下面的是注册使用key\n\n下面是一些key\n\n>PS:尽量使用4.x系列\n\n- standard(标准版)\n```\n4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP\nYHAEF-HWLHS-CQR2A-ZENEQ-35H26\n987NH-LYFSC-L4V37-PWN3R-PWE7F\nCVYAW-WWVJD-8LA2Y-PWN3R-CZA82\nTET7R-EY3CC-4E43T-H0NUS-XQCS9\nG8E33-937CU-WM3YE-H0NUS-W236X\nNRNQ9-KWN42-PSU2N-CYBER-HCEB7\nGG2U7-5WH8W-TZF22-CYBER-BGTY3\nS4EMQ-NYMZF-LFT3E-ARSEN-SNZLF\nATV34-T2W3Y-WHNWV-ARSEN-AJJ4L\n5EZ8G-C3WL5-B56YG-SCXM9-6QZAP\n```\n\n- portable(便携版即免安装版)\n```\nYYEQ8-PYURB-PVJ3E-ZENEQ-6KCYC\nV4FRJ-JYBNC-X4P3F-ZENEQ-G5YNE\nL6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C\n```\n\n- macos\n```\n87PZC-V3C3H-GTLYP-ZENEQ-2GJLT\nNBBCX-D242M-F97WB-ZENEQ-7VH3H\nP427L-9Y552-5433E-8DSR3-58Z68\n```\n\n### 注册key的使用\n随便找一个，比如我这里 `4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP`\n\n![图片](./Proxifier-2023年11月时最新版-激活教程/14.png)\n\n注册时有选项，问你是只为当前用户注册，还是此电脑上的所有用户，看自己选择。选择完成之后点击OK进行注册\n\n> PS：点击完OK后，会弹权限认证，询问是否允许Proxifier更改设备，这个时候请选择是\n> \n> ![图片](./Proxifier-2023年11月时最新版-激活教程/15.png)\n\n上面的图就是成功了的界面，点击确定后就可以快乐的使用Proxifier了\n\n原文链接：https://www.cnblogs.com/wushiyiwuzhong/p/17809020.html","slug":"Proxifier-2023年11月时最新版-激活教程","published":1,"updated":"2025-04-15T14:08:52.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkh00073od97cpn2duu","content":"<h2 id=\"前言\">前言</h2>\r\n<p>Proxifier\r\n是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持64位系统支持Xp，Vista，Win7，支持socks4，socks5，http\r\n代理协议，支持TCPUDP协议，可以指定端口，IP，指定程序等运行模式，兼容性非常好。有许多网络应用程序不支持通过代理服务器工作，因此不能用于局域网或防火墙后面。这些会损害公司的隐私和导致很多限制。Proxifier\r\n解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。此外它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。</p>\r\n<h2 id=\"主要特点\">主要特点</h2>\r\n<p>代理一切</p>\r\n<p>通过代理重定向任何互联网应用程序（浏览器、电子邮件、数据库、游戏等）的连接。</p>\r\n<p>掌握您的企业网络</p>\r\n<p>控制对资源的访问。通过单个入口点路由所有连接。从一个地方远程更新多个配置。</p>\r\n<p>改善您的联系</p>\r\n<p>通过更快的路线路由互联网流量。</p>\r\n<p>安全和隐私</p>\r\n<p>上网的轻量级和灵活的替代方案。通过加密通道隧道连接。</p>\r\n<p>超越限制</p>\r\n<p>使用代理作为您的 Internet 活动的网关。</p>\r\n<p>灵活性</p>\r\n<p>使用基于规则的系统将不同的代理或链分配给不同的连接。</p>\r\n<p>总结</p>\r\n<p><strong>抓包比较好用</strong></p>\r\n<p>软件官方网站地址<br>\r\nhttps://www.proxifier.com/</p>\r\n<figure>\r\n<img src=\"/.io//01.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<h2 id=\"安装\">安装</h2>\r\n<p>先去官网下载<a class=\"link\" href=\"https://www.proxifier.com/\">The Most Advanced\r\nProxy Client<i class=\"fas fa-external-link-alt\"></i></a>安装版</p>\r\n<figure>\r\n<img src=\"/.io//02.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>我这里使用的标准版即安装版，双击启动安装包</p>\r\n<figure>\r\n<img src=\"/.io//03.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>中间弹出受否允许更改设备，请选择是，然后进入安装界面</p>\r\n<figure>\r\n<img src=\"/.io//04.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>然后点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//05.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>选择同意协议，然后点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//06.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>选择安装位置后点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//07.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//08.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>这里默认即可，点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//09.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>这里按自己的情况勾选，我这里是因为我都不需要，选项介绍：</p>\r\n<ul>\r\n<li>是否让Proxifier开机自启动</li>\r\n<li>检查Proxifier的更新</li>\r\n<li>在桌面创建一个Proxifier的快捷方式</li>\r\n</ul>\r\n<p>选择完后点击Next</p>\r\n<figure>\r\n<img src=\"/.io//10.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击install进行安装操作</p>\r\n<figure>\r\n<img src=\"/.io//11.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击Finish完成安装并启动Proxifier</p>\r\n<h2 id=\"激活proxifier\">激活Proxifier</h2>\r\n<p>这东西是要购买的，所以这里得给Proxifier注册一下</p>\r\n<figure>\r\n<img src=\"/.io//12.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击Enter Registration key..进入注册界面</p>\r\n<figure>\r\n<img src=\"/.io//13.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<ul>\r\n<li>上面的是注册使用的用户名</li>\r\n<li>下面的是注册使用key</li>\r\n</ul>\r\n<p>下面是一些key</p>\r\n<blockquote>\r\n<p>PS:尽量使用4.x系列</p>\r\n</blockquote>\r\n<ul>\r\n<li><p>standard(标准版) <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP</span><br><span class=\"line\">YHAEF-HWLHS-CQR2A-ZENEQ-35H26</span><br><span class=\"line\">987NH-LYFSC-L4V37-PWN3R-PWE7F</span><br><span class=\"line\">CVYAW-WWVJD-8LA2Y-PWN3R-CZA82</span><br><span class=\"line\">TET7R-EY3CC-4E43T-H0NUS-XQCS9</span><br><span class=\"line\">G8E33-937CU-WM3YE-H0NUS-W236X</span><br><span class=\"line\">NRNQ9-KWN42-PSU2N-CYBER-HCEB7</span><br><span class=\"line\">GG2U7-5WH8W-TZF22-CYBER-BGTY3</span><br><span class=\"line\">S4EMQ-NYMZF-LFT3E-ARSEN-SNZLF</span><br><span class=\"line\">ATV34-T2W3Y-WHNWV-ARSEN-AJJ4L</span><br><span class=\"line\">5EZ8G-C3WL5-B56YG-SCXM9-6QZAP</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>portable(便携版即免安装版) <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YYEQ8-PYURB-PVJ3E-ZENEQ-6KCYC</span><br><span class=\"line\">V4FRJ-JYBNC-X4P3F-ZENEQ-G5YNE</span><br><span class=\"line\">L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>macos <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">87PZC-V3C3H-GTLYP-ZENEQ-2GJLT</span><br><span class=\"line\">NBBCX-D242M-F97WB-ZENEQ-7VH3H</span><br><span class=\"line\">P427L-9Y552-5433E-8DSR3-58Z68</span><br></pre></td></tr></table></figure></p></li>\r\n</ul>\r\n<h3 id=\"注册key的使用\">注册key的使用</h3>\r\n<p>随便找一个，比如我这里 <code>4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP</code></p>\r\n<figure>\r\n<img src=\"/.io//14.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>注册时有选项，问你是只为当前用户注册，还是此电脑上的所有用户，看自己选择。选择完成之后点击OK进行注册</p>\r\n<blockquote>\r\n<p>PS：点击完OK后，会弹权限认证，询问是否允许Proxifier更改设备，这个时候请选择是</p>\r\n<figure>\r\n<img src=\"/.io//15.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n</blockquote>\r\n<p>上面的图就是成功了的界面，点击确定后就可以快乐的使用Proxifier了</p>\r\n<p>原文链接：https://www.cnblogs.com/wushiyiwuzhong/p/17809020.html</p>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\">前言</h2>\r\n<p>Proxifier\r\n是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持64位系统支持Xp，Vista，Win7，支持socks4，socks5，http\r\n代理协议，支持TCPUDP协议，可以指定端口，IP，指定程序等运行模式，兼容性非常好。有许多网络应用程序不支持通过代理服务器工作，因此不能用于局域网或防火墙后面。这些会损害公司的隐私和导致很多限制。Proxifier\r\n解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。此外它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。</p>\r\n<h2 id=\"主要特点\">主要特点</h2>\r\n<p>代理一切</p>\r\n<p>通过代理重定向任何互联网应用程序（浏览器、电子邮件、数据库、游戏等）的连接。</p>\r\n<p>掌握您的企业网络</p>\r\n<p>控制对资源的访问。通过单个入口点路由所有连接。从一个地方远程更新多个配置。</p>\r\n<p>改善您的联系</p>\r\n<p>通过更快的路线路由互联网流量。</p>\r\n<p>安全和隐私</p>\r\n<p>上网的轻量级和灵活的替代方案。通过加密通道隧道连接。</p>\r\n<p>超越限制</p>\r\n<p>使用代理作为您的 Internet 活动的网关。</p>\r\n<p>灵活性</p>\r\n<p>使用基于规则的系统将不同的代理或链分配给不同的连接。</p>\r\n<p>总结</p>\r\n<p><strong>抓包比较好用</strong></p>\r\n<p>软件官方网站地址<br>\r\nhttps://www.proxifier.com/</p>\r\n<figure>\r\n<img src=\"/.io//01.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<h2 id=\"安装\">安装</h2>\r\n<p>先去官网下载<a class=\"link\" href=\"https://www.proxifier.com/\">The Most Advanced\r\nProxy Client<i class=\"fas fa-external-link-alt\"></i></a>安装版</p>\r\n<figure>\r\n<img src=\"/.io//02.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>我这里使用的标准版即安装版，双击启动安装包</p>\r\n<figure>\r\n<img src=\"/.io//03.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>中间弹出受否允许更改设备，请选择是，然后进入安装界面</p>\r\n<figure>\r\n<img src=\"/.io//04.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>然后点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//05.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>选择同意协议，然后点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//06.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>选择安装位置后点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//07.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//08.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>这里默认即可，点击Next进入下一步</p>\r\n<figure>\r\n<img src=\"/.io//09.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>这里按自己的情况勾选，我这里是因为我都不需要，选项介绍：</p>\r\n<ul>\r\n<li>是否让Proxifier开机自启动</li>\r\n<li>检查Proxifier的更新</li>\r\n<li>在桌面创建一个Proxifier的快捷方式</li>\r\n</ul>\r\n<p>选择完后点击Next</p>\r\n<figure>\r\n<img src=\"/.io//10.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击install进行安装操作</p>\r\n<figure>\r\n<img src=\"/.io//11.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击Finish完成安装并启动Proxifier</p>\r\n<h2 id=\"激活proxifier\">激活Proxifier</h2>\r\n<p>这东西是要购买的，所以这里得给Proxifier注册一下</p>\r\n<figure>\r\n<img src=\"/.io//12.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>点击Enter Registration key..进入注册界面</p>\r\n<figure>\r\n<img src=\"/.io//13.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<ul>\r\n<li>上面的是注册使用的用户名</li>\r\n<li>下面的是注册使用key</li>\r\n</ul>\r\n<p>下面是一些key</p>\r\n<blockquote>\r\n<p>PS:尽量使用4.x系列</p>\r\n</blockquote>\r\n<ul>\r\n<li><p>standard(标准版) <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP</span><br><span class=\"line\">YHAEF-HWLHS-CQR2A-ZENEQ-35H26</span><br><span class=\"line\">987NH-LYFSC-L4V37-PWN3R-PWE7F</span><br><span class=\"line\">CVYAW-WWVJD-8LA2Y-PWN3R-CZA82</span><br><span class=\"line\">TET7R-EY3CC-4E43T-H0NUS-XQCS9</span><br><span class=\"line\">G8E33-937CU-WM3YE-H0NUS-W236X</span><br><span class=\"line\">NRNQ9-KWN42-PSU2N-CYBER-HCEB7</span><br><span class=\"line\">GG2U7-5WH8W-TZF22-CYBER-BGTY3</span><br><span class=\"line\">S4EMQ-NYMZF-LFT3E-ARSEN-SNZLF</span><br><span class=\"line\">ATV34-T2W3Y-WHNWV-ARSEN-AJJ4L</span><br><span class=\"line\">5EZ8G-C3WL5-B56YG-SCXM9-6QZAP</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>portable(便携版即免安装版) <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YYEQ8-PYURB-PVJ3E-ZENEQ-6KCYC</span><br><span class=\"line\">V4FRJ-JYBNC-X4P3F-ZENEQ-G5YNE</span><br><span class=\"line\">L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>macos <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">87PZC-V3C3H-GTLYP-ZENEQ-2GJLT</span><br><span class=\"line\">NBBCX-D242M-F97WB-ZENEQ-7VH3H</span><br><span class=\"line\">P427L-9Y552-5433E-8DSR3-58Z68</span><br></pre></td></tr></table></figure></p></li>\r\n</ul>\r\n<h3 id=\"注册key的使用\">注册key的使用</h3>\r\n<p>随便找一个，比如我这里 <code>4MHDA-C3FNN-EV6YH-ZENEQ-5A2CP</code></p>\r\n<figure>\r\n<img src=\"/.io//14.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n<p>注册时有选项，问你是只为当前用户注册，还是此电脑上的所有用户，看自己选择。选择完成之后点击OK进行注册</p>\r\n<blockquote>\r\n<p>PS：点击完OK后，会弹权限认证，询问是否允许Proxifier更改设备，这个时候请选择是</p>\r\n<figure>\r\n<img src=\"/.io//15.png\" alt=\"图片\">\r\n<figcaption aria-hidden=\"true\">图片</figcaption>\r\n</figure>\r\n</blockquote>\r\n<p>上面的图就是成功了的界面，点击确定后就可以快乐的使用Proxifier了</p>\r\n<p>原文链接：https://www.cnblogs.com/wushiyiwuzhong/p/17809020.html</p>\r\n"},{"title":"codeforces1870C","date":"2023-09-07T13:21:59.000Z","mathjax":true,"_content":"[codeforces1870C][def]\n\n## 题意\n给你两个整数 $n$ 和 $k$。同时给你一个大小为 $n$的整数数组 $a_1, a_2, \\ldots, a_n$。已知对于所有 $1 \\leq i \\leq n$， $1 \\leq a_i \\leq k$.\n\n定义大小为 $n \\times n$的二维数组 $b$如下：$b_{i, j} = \\min(a_i, a_j)$.将数组$b$表示为一个正方形，其中左上角的单元格为$b_{1, 1}$，行的编号从上到下从$1$到$n$，列的编号从左到右从$1$到$n$。让一个单元格的颜色就是写在其中的数字(坐标为$(i, j)$的单元格的颜色是$b_{i, j}$) .\n\n对于从 $1$ 到 $k$ 的每种颜色，找出数组 $b$ 中包含该颜色所有单元格的最小矩形。输出该矩形的宽和高之和 .\n\n## 方法 一\n$b_{i,j} =\\min(a_i, a_j)$ $->$求$a[i]$最左边和最右边大于等于$a[i]$的数的下标, 即$ans[i]=(ri[i]-li[i]+1)*2$ 。\n\n```c++\n#include<iostream>\n#include<vector>\nusing namespace std;\nconst int N=100005;\nint le[N],ri[N];\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--){\n        int n,k;\n        cin>>n>>k;\n        vector<int>a(n+1);\n        vector<bool>st(k+1);\n        for(int i=1;i<=n;i++) cin>>a[i],st[a[i]]=true;\n        int now=0;\n        for(int i=1;i<=n;i++){\n            while(now<a[i]) le[++now]=i; //求最左边大于等于a[i]的数的下标\n        }\n        now=0;\n        for(int i=n;i>=1;i--){\n            while(now<a[i]) ri[++now]=i; //求最右边大于等于a[i]的数的下标\n        }\n        for(int i=1;i<=k;i++){\n            cout<<(st[i]?(ri[i]-le[i]+1)*2:0)<<\" \";\n        }\n        cout<<endl;\n    }\n    return 0;\n}\n\n```\n\n[def]: https://codeforces.com/problemset/problem/1870/C","source":"_posts/codeforces1870C.md","raw":"---\ntitle: codeforces1870C\ndate: 2023-09-07 21:21:59\ntags: codeforces\nmathjax: true\ncategories: codeforces\n---\n[codeforces1870C][def]\n\n## 题意\n给你两个整数 $n$ 和 $k$。同时给你一个大小为 $n$的整数数组 $a_1, a_2, \\ldots, a_n$。已知对于所有 $1 \\leq i \\leq n$， $1 \\leq a_i \\leq k$.\n\n定义大小为 $n \\times n$的二维数组 $b$如下：$b_{i, j} = \\min(a_i, a_j)$.将数组$b$表示为一个正方形，其中左上角的单元格为$b_{1, 1}$，行的编号从上到下从$1$到$n$，列的编号从左到右从$1$到$n$。让一个单元格的颜色就是写在其中的数字(坐标为$(i, j)$的单元格的颜色是$b_{i, j}$) .\n\n对于从 $1$ 到 $k$ 的每种颜色，找出数组 $b$ 中包含该颜色所有单元格的最小矩形。输出该矩形的宽和高之和 .\n\n## 方法 一\n$b_{i,j} =\\min(a_i, a_j)$ $->$求$a[i]$最左边和最右边大于等于$a[i]$的数的下标, 即$ans[i]=(ri[i]-li[i]+1)*2$ 。\n\n```c++\n#include<iostream>\n#include<vector>\nusing namespace std;\nconst int N=100005;\nint le[N],ri[N];\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--){\n        int n,k;\n        cin>>n>>k;\n        vector<int>a(n+1);\n        vector<bool>st(k+1);\n        for(int i=1;i<=n;i++) cin>>a[i],st[a[i]]=true;\n        int now=0;\n        for(int i=1;i<=n;i++){\n            while(now<a[i]) le[++now]=i; //求最左边大于等于a[i]的数的下标\n        }\n        now=0;\n        for(int i=n;i>=1;i--){\n            while(now<a[i]) ri[++now]=i; //求最右边大于等于a[i]的数的下标\n        }\n        for(int i=1;i<=k;i++){\n            cout<<(st[i]?(ri[i]-le[i]+1)*2:0)<<\" \";\n        }\n        cout<<endl;\n    }\n    return 0;\n}\n\n```\n\n[def]: https://codeforces.com/problemset/problem/1870/C","slug":"codeforces1870C","published":1,"updated":"2025-04-15T14:08:52.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkj000a3od9fe05ckhk","content":"<p><a class=\"link\" href=\"https://codeforces.com/problemset/problem/1870/C\">codeforces1870C<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<h2 id=\"题意\">题意</h2>\r\n<p>给你两个整数 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 和 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.179ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 521 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g></g></g></svg></mjx-container></span>。同时给你一个大小为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>的整数数组 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.76ex\" height=\"1.437ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -441 5640 635\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(965.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1410.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2375.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2820.4,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(4159.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4603.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>。已知对于所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.303ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 4112.1 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2456.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(3512.1,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>， <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.281ex\" height=\"1.927ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 4544.1 851.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1833.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2967.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4023.1,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g></g></g></svg></mjx-container></span>.</p>\r\n<p>定义大小为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.481ex\" height=\"1.136ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -491 2422.4 502\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(822.2,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1822.4,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>的二维数组\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.971ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 429 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g></g></g></svg></mjx-container></span>如下：<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.349ex\" height=\"2.363ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 7226.4 1044.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1521.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2577.4,0)\"><path data-c=\"6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"/><path data-c=\"69\" d=\"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\" transform=\"translate(833,0)\"/><path data-c=\"6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\" transform=\"translate(1111,0)\"/></g><g data-mml-node=\"mo\" transform=\"translate(4244.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4633.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(5489.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(5934,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(6837.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span>.将数组<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.971ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 429 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g></g></g></svg></mjx-container></span>表示为一个正方形，其中左上角的单元格为<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.203ex\" height=\"2.22ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1415.7 981.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(778,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></g></g></svg></mjx-container></span>，行的编号从上到下从<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span>到<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>，列的编号从左到右从<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span>到<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>。让一个单元格的颜色就是写在其中的数字(坐标为<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.479ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1979.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(734,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1178.7,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1590.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span>的单元格的颜色是<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.814ex\" height=\"2.236ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1243.9 988.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g></g></g></g></svg></mjx-container></span>) .</p>\r\n<p>对于从 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 到 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.179ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 521 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g></g></g></svg></mjx-container></span> 的每种颜色，找出数组 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.971ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 429 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g></g></g></svg></mjx-container></span>\r\n中包含该颜色所有单元格的最小矩形。输出该矩形的宽和高之和 .</p>\r\n<h2 id=\"方法-一\">方法 一</h2>\r\n<p><span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.349ex\" height=\"2.363ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 7226.4 1044.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1521.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2577.4,0)\"><path data-c=\"6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"/><path data-c=\"69\" d=\"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\" transform=\"translate(833,0)\"/><path data-c=\"6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\" transform=\"translate(1111,0)\"/></g><g data-mml-node=\"mo\" transform=\"translate(4244.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4633.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(5489.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(5934,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(6837.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span> <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.149ex\" height=\"1.505ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -583 1833.8 665\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1055.8,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"/></g></g></g></svg></mjx-container></span>求<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.235ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1430 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(529,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(807,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g></g></g></svg></mjx-container></span>最左边和最右边大于等于<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.235ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1430 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(529,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(807,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g></g></g></svg></mjx-container></span>的数的下标, 即<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27.694ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 12240.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(529,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1129,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1598,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1876,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2221,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2776.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(3832.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4221.6,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4672.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(5017.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5295.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(5640.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(6140.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7141,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7439,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7784,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(8062,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(8407,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(8907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(9907.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10407.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(11018.7,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(11740.9,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N=<span class=\"number\">100005</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> le[N],ri[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--){</span><br><span class=\"line\">        <span class=\"type\">int</span> n,k;</span><br><span class=\"line\">        cin&gt;&gt;n&gt;&gt;k;</span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">a</span>(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">        vector&lt;<span class=\"type\">bool</span>&gt;<span class=\"built_in\">st</span>(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i],st[a[i]]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> now=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(now&lt;a[i]) le[++now]=i; <span class=\"comment\">//求最左边大于等于a[i]的数的下标</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        now=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=n;i&gt;=<span class=\"number\">1</span>;i--){</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(now&lt;a[i]) ri[++now]=i; <span class=\"comment\">//求最右边大于等于a[i]的数的下标</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;i++){</span><br><span class=\"line\">            cout&lt;&lt;(st[i]?(ri[i]-le[i]+<span class=\"number\">1</span>)*<span class=\"number\">2</span>:<span class=\"number\">0</span>)&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        cout&lt;&lt;endl;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"","more":"<p><a class=\"link\" href=\"https://codeforces.com/problemset/problem/1870/C\">codeforces1870C<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<h2 id=\"题意\">题意</h2>\r\n<p>给你两个整数 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 和 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.179ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 521 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g></g></g></svg></mjx-container></span>。同时给你一个大小为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>的整数数组 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.76ex\" height=\"1.437ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -441 5640 635\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(965.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1410.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2375.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2820.4,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(4159.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4603.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>。已知对于所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.303ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 4112.1 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2456.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(3512.1,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>， <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.281ex\" height=\"1.927ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 4544.1 851.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1833.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2967.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4023.1,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g></g></g></svg></mjx-container></span>.</p>\r\n<p>定义大小为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.481ex\" height=\"1.136ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -491 2422.4 502\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(822.2,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1822.4,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>的二维数组\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.971ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 429 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g></g></g></svg></mjx-container></span>如下：<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.349ex\" height=\"2.363ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 7226.4 1044.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1521.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2577.4,0)\"><path data-c=\"6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"/><path data-c=\"69\" d=\"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\" transform=\"translate(833,0)\"/><path data-c=\"6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\" transform=\"translate(1111,0)\"/></g><g data-mml-node=\"mo\" transform=\"translate(4244.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4633.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(5489.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(5934,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(6837.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span>.将数组<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.971ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 429 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g></g></g></svg></mjx-container></span>表示为一个正方形，其中左上角的单元格为<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.203ex\" height=\"2.22ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1415.7 981.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(778,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></g></g></svg></mjx-container></span>，行的编号从上到下从<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span>到<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>，列的编号从左到右从<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span>到<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span>。让一个单元格的颜色就是写在其中的数字(坐标为<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.479ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1979.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(734,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1178.7,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1590.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span>的单元格的颜色是<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.814ex\" height=\"2.236ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 1243.9 988.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g></g></g></g></svg></mjx-container></span>) .</p>\r\n<p>对于从 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 到 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.179ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 521 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/></g></g></g></svg></mjx-container></span> 的每种颜色，找出数组 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.971ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -694 429 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g></g></g></svg></mjx-container></span>\r\n中包含该颜色所有单元格的最小矩形。输出该矩形的宽和高之和 .</p>\r\n<h2 id=\"方法-一\">方法 一</h2>\r\n<p><span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.349ex\" height=\"2.363ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 7226.4 1044.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(462,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1521.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2577.4,0)\"><path data-c=\"6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"/><path data-c=\"69\" d=\"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z\" transform=\"translate(833,0)\"/><path data-c=\"6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\" transform=\"translate(1111,0)\"/></g><g data-mml-node=\"mo\" transform=\"translate(4244.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4633.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(5489.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(5934,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(6837.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span> <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.149ex\" height=\"1.505ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -583 1833.8 665\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1055.8,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"/></g></g></g></svg></mjx-container></span>求<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.235ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1430 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(529,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(807,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g></g></g></svg></mjx-container></span>最左边和最右边大于等于<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.235ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1430 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(529,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(807,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g></g></g></svg></mjx-container></span>的数的下标, 即<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27.694ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 12240.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(529,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1129,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1598,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1876,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2221,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2776.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(3832.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4221.6,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4672.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(5017.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5295.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(5640.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(6140.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7141,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7439,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7784,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(8062,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(8407,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(8907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(9907.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10407.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(11018.7,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(11740.9,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N=<span class=\"number\">100005</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> le[N],ri[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--){</span><br><span class=\"line\">        <span class=\"type\">int</span> n,k;</span><br><span class=\"line\">        cin&gt;&gt;n&gt;&gt;k;</span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">a</span>(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">        vector&lt;<span class=\"type\">bool</span>&gt;<span class=\"built_in\">st</span>(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i],st[a[i]]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> now=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(now&lt;a[i]) le[++now]=i; <span class=\"comment\">//求最左边大于等于a[i]的数的下标</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        now=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=n;i&gt;=<span class=\"number\">1</span>;i--){</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(now&lt;a[i]) ri[++now]=i; <span class=\"comment\">//求最右边大于等于a[i]的数的下标</span></span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;i++){</span><br><span class=\"line\">            cout&lt;&lt;(st[i]?(ri[i]-le[i]+<span class=\"number\">1</span>)*<span class=\"number\">2</span>:<span class=\"number\">0</span>)&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        cout&lt;&lt;endl;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n"},{"title":"Windows与Ubuntu22.04 双系统安装","date":"2024-04-15T09:41:43.000Z","_content":"\n### 一、查看基础环境\n\n#### 1.安装环境和电脑配置\n\n| 配置项 | 配置值 |\n| -------- | -------- |\n| 操作系统 | Windows 11 |\n| 处理器 | AMD Ryzen 9 7945HX |\n| 内存 | 16.00GB |\n| 硬盘 | 1TB SSD |\n| 显卡 |  4060 |\n\n#### 2.查看电脑是否支持UEFI启动\nwin+s打开搜索，输入System Information，点击运行,如下图所示，如果BIOS Mode为UEFI，则支持UEFI启动，可进行下一步。\n\n![image_01](./Windows与Ubuntu22-04-双系统安装/image_01.png)\n\n注:\n- 部分主板不支持UEFI启动，需要使用legacy启动，具体方法可自行搜索。\n- 需要一个不小于8GB的U盘，用于制作启动盘。\n\n---\n\n### 二、下载ubuntu22.04以及相关工具\n\n点击下载 [ubuntu-22.04](https://mirrors.bfsu.edu.cn/ubuntu-releases/jammy/ubuntu-22.04.4-desktop-amd64.iso)\n\n下载完成后，使用 [Ventoy](https://www.ventoy.net/cn/index.html)制作启动盘，具体使用方法可参考ventoy官网。\n\n制作完成后，将 **ubuntu-22.04.4-desktop-amd64.iso** 文件移入U盘中。\n\n---\n\n### 三、分区及安装Ubuntu\n\n#### 1.分区\n\n使用[DiskGenius](https://www.diskgenius.com/)软件对U盘进行分区，具体使用方法可参考DiskGenius官网。\n\n给Ubuntu22.04系统分区大小100GB为宜。\n\n#### 2.安装Ubuntu\n\n重新启动电脑，屏幕亮起前按 f2，进入BIOS，关闭安全启动后，退出BIOS。\n\n重新启动电脑，屏幕亮起前按 f12，选择你的U盘启动，选择刚下载的Ubuntu系统，进行安装，后面要注意选择安装位置为新分区就OK。\n\n---\n\n### 四.输入法设置及时区问题\n\n#### 1.输入法设置\n\n安装完成后，会自动进入Ubuntu系统，此时输入法无法输入中文，需要需要安装 fcitx5 .\n\n* 通过命令安装 fcitx5：\n```shell\nsudo apt install -y fcitx5 fcitx5-chinese-addons fcitx5-frontend-gtk4\nsudo apt remove ibus\nsudo apt autoremove\n```\n\n* 安装完成后，需要设置输入法，通过 ```Settings``` 进入弹出的窗口中进入到如下设置界面。  \n选择左侧```Region & Language```，然后单击```Manage Installed LanguagesSettings```\n\n![image_02](./Windows与Ubuntu22-04-双系统安装/image_02.png)\n\n在弹出的窗口中，选择```Keyboard input method system```，下拉框中选中```fcitx5```\n\n![image_03](./Windows与Ubuntu22-04-双系统安装/image_03.png)\n\n单击```Install/Remove Languages...```在弹出的窗口中把中文加入到列表中  \n\n* 在命令行中输入命令```fcitx5-configtool```进行配置在弹出的```Fcitx Configuration```中把```Pinyin```输入法加入到左侧列表中\n\n![image_04](./Windows与Ubuntu22-04-双系统安装/image_04.png)\n由于输入法太多，可以在```Avaliable input method:```输入框中输入```pinyin```进行过滤，最后选中```Pinyin```输入法加入到左侧列表就可以了。\n\n> 至此整个输入法设置完毕，通过```Ctrl + Space```就可以在中文和英文输入法之间进行切换了\n\n#### 2.时区设置\n\n安装完成后，由于一种神秘力量，两系统的时间会掉入[时间黑洞](../Linux-windows双系统时间不一致)，发生错乱，导致时间不一致，无法正常显示，此时建议在```Windows```下进行设置。\n","source":"_posts/Windows与Ubuntu22-04-双系统安装.md","raw":"---\ntitle: Windows与Ubuntu22.04 双系统安装\ndate: 2024-04-15 17:41:43\ntags:\n---\n\n### 一、查看基础环境\n\n#### 1.安装环境和电脑配置\n\n| 配置项 | 配置值 |\n| -------- | -------- |\n| 操作系统 | Windows 11 |\n| 处理器 | AMD Ryzen 9 7945HX |\n| 内存 | 16.00GB |\n| 硬盘 | 1TB SSD |\n| 显卡 |  4060 |\n\n#### 2.查看电脑是否支持UEFI启动\nwin+s打开搜索，输入System Information，点击运行,如下图所示，如果BIOS Mode为UEFI，则支持UEFI启动，可进行下一步。\n\n![image_01](./Windows与Ubuntu22-04-双系统安装/image_01.png)\n\n注:\n- 部分主板不支持UEFI启动，需要使用legacy启动，具体方法可自行搜索。\n- 需要一个不小于8GB的U盘，用于制作启动盘。\n\n---\n\n### 二、下载ubuntu22.04以及相关工具\n\n点击下载 [ubuntu-22.04](https://mirrors.bfsu.edu.cn/ubuntu-releases/jammy/ubuntu-22.04.4-desktop-amd64.iso)\n\n下载完成后，使用 [Ventoy](https://www.ventoy.net/cn/index.html)制作启动盘，具体使用方法可参考ventoy官网。\n\n制作完成后，将 **ubuntu-22.04.4-desktop-amd64.iso** 文件移入U盘中。\n\n---\n\n### 三、分区及安装Ubuntu\n\n#### 1.分区\n\n使用[DiskGenius](https://www.diskgenius.com/)软件对U盘进行分区，具体使用方法可参考DiskGenius官网。\n\n给Ubuntu22.04系统分区大小100GB为宜。\n\n#### 2.安装Ubuntu\n\n重新启动电脑，屏幕亮起前按 f2，进入BIOS，关闭安全启动后，退出BIOS。\n\n重新启动电脑，屏幕亮起前按 f12，选择你的U盘启动，选择刚下载的Ubuntu系统，进行安装，后面要注意选择安装位置为新分区就OK。\n\n---\n\n### 四.输入法设置及时区问题\n\n#### 1.输入法设置\n\n安装完成后，会自动进入Ubuntu系统，此时输入法无法输入中文，需要需要安装 fcitx5 .\n\n* 通过命令安装 fcitx5：\n```shell\nsudo apt install -y fcitx5 fcitx5-chinese-addons fcitx5-frontend-gtk4\nsudo apt remove ibus\nsudo apt autoremove\n```\n\n* 安装完成后，需要设置输入法，通过 ```Settings``` 进入弹出的窗口中进入到如下设置界面。  \n选择左侧```Region & Language```，然后单击```Manage Installed LanguagesSettings```\n\n![image_02](./Windows与Ubuntu22-04-双系统安装/image_02.png)\n\n在弹出的窗口中，选择```Keyboard input method system```，下拉框中选中```fcitx5```\n\n![image_03](./Windows与Ubuntu22-04-双系统安装/image_03.png)\n\n单击```Install/Remove Languages...```在弹出的窗口中把中文加入到列表中  \n\n* 在命令行中输入命令```fcitx5-configtool```进行配置在弹出的```Fcitx Configuration```中把```Pinyin```输入法加入到左侧列表中\n\n![image_04](./Windows与Ubuntu22-04-双系统安装/image_04.png)\n由于输入法太多，可以在```Avaliable input method:```输入框中输入```pinyin```进行过滤，最后选中```Pinyin```输入法加入到左侧列表就可以了。\n\n> 至此整个输入法设置完毕，通过```Ctrl + Space```就可以在中文和英文输入法之间进行切换了\n\n#### 2.时区设置\n\n安装完成后，由于一种神秘力量，两系统的时间会掉入[时间黑洞](../Linux-windows双系统时间不一致)，发生错乱，导致时间不一致，无法正常显示，此时建议在```Windows```下进行设置。\n","slug":"Windows与Ubuntu22-04-双系统安装","published":1,"updated":"2025-04-15T14:08:52.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkj000b3od928zg77sz","content":"<h3 id=\"一查看基础环境\">一、查看基础环境</h3>\r\n<h4 id=\"安装环境和电脑配置\">1.安装环境和电脑配置</h4>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>配置项</th>\r\n<th>配置值</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>操作系统</td>\r\n<td>Windows 11</td>\r\n</tr>\r\n<tr>\r\n<td>处理器</td>\r\n<td>AMD Ryzen 9 7945HX</td>\r\n</tr>\r\n<tr>\r\n<td>内存</td>\r\n<td>16.00GB</td>\r\n</tr>\r\n<tr>\r\n<td>硬盘</td>\r\n<td>1TB SSD</td>\r\n</tr>\r\n<tr>\r\n<td>显卡</td>\r\n<td>4060</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h4 id=\"查看电脑是否支持uefi启动\">2.查看电脑是否支持UEFI启动</h4>\r\n<p>win+s打开搜索，输入System Information，点击运行,如下图所示，如果BIOS\r\nMode为UEFI，则支持UEFI启动，可进行下一步。</p>\r\n<figure>\r\n<img src=\"/.io//image_01.png\" alt=\"image_01\">\r\n<figcaption aria-hidden=\"true\">image_01</figcaption>\r\n</figure>\r\n<p>注: -\r\n部分主板不支持UEFI启动，需要使用legacy启动，具体方法可自行搜索。 -\r\n需要一个不小于8GB的U盘，用于制作启动盘。</p>\r\n<hr>\r\n<h3 id=\"二下载ubuntu22.04以及相关工具\">二、下载ubuntu22.04以及相关工具</h3>\r\n<p>点击下载 <a class=\"link\" href=\"https://mirrors.bfsu.edu.cn/ubuntu-releases/jammy/ubuntu-22.04.4-desktop-amd64.iso\">ubuntu-22.04<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<p>下载完成后，使用 <a class=\"link\" href=\"https://www.ventoy.net/cn/index.html\">Ventoy<i class=\"fas fa-external-link-alt\"></i></a>制作启动盘，具体使用方法可参考ventoy官网。</p>\r\n<p>制作完成后，将 <strong>ubuntu-22.04.4-desktop-amd64.iso</strong>\r\n文件移入U盘中。</p>\r\n<hr>\r\n<h3 id=\"三分区及安装ubuntu\">三、分区及安装Ubuntu</h3>\r\n<h4 id=\"分区\">1.分区</h4>\r\n<p>使用<a class=\"link\" href=\"https://www.diskgenius.com/\">DiskGenius<i class=\"fas fa-external-link-alt\"></i></a>软件对U盘进行分区，具体使用方法可参考DiskGenius官网。</p>\r\n<p>给Ubuntu22.04系统分区大小100GB为宜。</p>\r\n<h4 id=\"安装ubuntu\">2.安装Ubuntu</h4>\r\n<p>重新启动电脑，屏幕亮起前按\r\nf2，进入BIOS，关闭安全启动后，退出BIOS。</p>\r\n<p>重新启动电脑，屏幕亮起前按\r\nf12，选择你的U盘启动，选择刚下载的Ubuntu系统，进行安装，后面要注意选择安装位置为新分区就OK。</p>\r\n<hr>\r\n<h3 id=\"四.输入法设置及时区问题\">四.输入法设置及时区问题</h3>\r\n<h4 id=\"输入法设置\">1.输入法设置</h4>\r\n<p>安装完成后，会自动进入Ubuntu系统，此时输入法无法输入中文，需要需要安装\r\nfcitx5 .</p>\r\n<ul>\r\n<li><p>通过命令安装 fcitx5： <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y fcitx5 fcitx5-chinese-addons fcitx5-frontend-gtk4</span><br><span class=\"line\">sudo apt remove ibus</span><br><span class=\"line\">sudo apt autoremove</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>安装完成后，需要设置输入法，通过 <code>Settings</code>\r\n进入弹出的窗口中进入到如下设置界面。<br>\r\n选择左侧<code>Region &amp; Language</code>，然后单击<code>Manage Installed LanguagesSettings</code></p></li>\r\n</ul>\r\n<figure>\r\n<img src=\"/.io//image_02.png\" alt=\"image_02\">\r\n<figcaption aria-hidden=\"true\">image_02</figcaption>\r\n</figure>\r\n<p>在弹出的窗口中，选择<code>Keyboard input method system</code>，下拉框中选中<code>fcitx5</code></p>\r\n<figure>\r\n<img src=\"/.io//image_03.png\" alt=\"image_03\">\r\n<figcaption aria-hidden=\"true\">image_03</figcaption>\r\n</figure>\r\n<p>单击<code>Install/Remove Languages...</code>在弹出的窗口中把中文加入到列表中</p>\r\n<ul>\r\n<li>在命令行中输入命令<code>fcitx5-configtool</code>进行配置在弹出的<code>Fcitx Configuration</code>中把<code>Pinyin</code>输入法加入到左侧列表中</li>\r\n</ul>\r\n<p><img src=\"/.io//image_04.png\" alt=\"image_04\">\r\n由于输入法太多，可以在<code>Avaliable input method:</code>输入框中输入<code>pinyin</code>进行过滤，最后选中<code>Pinyin</code>输入法加入到左侧列表就可以了。</p>\r\n<blockquote>\r\n<p>至此整个输入法设置完毕，通过<code>Ctrl + Space</code>就可以在中文和英文输入法之间进行切换了</p>\r\n</blockquote>\r\n<h4 id=\"时区设置\">2.时区设置</h4>\r\n<p>安装完成后，由于一种神秘力量，两系统的时间会掉入<a href=\"../Linux-windows双系统时间不一致\">时间黑洞</a>，发生错乱，导致时间不一致，无法正常显示，此时建议在<code>Windows</code>下进行设置。</p>\r\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一查看基础环境\">一、查看基础环境</h3>\r\n<h4 id=\"安装环境和电脑配置\">1.安装环境和电脑配置</h4>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>配置项</th>\r\n<th>配置值</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>操作系统</td>\r\n<td>Windows 11</td>\r\n</tr>\r\n<tr>\r\n<td>处理器</td>\r\n<td>AMD Ryzen 9 7945HX</td>\r\n</tr>\r\n<tr>\r\n<td>内存</td>\r\n<td>16.00GB</td>\r\n</tr>\r\n<tr>\r\n<td>硬盘</td>\r\n<td>1TB SSD</td>\r\n</tr>\r\n<tr>\r\n<td>显卡</td>\r\n<td>4060</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h4 id=\"查看电脑是否支持uefi启动\">2.查看电脑是否支持UEFI启动</h4>\r\n<p>win+s打开搜索，输入System Information，点击运行,如下图所示，如果BIOS\r\nMode为UEFI，则支持UEFI启动，可进行下一步。</p>\r\n<figure>\r\n<img src=\"/.io//image_01.png\" alt=\"image_01\">\r\n<figcaption aria-hidden=\"true\">image_01</figcaption>\r\n</figure>\r\n<p>注: -\r\n部分主板不支持UEFI启动，需要使用legacy启动，具体方法可自行搜索。 -\r\n需要一个不小于8GB的U盘，用于制作启动盘。</p>\r\n<hr>\r\n<h3 id=\"二下载ubuntu22.04以及相关工具\">二、下载ubuntu22.04以及相关工具</h3>\r\n<p>点击下载 <a class=\"link\" href=\"https://mirrors.bfsu.edu.cn/ubuntu-releases/jammy/ubuntu-22.04.4-desktop-amd64.iso\">ubuntu-22.04<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<p>下载完成后，使用 <a class=\"link\" href=\"https://www.ventoy.net/cn/index.html\">Ventoy<i class=\"fas fa-external-link-alt\"></i></a>制作启动盘，具体使用方法可参考ventoy官网。</p>\r\n<p>制作完成后，将 <strong>ubuntu-22.04.4-desktop-amd64.iso</strong>\r\n文件移入U盘中。</p>\r\n<hr>\r\n<h3 id=\"三分区及安装ubuntu\">三、分区及安装Ubuntu</h3>\r\n<h4 id=\"分区\">1.分区</h4>\r\n<p>使用<a class=\"link\" href=\"https://www.diskgenius.com/\">DiskGenius<i class=\"fas fa-external-link-alt\"></i></a>软件对U盘进行分区，具体使用方法可参考DiskGenius官网。</p>\r\n<p>给Ubuntu22.04系统分区大小100GB为宜。</p>\r\n<h4 id=\"安装ubuntu\">2.安装Ubuntu</h4>\r\n<p>重新启动电脑，屏幕亮起前按\r\nf2，进入BIOS，关闭安全启动后，退出BIOS。</p>\r\n<p>重新启动电脑，屏幕亮起前按\r\nf12，选择你的U盘启动，选择刚下载的Ubuntu系统，进行安装，后面要注意选择安装位置为新分区就OK。</p>\r\n<hr>\r\n<h3 id=\"四.输入法设置及时区问题\">四.输入法设置及时区问题</h3>\r\n<h4 id=\"输入法设置\">1.输入法设置</h4>\r\n<p>安装完成后，会自动进入Ubuntu系统，此时输入法无法输入中文，需要需要安装\r\nfcitx5 .</p>\r\n<ul>\r\n<li><p>通过命令安装 fcitx5： <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y fcitx5 fcitx5-chinese-addons fcitx5-frontend-gtk4</span><br><span class=\"line\">sudo apt remove ibus</span><br><span class=\"line\">sudo apt autoremove</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>安装完成后，需要设置输入法，通过 <code>Settings</code>\r\n进入弹出的窗口中进入到如下设置界面。<br>\r\n选择左侧<code>Region &amp; Language</code>，然后单击<code>Manage Installed LanguagesSettings</code></p></li>\r\n</ul>\r\n<figure>\r\n<img src=\"/.io//image_02.png\" alt=\"image_02\">\r\n<figcaption aria-hidden=\"true\">image_02</figcaption>\r\n</figure>\r\n<p>在弹出的窗口中，选择<code>Keyboard input method system</code>，下拉框中选中<code>fcitx5</code></p>\r\n<figure>\r\n<img src=\"/.io//image_03.png\" alt=\"image_03\">\r\n<figcaption aria-hidden=\"true\">image_03</figcaption>\r\n</figure>\r\n<p>单击<code>Install/Remove Languages...</code>在弹出的窗口中把中文加入到列表中</p>\r\n<ul>\r\n<li>在命令行中输入命令<code>fcitx5-configtool</code>进行配置在弹出的<code>Fcitx Configuration</code>中把<code>Pinyin</code>输入法加入到左侧列表中</li>\r\n</ul>\r\n<p><img src=\"/.io//image_04.png\" alt=\"image_04\">\r\n由于输入法太多，可以在<code>Avaliable input method:</code>输入框中输入<code>pinyin</code>进行过滤，最后选中<code>Pinyin</code>输入法加入到左侧列表就可以了。</p>\r\n<blockquote>\r\n<p>至此整个输入法设置完毕，通过<code>Ctrl + Space</code>就可以在中文和英文输入法之间进行切换了</p>\r\n</blockquote>\r\n<h4 id=\"时区设置\">2.时区设置</h4>\r\n<p>安装完成后，由于一种神秘力量，两系统的时间会掉入<a href=\"../Linux-windows双系统时间不一致\">时间黑洞</a>，发生错乱，导致时间不一致，无法正常显示，此时建议在<code>Windows</code>下进行设置。</p>\r\n"},{"title":"codeforces1954D","date":"2024-04-26T03:24:15.000Z","mathjax":true,"_content":"[codeforces1954D](https://codeforces.com/contest/1954/problem/D)\n\n## 题意\n有 $n$ 种颜色的球， $i$ 种颜色的球的个数是 $a_i$ 。\n\n这些球可以组合成一组。每组最多包含 $2$ 个球，每种颜色的球不超过 $1$ 个。\n\n考虑所有 $2^n$ 组颜色。对于一组颜色，让我们把它的值表示为这些颜色的球所能分配到的最少组数。例如，如果有三种颜色，分别有 $3$ 、 $1$ 和 $7$ 个球，它们可以组合成 $7$ 组（且不少于 $7$ ），那么这组颜色的值就是 $7$ 。\n\n你的任务是计算所有 $2^n$ 可能的颜色组的值之和。由于答案可能太大，请打印出以 $998\\,244\\,353$ 为模数的答案。\n\n#### 输入\n\n第一行包含一个整数 $n$ ( $1 \\le n \\le 5000$ ) - 颜色的数量。\n\n第二行包含 $n$ 个整数 $a_1, a_2, \\dots, a_n$ ( $1 \\le a_i \\le 5000$ ) - $i$ -th 颜色的球数。\n\n输入的额外限制：球的总数不超过 $5000$ 。\n\n#### 输出\n\n打印一个整数 —— 所有 $2^n$ 组颜色的值之和，取模为 $998\\,244\\,353$ 。\n\n## 分析\n对于一个固定的颜色集合，这是一个标准问题，其解法如下：假设球的总数为 $s$ ，则集合的值为 $\\left\\lceil\\frac{s}{2}\\right\\rceil$ ；但有一种例外情况，即有一种颜色的球数多于 $\\frac{s}{2}$ ，那么值就是这种颜色的球数。\n\n因此，答案只取决于是否有一种颜色的球数比其他颜色的球数总和还要多。\n\n所以我们可以给各种颜色小球的数量排个序,然后枚举数量最多的小球有多少个,用背包统计之前选了 $x$ 个小球的方案数,然后就可以得到答案了。（因为是所有组合  $2^n$ 种，想到背包模型是关键）\n\n $dp[i]$ : 选了 $i$ 个小球的方案数\n\n\n## Code\n```c++\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst long long N=3e5+10;\n\nlong long dp[N];\nlong long a[N];\nlong long mod = 998244353;\nint main()\n{\n    long long n;\n    cin>>n;\n    for(long long i=1;i<=n;i++) cin>>a[i];\n    \n    sort(a+1,a+1+n);\n    long long ans=0;\n    dp[0]=1;\n    for(long long i=1;i<=n;i++){\n        for(long long j=0;j<=5000-a[i];j++){\n            if(a[i]>j) ans=(ans+dp[j]*a[i])%mod;\n            else ans=(ans+dp[j]*((j+a[i]+1)/2))%mod;\n        }\n        for(long long j=5000-a[i];j>=0;j--){\n            dp[j+a[i]]=(dp[j+a[i]]+dp[j])%mod;\n        }\n    }\n    cout<<ans%mod<<endl;\n    return 0;\n}\n```\n\n\n\n\n\n\n","source":"_posts/codeforces1954D.md","raw":"---\ntitle: codeforces1954D\ndate: 2024-04-26 11:24:15\ntags: codeforces\nmathjax: true\ncategories: codeforces\n---\n[codeforces1954D](https://codeforces.com/contest/1954/problem/D)\n\n## 题意\n有 $n$ 种颜色的球， $i$ 种颜色的球的个数是 $a_i$ 。\n\n这些球可以组合成一组。每组最多包含 $2$ 个球，每种颜色的球不超过 $1$ 个。\n\n考虑所有 $2^n$ 组颜色。对于一组颜色，让我们把它的值表示为这些颜色的球所能分配到的最少组数。例如，如果有三种颜色，分别有 $3$ 、 $1$ 和 $7$ 个球，它们可以组合成 $7$ 组（且不少于 $7$ ），那么这组颜色的值就是 $7$ 。\n\n你的任务是计算所有 $2^n$ 可能的颜色组的值之和。由于答案可能太大，请打印出以 $998\\,244\\,353$ 为模数的答案。\n\n#### 输入\n\n第一行包含一个整数 $n$ ( $1 \\le n \\le 5000$ ) - 颜色的数量。\n\n第二行包含 $n$ 个整数 $a_1, a_2, \\dots, a_n$ ( $1 \\le a_i \\le 5000$ ) - $i$ -th 颜色的球数。\n\n输入的额外限制：球的总数不超过 $5000$ 。\n\n#### 输出\n\n打印一个整数 —— 所有 $2^n$ 组颜色的值之和，取模为 $998\\,244\\,353$ 。\n\n## 分析\n对于一个固定的颜色集合，这是一个标准问题，其解法如下：假设球的总数为 $s$ ，则集合的值为 $\\left\\lceil\\frac{s}{2}\\right\\rceil$ ；但有一种例外情况，即有一种颜色的球数多于 $\\frac{s}{2}$ ，那么值就是这种颜色的球数。\n\n因此，答案只取决于是否有一种颜色的球数比其他颜色的球数总和还要多。\n\n所以我们可以给各种颜色小球的数量排个序,然后枚举数量最多的小球有多少个,用背包统计之前选了 $x$ 个小球的方案数,然后就可以得到答案了。（因为是所有组合  $2^n$ 种，想到背包模型是关键）\n\n $dp[i]$ : 选了 $i$ 个小球的方案数\n\n\n## Code\n```c++\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst long long N=3e5+10;\n\nlong long dp[N];\nlong long a[N];\nlong long mod = 998244353;\nint main()\n{\n    long long n;\n    cin>>n;\n    for(long long i=1;i<=n;i++) cin>>a[i];\n    \n    sort(a+1,a+1+n);\n    long long ans=0;\n    dp[0]=1;\n    for(long long i=1;i<=n;i++){\n        for(long long j=0;j<=5000-a[i];j++){\n            if(a[i]>j) ans=(ans+dp[j]*a[i])%mod;\n            else ans=(ans+dp[j]*((j+a[i]+1)/2))%mod;\n        }\n        for(long long j=5000-a[i];j>=0;j--){\n            dp[j+a[i]]=(dp[j+a[i]]+dp[j])%mod;\n        }\n    }\n    cout<<ans%mod<<endl;\n    return 0;\n}\n```\n\n\n\n\n\n\n","slug":"codeforces1954D","published":1,"updated":"2025-04-15T14:08:52.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkl000h3od9ey54c1u7","content":"<p><a class=\"link\" href=\"https://codeforces.com/contest/1954/problem/D\">codeforces1954D<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<h2 id=\"题意\">题意</h2>\r\n<p>有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 种颜色的球， <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 种颜色的球的个数是 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.937ex\" height=\"1.355ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -441 856 598.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> 。</p>\r\n<p>这些球可以组合成一组。每组最多包含 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g></g></svg></mjx-container></span> 个球，每种颜色的球不超过 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 个。</p>\r\n<p>考虑所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>\r\n组颜色。对于一组颜色，让我们把它的值表示为这些颜色的球所能分配到的最少组数。例如，如果有三种颜色，分别有\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.554ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -665 500 687\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/></g></g></g></svg></mjx-container></span> 、 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 和 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> 个球，它们可以组合成 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> 组（且不少于 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> ），那么这组颜色的值就是 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<p>你的任务是计算所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>\r\n可能的颜色组的值之和。由于答案可能太大，请打印出以 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.937ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -677 4834 699\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"/><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\" transform=\"translate(500,0)\"/><path data-c=\"38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(1500,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(1667,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(500,0)\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(3167,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(3334,0)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\" transform=\"translate(500,0)\"/><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\" transform=\"translate(1000,0)\"/></g></g></g></svg></mjx-container></span> 为模数的答案。</p>\r\n<h4 id=\"输入\">输入</h4>\r\n<p>第一行包含一个整数 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> ( <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.048ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 5767.1 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2711.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(3767.1,0)\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"/></g></g></g></svg></mjx-container></span> ) - 颜色的数量。</p>\r\n<p>第二行包含 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 个整数 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.76ex\" height=\"1.437ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -441 5640 635\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(965.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1410.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2375.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2820.4,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(4159.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4603.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> ( <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.627ex\" height=\"1.864ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 6023.1 823.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1833.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2967.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(4023.1,0)\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"/></g></g></g></svg></mjx-container></span> ) - <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> -th 颜色的球数。</p>\r\n<p>输入的额外限制：球的总数不超过 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"1.557ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 2000 688\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<h4 id=\"输出\">输出</h4>\r\n<p>打印一个整数 —— 所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>\r\n组颜色的值之和，取模为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.937ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -677 4834 699\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"/><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\" transform=\"translate(500,0)\"/><path data-c=\"38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(1500,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(1667,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(500,0)\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(3167,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(3334,0)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\" transform=\"translate(500,0)\"/><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\" transform=\"translate(1000,0)\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<h2 id=\"分析\">分析</h2>\r\n<p>对于一个固定的颜色集合，这是一个标准问题，其解法如下：假设球的总数为\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.023ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 469 452\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g></g></g></svg></mjx-container></span> ，则集合的值为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.791ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.931ex\" height=\"2.713ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -849.5 1737.6 1199\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mrow\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><path data-c=\"2308\" d=\"M202 -349V850H449V810H242V-349H202Z\"/></g><g data-mml-node=\"mfrac\" transform=\"translate(472,0)\"><g data-mml-node=\"mi\" transform=\"translate(231,394) scale(0.707)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"/></g><g data-mml-node=\"mo\" transform=\"translate(1265.6,0) translate(0 -0.5)\"><path data-c=\"2309\" d=\"M22 810V850H269V-349H229V810H22Z\"/></g></g></g></g></svg></mjx-container></span>\r\n；但有一种例外情况，即有一种颜色的球数多于 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.795ex\" height=\"2.379ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -706.5 793.6 1051.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(231,394) scale(0.707)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"/></g></g></g></svg></mjx-container></span>\r\n，那么值就是这种颜色的球数。</p>\r\n<p>因此，答案只取决于是否有一种颜色的球数比其他颜色的球数总和还要多。</p>\r\n<p>所以我们可以给各种颜色小球的数量排个序,然后枚举数量最多的小球有多少个,用背包统计之前选了\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/></g></g></g></svg></mjx-container></span>\r\n个小球的方案数,然后就可以得到答案了。（因为是所有组合 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> 种，想到背包模型是关键）</p>\r\n<p><span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.353ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1924 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1023,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1301,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1646,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g></g></g></svg></mjx-container></span> : 选了 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 个小球的方案数</p>\r\n<h2 id=\"code\">Code</h2>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">long</span> <span class=\"type\">long</span> N=<span class=\"number\">3e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> dp[N];</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> a[N];</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> mod = <span class=\"number\">998244353</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> n;</span><br><span class=\"line\">    cin&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(a+<span class=\"number\">1</span>,a+<span class=\"number\">1</span>+n);</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> j=<span class=\"number\">0</span>;j&lt;=<span class=\"number\">5000</span>-a[i];j++){</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i]&gt;j) ans=(ans+dp[j]*a[i])%mod;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> ans=(ans+dp[j]*((j+a[i]+<span class=\"number\">1</span>)/<span class=\"number\">2</span>))%mod;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> j=<span class=\"number\">5000</span>-a[i];j&gt;=<span class=\"number\">0</span>;j--){</span><br><span class=\"line\">            dp[j+a[i]]=(dp[j+a[i]]+dp[j])%mod;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    cout&lt;&lt;ans%mod&lt;&lt;endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"","more":"<p><a class=\"link\" href=\"https://codeforces.com/contest/1954/problem/D\">codeforces1954D<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<h2 id=\"题意\">题意</h2>\r\n<p>有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 种颜色的球， <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 种颜色的球的个数是 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.937ex\" height=\"1.355ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -441 856 598.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> 。</p>\r\n<p>这些球可以组合成一组。每组最多包含 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g></g></svg></mjx-container></span> 个球，每种颜色的球不超过 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 个。</p>\r\n<p>考虑所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>\r\n组颜色。对于一组颜色，让我们把它的值表示为这些颜色的球所能分配到的最少组数。例如，如果有三种颜色，分别有\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.554ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -665 500 687\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/></g></g></g></svg></mjx-container></span> 、 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 和 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> 个球，它们可以组合成 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> 组（且不少于 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> ），那么这组颜色的值就是 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -676 500 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<p>你的任务是计算所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>\r\n可能的颜色组的值之和。由于答案可能太大，请打印出以 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.937ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -677 4834 699\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"/><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\" transform=\"translate(500,0)\"/><path data-c=\"38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(1500,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(1667,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(500,0)\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(3167,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(3334,0)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\" transform=\"translate(500,0)\"/><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\" transform=\"translate(1000,0)\"/></g></g></g></svg></mjx-container></span> 为模数的答案。</p>\r\n<h4 id=\"输入\">输入</h4>\r\n<p>第一行包含一个整数 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> ( <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.048ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 5767.1 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1833.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2711.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(3767.1,0)\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"/></g></g></g></svg></mjx-container></span> ) - 颜色的数量。</p>\r\n<p>第二行包含 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 个整数 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.76ex\" height=\"1.437ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -441 5640 635\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(965.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1410.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2375.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2820.4,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(4159.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(4603.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> ( <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.627ex\" height=\"1.864ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 6023.1 823.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"msub\" transform=\"translate(1833.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2967.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(4023.1,0)\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"/></g></g></g></svg></mjx-container></span> ) - <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> -th 颜色的球数。</p>\r\n<p>输入的额外限制：球的总数不超过 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"1.557ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 2000 688\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<h4 id=\"输出\">输出</h4>\r\n<p>打印一个整数 —— 所有 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span>\r\n组颜色的值之和，取模为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.937ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -677 4834 699\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"/><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\" transform=\"translate(500,0)\"/><path data-c=\"38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(1500,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(1667,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(500,0)\"/><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\" transform=\"translate(1000,0)\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(3167,0)\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mn\" transform=\"translate(3334,0)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"/><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\" transform=\"translate(500,0)\"/><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\" transform=\"translate(1000,0)\"/></g></g></g></svg></mjx-container></span> 。</p>\r\n<h2 id=\"分析\">分析</h2>\r\n<p>对于一个固定的颜色集合，这是一个标准问题，其解法如下：假设球的总数为\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.023ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 469 452\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g></g></g></svg></mjx-container></span> ，则集合的值为 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.791ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.931ex\" height=\"2.713ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -849.5 1737.6 1199\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mrow\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><path data-c=\"2308\" d=\"M202 -349V850H449V810H242V-349H202Z\"/></g><g data-mml-node=\"mfrac\" transform=\"translate(472,0)\"><g data-mml-node=\"mi\" transform=\"translate(231,394) scale(0.707)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"/></g><g data-mml-node=\"mo\" transform=\"translate(1265.6,0) translate(0 -0.5)\"><path data-c=\"2309\" d=\"M22 810V850H269V-349H229V810H22Z\"/></g></g></g></g></svg></mjx-container></span>\r\n；但有一种例外情况，即有一种颜色的球数多于 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.781ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.795ex\" height=\"2.379ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -706.5 793.6 1051.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(231,394) scale(0.707)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"/></g></g></g></svg></mjx-container></span>\r\n，那么值就是这种颜色的球数。</p>\r\n<p>因此，答案只取决于是否有一种颜色的球数比其他颜色的球数总和还要多。</p>\r\n<p>所以我们可以给各种颜色小球的数量排个序,然后枚举数量最多的小球有多少个,用背包统计之前选了\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/></g></g></g></svg></mjx-container></span>\r\n个小球的方案数,然后就可以得到答案了。（因为是所有组合 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> 种，想到背包模型是关键）</p>\r\n<p><span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.353ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 1924 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1023,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1301,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1646,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g></g></g></svg></mjx-container></span> : 选了 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 个小球的方案数</p>\r\n<h2 id=\"code\">Code</h2>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">long</span> <span class=\"type\">long</span> N=<span class=\"number\">3e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> dp[N];</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> a[N];</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> mod = <span class=\"number\">998244353</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> n;</span><br><span class=\"line\">    cin&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(a+<span class=\"number\">1</span>,a+<span class=\"number\">1</span>+n);</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> j=<span class=\"number\">0</span>;j&lt;=<span class=\"number\">5000</span>-a[i];j++){</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i]&gt;j) ans=(ans+dp[j]*a[i])%mod;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> ans=(ans+dp[j]*((j+a[i]+<span class=\"number\">1</span>)/<span class=\"number\">2</span>))%mod;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">long</span> <span class=\"type\">long</span> j=<span class=\"number\">5000</span>-a[i];j&gt;=<span class=\"number\">0</span>;j--){</span><br><span class=\"line\">            dp[j+a[i]]=(dp[j+a[i]]+dp[j])%mod;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    cout&lt;&lt;ans%mod&lt;&lt;endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n"},{"title":"codeforces1920D.md","date":"2024-02-02T22:04:49.000Z","mathjax":true,"_content":"[codeforces1920D](https://codeforces.com/contest/1920/problem/D)\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntypedef uint64_t ll;\nconst int N=200010;\nconst ll INF=1e18;\nll lst[N];\nll num[N];\nint n,q;\n\nvoid qurray(ll x){\n   while(true){\n      ll pos=upper_bound(num+1,num+n+1,x)-num;\n      if(pos==1){\n         cout<<lst[1]<<endl;\n      }\n      if(x%num[pos-1]==0){\n         cout<<lst[pos-1]<<\" \";\n         return;\n      }\n      x%=num[pos-1];\n   }\n}\n\nint main()\n{\n   int t;\n   cin>>t;\n   while(t--){\n      cin>>n>>q;\n      for(int i=1;i<=n;i++){\n         ll op,x;\n         cin>>op>>x;\n         if(op==1){\n            num[i]=num[i-1]+1;\n            lst[i]=x;\n         }else{\n            ll a=x+1;\n            if(num[i-1]!=0){\n               a=min(a,INF/num[i-1]+1);\n            }\n            num[i]=num[i-1]*a;\n            lst[i]=lst[i-1];\n         }\n      }\n      while(q--){\n         ll x;\n         cin>>x;\n         qurray(x);\n      }\n      cout<<endl;\n   } \n   return 0;\n}\n```\n","source":"_posts/codeforces1920D.md","raw":"---\ntitle: codeforces1920D.md\ndate: 2024-02-03 06:04:49\ntags: codeforces\nmathjax: true\ncategories: codeforces\n---\n[codeforces1920D](https://codeforces.com/contest/1920/problem/D)\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntypedef uint64_t ll;\nconst int N=200010;\nconst ll INF=1e18;\nll lst[N];\nll num[N];\nint n,q;\n\nvoid qurray(ll x){\n   while(true){\n      ll pos=upper_bound(num+1,num+n+1,x)-num;\n      if(pos==1){\n         cout<<lst[1]<<endl;\n      }\n      if(x%num[pos-1]==0){\n         cout<<lst[pos-1]<<\" \";\n         return;\n      }\n      x%=num[pos-1];\n   }\n}\n\nint main()\n{\n   int t;\n   cin>>t;\n   while(t--){\n      cin>>n>>q;\n      for(int i=1;i<=n;i++){\n         ll op,x;\n         cin>>op>>x;\n         if(op==1){\n            num[i]=num[i-1]+1;\n            lst[i]=x;\n         }else{\n            ll a=x+1;\n            if(num[i-1]!=0){\n               a=min(a,INF/num[i-1]+1);\n            }\n            num[i]=num[i-1]*a;\n            lst[i]=lst[i-1];\n         }\n      }\n      while(q--){\n         ll x;\n         cin>>x;\n         qurray(x);\n      }\n      cout<<endl;\n   } \n   return 0;\n}\n```\n","slug":"codeforces1920D","published":1,"updated":"2025-04-15T14:08:52.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkl000i3od921hle7m3","content":"<p><a class=\"link\" href=\"https://codeforces.com/contest/1920/problem/D\">codeforces1920D<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">uint64_t</span> ll;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N=<span class=\"number\">200010</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> ll INF=<span class=\"number\">1e18</span>;</span><br><span class=\"line\">ll lst[N];</span><br><span class=\"line\">ll num[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n,q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">qurray</span><span class=\"params\">(ll x)</span></span>{</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>){</span><br><span class=\"line\">      ll pos=<span class=\"built_in\">upper_bound</span>(num+<span class=\"number\">1</span>,num+n+<span class=\"number\">1</span>,x)-num;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(pos==<span class=\"number\">1</span>){</span><br><span class=\"line\">         cout&lt;&lt;lst[<span class=\"number\">1</span>]&lt;&lt;endl;</span><br><span class=\"line\">      }</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(x%num[pos<span class=\"number\">-1</span>]==<span class=\"number\">0</span>){</span><br><span class=\"line\">         cout&lt;&lt;lst[pos<span class=\"number\">-1</span>]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">         <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      }</span><br><span class=\"line\">      x%=num[pos<span class=\"number\">-1</span>];</span><br><span class=\"line\">   }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">   <span class=\"type\">int</span> t;</span><br><span class=\"line\">   cin&gt;&gt;t;</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(t--){</span><br><span class=\"line\">      cin&gt;&gt;n&gt;&gt;q;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">         ll op,x;</span><br><span class=\"line\">         cin&gt;&gt;op&gt;&gt;x;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(op==<span class=\"number\">1</span>){</span><br><span class=\"line\">            num[i]=num[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">            lst[i]=x;</span><br><span class=\"line\">         }<span class=\"keyword\">else</span>{</span><br><span class=\"line\">            ll a=x+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num[i<span class=\"number\">-1</span>]!=<span class=\"number\">0</span>){</span><br><span class=\"line\">               a=<span class=\"built_in\">min</span>(a,INF/num[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>);</span><br><span class=\"line\">            }</span><br><span class=\"line\">            num[i]=num[i<span class=\"number\">-1</span>]*a;</span><br><span class=\"line\">            lst[i]=lst[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">         }</span><br><span class=\"line\">      }</span><br><span class=\"line\">      <span class=\"keyword\">while</span>(q--){</span><br><span class=\"line\">         ll x;</span><br><span class=\"line\">         cin&gt;&gt;x;</span><br><span class=\"line\">         <span class=\"built_in\">qurray</span>(x);</span><br><span class=\"line\">      }</span><br><span class=\"line\">      cout&lt;&lt;endl;</span><br><span class=\"line\">   } </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"","more":"<p><a class=\"link\" href=\"https://codeforces.com/contest/1920/problem/D\">codeforces1920D<i class=\"fas fa-external-link-alt\"></i></a></p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">uint64_t</span> ll;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N=<span class=\"number\">200010</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> ll INF=<span class=\"number\">1e18</span>;</span><br><span class=\"line\">ll lst[N];</span><br><span class=\"line\">ll num[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n,q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">qurray</span><span class=\"params\">(ll x)</span></span>{</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>){</span><br><span class=\"line\">      ll pos=<span class=\"built_in\">upper_bound</span>(num+<span class=\"number\">1</span>,num+n+<span class=\"number\">1</span>,x)-num;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(pos==<span class=\"number\">1</span>){</span><br><span class=\"line\">         cout&lt;&lt;lst[<span class=\"number\">1</span>]&lt;&lt;endl;</span><br><span class=\"line\">      }</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(x%num[pos<span class=\"number\">-1</span>]==<span class=\"number\">0</span>){</span><br><span class=\"line\">         cout&lt;&lt;lst[pos<span class=\"number\">-1</span>]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">         <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      }</span><br><span class=\"line\">      x%=num[pos<span class=\"number\">-1</span>];</span><br><span class=\"line\">   }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">   <span class=\"type\">int</span> t;</span><br><span class=\"line\">   cin&gt;&gt;t;</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(t--){</span><br><span class=\"line\">      cin&gt;&gt;n&gt;&gt;q;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">         ll op,x;</span><br><span class=\"line\">         cin&gt;&gt;op&gt;&gt;x;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(op==<span class=\"number\">1</span>){</span><br><span class=\"line\">            num[i]=num[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">            lst[i]=x;</span><br><span class=\"line\">         }<span class=\"keyword\">else</span>{</span><br><span class=\"line\">            ll a=x+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num[i<span class=\"number\">-1</span>]!=<span class=\"number\">0</span>){</span><br><span class=\"line\">               a=<span class=\"built_in\">min</span>(a,INF/num[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>);</span><br><span class=\"line\">            }</span><br><span class=\"line\">            num[i]=num[i<span class=\"number\">-1</span>]*a;</span><br><span class=\"line\">            lst[i]=lst[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">         }</span><br><span class=\"line\">      }</span><br><span class=\"line\">      <span class=\"keyword\">while</span>(q--){</span><br><span class=\"line\">         ll x;</span><br><span class=\"line\">         cin&gt;&gt;x;</span><br><span class=\"line\">         <span class=\"built_in\">qurray</span>(x);</span><br><span class=\"line\">      }</span><br><span class=\"line\">      cout&lt;&lt;endl;</span><br><span class=\"line\">   } </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n"},{"title":"codeforces882D","date":"2023-09-07T13:21:59.000Z","mathjax":true,"_content":"[codeforces1870C](https://codeforces.com/problemset/problem/882/D)\n连续 $n$ 个数字里边必有能整除 $n$ 的数字 , 所以只需从 $1$ 开始枚举 .\n\n```C++\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--){\n        long long int n;\n        cin>>n;\n        int ans=0;\n        for(int i=1;i<=n;i++){\n            if(n%i==0) ans++;\n            else break;\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n```\n","source":"_posts/codeforces882D.md","raw":"---\ntitle: codeforces882D\ndate: 2023-09-07 21:21:59\ntags: codeforces\nmathjax: true\ncategories: codeforces\n---\n[codeforces1870C](https://codeforces.com/problemset/problem/882/D)\n连续 $n$ 个数字里边必有能整除 $n$ 的数字 , 所以只需从 $1$ 开始枚举 .\n\n```C++\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--){\n        long long int n;\n        cin>>n;\n        int ans=0;\n        for(int i=1;i<=n;i++){\n            if(n%i==0) ans++;\n            else break;\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n```\n","slug":"codeforces882D","published":1,"updated":"2025-04-15T14:08:52.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkm000k3od9g6gnazro","content":"<p><a class=\"link\" href=\"https://codeforces.com/problemset/problem/882/D\">codeforces1870C<i class=\"fas fa-external-link-alt\"></i></a>\r\n连续 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 个数字里边必有能整除 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 的数字 , 所以只需从 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 开始枚举 .</p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--){</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"type\">int</span> n;</span><br><span class=\"line\">        cin&gt;&gt;n;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n%i==<span class=\"number\">0</span>) ans++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"","more":"<p><a class=\"link\" href=\"https://codeforces.com/problemset/problem/882/D\">codeforces1870C<i class=\"fas fa-external-link-alt\"></i></a>\r\n连续 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 个数字里边必有能整除 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container></span> 的数字 , 所以只需从 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -666 500 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container></span> 开始枚举 .</p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--){</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"type\">int</span> n;</span><br><span class=\"line\">        cin&gt;&gt;n;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n%i==<span class=\"number\">0</span>) ans++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n"},{"title":"hexo的常用命令","date":"2023-10-27T18:42:33.000Z","_content":"## 安装、升级\n```\nnpm install hexo -g #安装  \nnpm update hexo -g #升级  \n```\n## 基本命令\n```hexo init```  \n初始化站点，生成一个简单网站所需的各种文件。\n\n```hexo clean == hexo c```   \n清除缓存 网页正常情况下可以忽略此条命令\n\n```hexo generate == hexo g```  \n生效新增、修改、更新的文件\n\nHexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。```hexo generate --watch```\n\n```hexo server == hexo s```  \n启动本地网站，可在本地观察网站效果，同时也可以输入```http://localhost:4000/admin```管理文章\n\n```hexo s --draft```  \n这个发布时可以预览草稿\n\n```hexo s --debug```  \n以调试模式启动本地网站，在此模式下，对文件的更改无需停止网站只需刷新即可看到效果，调试非常方便\n\n```hexo clean && hexo s```  \n一次执行两个命令\n\n```hexo deploy == hexo d```  \nhexo的一键部署功能，执行此命令即可将网站发布到配置中的仓库地址，执行此命令前需要配置站点配置文件_config.yml\n\n一键本地启动：```hexo clean && hexo g && hexo s```\n\n一键部署：```hexo clean && hexo g && hexo d```\n\n您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。\n```\nhexo generate --deploy\nhexo deploy --generate  或 hexo g -d or hexo d -g\n```\n## 创建和发布文章\n```hexo new [layout] <title>```  \n新建一篇新文章，会自动按照模板里面的格式创建文章\n\n里面的布局（layout），默认为 post，布局共有三种：\n```\npost\tsource/_posts\npage\tsource\ndraft\tsource/_drafts\n```\n#### 发布草稿命令：\n```\nhexo publish 文章文件名\n或者是手动将_drafts目录下的草稿移动到_posts目录下即可发布草稿为正式文章。\n```\n## PicGO图床快捷键\n快捷键为：```ctrl+shift+p```\n## Hexo博客头部配置\n\n#### （1）文章置顶\n在文章的 Front-Matter 中，使用 ```top: true``` 来实现置顶。\n\n#### （2）自定义样式\n如果你想修改主题的样式，推荐将样式代码添加到 ```source/css/_custom``` 目录下的 ```index.styl``` 文件中。这样，当主题更新时，不会覆盖你已经修改了的样式代码。\n> 当然，你也可以进行模块化分类：在该目录下新建样式文件，然后通过 @import xxx 语句在同目录下的 index.styl 文件中引入你新建的样式文件。\n\n#### （3）文章左侧目录\n启用文章目录后，默认对所有文章页面生效。你可以在 Front-Matter 中，设置 ```toc: false``` 来指定某篇文章不启用该功能。\n\n#### （4）文章业内目录\n```@[TOC]( )```这个写到文章页面内任何一个地方即可\n\n#### 更多详细设置，请参考 [hexo-theme-stun](https://theme-stun.github.io/docs/zh-CN/)\n","source":"_posts/hexo的常用命令.md","raw":"---\ntitle: hexo的常用命令\ndate: 2023-10-28 02:42:33\ntags:\n---\n## 安装、升级\n```\nnpm install hexo -g #安装  \nnpm update hexo -g #升级  \n```\n## 基本命令\n```hexo init```  \n初始化站点，生成一个简单网站所需的各种文件。\n\n```hexo clean == hexo c```   \n清除缓存 网页正常情况下可以忽略此条命令\n\n```hexo generate == hexo g```  \n生效新增、修改、更新的文件\n\nHexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。```hexo generate --watch```\n\n```hexo server == hexo s```  \n启动本地网站，可在本地观察网站效果，同时也可以输入```http://localhost:4000/admin```管理文章\n\n```hexo s --draft```  \n这个发布时可以预览草稿\n\n```hexo s --debug```  \n以调试模式启动本地网站，在此模式下，对文件的更改无需停止网站只需刷新即可看到效果，调试非常方便\n\n```hexo clean && hexo s```  \n一次执行两个命令\n\n```hexo deploy == hexo d```  \nhexo的一键部署功能，执行此命令即可将网站发布到配置中的仓库地址，执行此命令前需要配置站点配置文件_config.yml\n\n一键本地启动：```hexo clean && hexo g && hexo s```\n\n一键部署：```hexo clean && hexo g && hexo d```\n\n您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。\n```\nhexo generate --deploy\nhexo deploy --generate  或 hexo g -d or hexo d -g\n```\n## 创建和发布文章\n```hexo new [layout] <title>```  \n新建一篇新文章，会自动按照模板里面的格式创建文章\n\n里面的布局（layout），默认为 post，布局共有三种：\n```\npost\tsource/_posts\npage\tsource\ndraft\tsource/_drafts\n```\n#### 发布草稿命令：\n```\nhexo publish 文章文件名\n或者是手动将_drafts目录下的草稿移动到_posts目录下即可发布草稿为正式文章。\n```\n## PicGO图床快捷键\n快捷键为：```ctrl+shift+p```\n## Hexo博客头部配置\n\n#### （1）文章置顶\n在文章的 Front-Matter 中，使用 ```top: true``` 来实现置顶。\n\n#### （2）自定义样式\n如果你想修改主题的样式，推荐将样式代码添加到 ```source/css/_custom``` 目录下的 ```index.styl``` 文件中。这样，当主题更新时，不会覆盖你已经修改了的样式代码。\n> 当然，你也可以进行模块化分类：在该目录下新建样式文件，然后通过 @import xxx 语句在同目录下的 index.styl 文件中引入你新建的样式文件。\n\n#### （3）文章左侧目录\n启用文章目录后，默认对所有文章页面生效。你可以在 Front-Matter 中，设置 ```toc: false``` 来指定某篇文章不启用该功能。\n\n#### （4）文章业内目录\n```@[TOC]( )```这个写到文章页面内任何一个地方即可\n\n#### 更多详细设置，请参考 [hexo-theme-stun](https://theme-stun.github.io/docs/zh-CN/)\n","slug":"hexo的常用命令","published":1,"updated":"2025-04-15T14:08:52.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkm000m3od90loc375c","content":"<h2 id=\"安装升级\">安装、升级</h2>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -g #安装  </span><br><span class=\"line\">npm update hexo -g #升级  </span><br></pre></td></tr></table></figure>\r\n<h2 id=\"基本命令\">基本命令</h2>\r\n<p><code>hexo init</code><br>\r\n初始化站点，生成一个简单网站所需的各种文件。</p>\r\n<p><code>hexo clean == hexo c</code><br>\r\n清除缓存 网页正常情况下可以忽略此条命令</p>\r\n<p><code>hexo generate == hexo g</code><br>\r\n生效新增、修改、更新的文件</p>\r\n<p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的\r\nSHA1\r\nchecksum，只有变动的文件才会写入。<code>hexo generate --watch</code></p>\r\n<p><code>hexo server == hexo s</code><br>\r\n启动本地网站，可在本地观察网站效果，同时也可以输入<code>http://localhost:4000/admin</code>管理文章</p>\r\n<p><code>hexo s --draft</code><br>\r\n这个发布时可以预览草稿</p>\r\n<p><code>hexo s --debug</code><br>\r\n以调试模式启动本地网站，在此模式下，对文件的更改无需停止网站只需刷新即可看到效果，调试非常方便</p>\r\n<p><code>hexo clean &amp;&amp; hexo s</code><br>\r\n一次执行两个命令</p>\r\n<p><code>hexo deploy == hexo d</code><br>\r\nhexo的一键部署功能，执行此命令即可将网站发布到配置中的仓库地址，执行此命令前需要配置站点配置文件_config.yml</p>\r\n<p>一键本地启动：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p>\r\n<p>一键部署：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p>\r\n<p>您可执行下列的其中一个命令，让 Hexo\r\n在生成完毕后自动部署网站，两个命令的作用是相同的。 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate --deploy</span><br><span class=\"line\">hexo deploy --generate  或 hexo g -d or hexo d -g</span><br></pre></td></tr></table></figure> ##\r\n创建和发布文章 <code>hexo new [layout] &lt;title&gt;</code><br>\r\n新建一篇新文章，会自动按照模板里面的格式创建文章</p>\r\n<p>里面的布局（layout），默认为 post，布局共有三种： <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post\tsource/_posts</span><br><span class=\"line\">page\tsource</span><br><span class=\"line\">draft\tsource/_drafts</span><br></pre></td></tr></table></figure> ####\r\n发布草稿命令： <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo publish 文章文件名</span><br><span class=\"line\">或者是手动将_drafts目录下的草稿移动到_posts目录下即可发布草稿为正式文章。</span><br></pre></td></tr></table></figure> ## PicGO图床快捷键\r\n快捷键为：<code>ctrl+shift+p</code> ## Hexo博客头部配置</p>\r\n<h4 id=\"文章置顶\">（1）文章置顶</h4>\r\n<p>在文章的 Front-Matter 中，使用 <code>top: true</code>\r\n来实现置顶。</p>\r\n<h4 id=\"自定义样式\">（2）自定义样式</h4>\r\n<p>如果你想修改主题的样式，推荐将样式代码添加到\r\n<code>source/css/_custom</code> 目录下的 <code>index.styl</code>\r\n文件中。这样，当主题更新时，不会覆盖你已经修改了的样式代码。 &gt;\r\n当然，你也可以进行模块化分类：在该目录下新建样式文件，然后通过 <span class=\"citation\" data-cites=\"import\">@import</span> xxx 语句在同目录下的\r\nindex.styl 文件中引入你新建的样式文件。</p>\r\n<h4 id=\"文章左侧目录\">（3）文章左侧目录</h4>\r\n<p>启用文章目录后，默认对所有文章页面生效。你可以在 Front-Matter\r\n中，设置 <code>toc: false</code> 来指定某篇文章不启用该功能。</p>\r\n<h4 id=\"文章业内目录\">（4）文章业内目录</h4>\r\n<p><code>@[TOC]( )</code>这个写到文章页面内任何一个地方即可</p>\r\n<h4 id=\"更多详细设置请参考-hexo-theme-stun\">更多详细设置，请参考 <a class=\"link\" href=\"https://theme-stun.github.io/docs/zh-CN/\">hexo-theme-stun<i class=\"fas fa-external-link-alt\"></i></a></h4>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装升级\">安装、升级</h2>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -g #安装  </span><br><span class=\"line\">npm update hexo -g #升级  </span><br></pre></td></tr></table></figure>\r\n<h2 id=\"基本命令\">基本命令</h2>\r\n<p><code>hexo init</code><br>\r\n初始化站点，生成一个简单网站所需的各种文件。</p>\r\n<p><code>hexo clean == hexo c</code><br>\r\n清除缓存 网页正常情况下可以忽略此条命令</p>\r\n<p><code>hexo generate == hexo g</code><br>\r\n生效新增、修改、更新的文件</p>\r\n<p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的\r\nSHA1\r\nchecksum，只有变动的文件才会写入。<code>hexo generate --watch</code></p>\r\n<p><code>hexo server == hexo s</code><br>\r\n启动本地网站，可在本地观察网站效果，同时也可以输入<code>http://localhost:4000/admin</code>管理文章</p>\r\n<p><code>hexo s --draft</code><br>\r\n这个发布时可以预览草稿</p>\r\n<p><code>hexo s --debug</code><br>\r\n以调试模式启动本地网站，在此模式下，对文件的更改无需停止网站只需刷新即可看到效果，调试非常方便</p>\r\n<p><code>hexo clean &amp;&amp; hexo s</code><br>\r\n一次执行两个命令</p>\r\n<p><code>hexo deploy == hexo d</code><br>\r\nhexo的一键部署功能，执行此命令即可将网站发布到配置中的仓库地址，执行此命令前需要配置站点配置文件_config.yml</p>\r\n<p>一键本地启动：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p>\r\n<p>一键部署：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p>\r\n<p>您可执行下列的其中一个命令，让 Hexo\r\n在生成完毕后自动部署网站，两个命令的作用是相同的。 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate --deploy</span><br><span class=\"line\">hexo deploy --generate  或 hexo g -d or hexo d -g</span><br></pre></td></tr></table></figure> ##\r\n创建和发布文章 <code>hexo new [layout] &lt;title&gt;</code><br>\r\n新建一篇新文章，会自动按照模板里面的格式创建文章</p>\r\n<p>里面的布局（layout），默认为 post，布局共有三种： <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post\tsource/_posts</span><br><span class=\"line\">page\tsource</span><br><span class=\"line\">draft\tsource/_drafts</span><br></pre></td></tr></table></figure> ####\r\n发布草稿命令： <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo publish 文章文件名</span><br><span class=\"line\">或者是手动将_drafts目录下的草稿移动到_posts目录下即可发布草稿为正式文章。</span><br></pre></td></tr></table></figure> ## PicGO图床快捷键\r\n快捷键为：<code>ctrl+shift+p</code> ## Hexo博客头部配置</p>\r\n<h4 id=\"文章置顶\">（1）文章置顶</h4>\r\n<p>在文章的 Front-Matter 中，使用 <code>top: true</code>\r\n来实现置顶。</p>\r\n<h4 id=\"自定义样式\">（2）自定义样式</h4>\r\n<p>如果你想修改主题的样式，推荐将样式代码添加到\r\n<code>source/css/_custom</code> 目录下的 <code>index.styl</code>\r\n文件中。这样，当主题更新时，不会覆盖你已经修改了的样式代码。 &gt;\r\n当然，你也可以进行模块化分类：在该目录下新建样式文件，然后通过 <span class=\"citation\" data-cites=\"import\">@import</span> xxx 语句在同目录下的\r\nindex.styl 文件中引入你新建的样式文件。</p>\r\n<h4 id=\"文章左侧目录\">（3）文章左侧目录</h4>\r\n<p>启用文章目录后，默认对所有文章页面生效。你可以在 Front-Matter\r\n中，设置 <code>toc: false</code> 来指定某篇文章不启用该功能。</p>\r\n<h4 id=\"文章业内目录\">（4）文章业内目录</h4>\r\n<p><code>@[TOC]( )</code>这个写到文章页面内任何一个地方即可</p>\r\n<h4 id=\"更多详细设置请参考-hexo-theme-stun\">更多详细设置，请参考 <a class=\"link\" href=\"https://theme-stun.github.io/docs/zh-CN/\">hexo-theme-stun<i class=\"fas fa-external-link-alt\"></i></a></h4>\r\n"},{"title":"redis","date":"2024-02-01T20:01:04.000Z","_content":"","source":"_posts/redis.md","raw":"---\ntitle: redis\ndate: 2024-02-02 04:01:04\ntags: 工具\n---\n","slug":"redis","published":1,"updated":"2025-04-15T14:08:52.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkm000p3od9acprhf9w","content":"\r\n","site":{"data":{}},"excerpt":"","more":"\r\n"},{"title":"实习","date":"2024-05-30T12:44:46.000Z","_content":"# 实习\n## 合肥常春藤移动科技有限公司（职位：后端开发工程师，部门：游戏程序）\n\n## 实习内容\n\n### 第一个月\n- 参与公司SLG游戏项目的后端开发工作，使用Skynet框架进行开发。\n- 学习并应用Lua语言进行游戏逻辑编程，熟悉Skynet框架的工作原理与客户端通信机制。\n- 根据游戏策划需求，设计并实现游戏逻辑模块，包括充能保护罩，采集资源中心，兵种等级解锁，医院治疗逻辑等。\n- 使用Git进行版本控制，参与代码的提交、合并和冲突解决，确保代码质量和团队协作。","source":"_posts/实习.md","raw":"---\ntitle: 实习\ndate: 2024-05-30 20:44:46\ncategories:\n  - 实习\ntags:\n  - 实习\n---\n# 实习\n## 合肥常春藤移动科技有限公司（职位：后端开发工程师，部门：游戏程序）\n\n## 实习内容\n\n### 第一个月\n- 参与公司SLG游戏项目的后端开发工作，使用Skynet框架进行开发。\n- 学习并应用Lua语言进行游戏逻辑编程，熟悉Skynet框架的工作原理与客户端通信机制。\n- 根据游戏策划需求，设计并实现游戏逻辑模块，包括充能保护罩，采集资源中心，兵种等级解锁，医院治疗逻辑等。\n- 使用Git进行版本控制，参与代码的提交、合并和冲突解决，确保代码质量和团队协作。","slug":"实习","published":1,"updated":"2025-06-29T14:18:03.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkn000r3od94vyc7x7t","content":"<h1 id=\"实习\">实习</h1>\r\n<h2 id=\"合肥常春藤移动科技有限公司职位后端开发工程师部门游戏程序\">合肥常春藤移动科技有限公司（职位：后端开发工程师，部门：游戏程序）</h2>\r\n<h2 id=\"实习内容\">实习内容</h2>\r\n<h3 id=\"第一个月\">第一个月</h3>\r\n<ul>\r\n<li>参与公司SLG游戏项目的后端开发工作，使用Skynet框架进行开发。</li>\r\n<li>学习并应用Lua语言进行游戏逻辑编程，熟悉Skynet框架的工作原理与客户端通信机制。</li>\r\n<li>根据游戏策划需求，设计并实现游戏逻辑模块，包括充能保护罩，采集资源中心，兵种等级解锁，医院治疗逻辑等。</li>\r\n<li>使用Git进行版本控制，参与代码的提交、合并和冲突解决，确保代码质量和团队协作。</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"实习\">实习</h1>\r\n<h2 id=\"合肥常春藤移动科技有限公司职位后端开发工程师部门游戏程序\">合肥常春藤移动科技有限公司（职位：后端开发工程师，部门：游戏程序）</h2>\r\n<h2 id=\"实习内容\">实习内容</h2>\r\n<h3 id=\"第一个月\">第一个月</h3>\r\n<ul>\r\n<li>参与公司SLG游戏项目的后端开发工作，使用Skynet框架进行开发。</li>\r\n<li>学习并应用Lua语言进行游戏逻辑编程，熟悉Skynet框架的工作原理与客户端通信机制。</li>\r\n<li>根据游戏策划需求，设计并实现游戏逻辑模块，包括充能保护罩，采集资源中心，兵种等级解锁，医院治疗逻辑等。</li>\r\n<li>使用Git进行版本控制，参与代码的提交、合并和冲突解决，确保代码质量和团队协作。</li>\r\n</ul>\r\n"},{"title":"背包问题","date":"2024-05-11T05:59:18.000Z","mathjax":true,"_content":"\n# 背包问题\n\n## 引入\n\n简介：背包问题是一个经典的 **组合优化问题**，用于描述在给定的背包容量下如何选择物品以使得其价值最大化。通常情况下，背包问题可以分为 **0-1 背包问题** 和 **分数背包问题** 两种，其他还有 **完全背包问题**，**分组背包问题**。\n\n解决方法：常见的解决方法有动态规划、贪心算法和回溯算法等。其中，动态规划是解决这类问题的主流方法之一，其时间复杂度相对较低。\n\n## 0-1 背包\n\n**_例题：_**\n\n> 题意概要：有 n 种物品和一个容量为 **_W_** 的背包，每种物品有重量 $w_i$ 和价值 $v_{i}$ 两种属性并且每种物品只有一个，要求选若干个物品放入背包使背包中物品的总价值最大且背包中物品的总重量不超过背包的容量。\n\n**_Code:_**\n\n```c++\nconst int N=1e5+10;\nint n,W,w[N],v[N];\nlong long dp[100*N];\nvoid solve()\n{\n    cin>>W>>n;\n    for(int i=1;i<=n;i++) cin>>w[i]>>v[i];\n    for(int i=1;i<=n;i++){\n        for(int j=W;j>=w[i];j--){\n            dp[j]=max(dp[j],dp[j-w[i]]+v[i]);\n        }\n    }\n    cout<<dp[W]<<endl;\n}\n```\n***分析：***\n\n建立状态表示 ```dp[i][j]```: 从前 ```i``` 个物品选择放入容量为 ```j``` 的背包中的最大价值。\n\n二维动态规划状态转移方程：$dp[i][j] = max(dp[i-1][j], dp[i-1][j-v[i]] + w[i])$\n\n一维动态规划状态转移方程：$dp[j] = max(dp[j], dp[j - v[i]] + w[i])$\n\n","source":"_posts/背包问题.md","raw":"---\ntitle: 背包问题\ndate: 2024-05-11 13:59:18\ntags: codeforces\nmathjax: true\n---\n\n# 背包问题\n\n## 引入\n\n简介：背包问题是一个经典的 **组合优化问题**，用于描述在给定的背包容量下如何选择物品以使得其价值最大化。通常情况下，背包问题可以分为 **0-1 背包问题** 和 **分数背包问题** 两种，其他还有 **完全背包问题**，**分组背包问题**。\n\n解决方法：常见的解决方法有动态规划、贪心算法和回溯算法等。其中，动态规划是解决这类问题的主流方法之一，其时间复杂度相对较低。\n\n## 0-1 背包\n\n**_例题：_**\n\n> 题意概要：有 n 种物品和一个容量为 **_W_** 的背包，每种物品有重量 $w_i$ 和价值 $v_{i}$ 两种属性并且每种物品只有一个，要求选若干个物品放入背包使背包中物品的总价值最大且背包中物品的总重量不超过背包的容量。\n\n**_Code:_**\n\n```c++\nconst int N=1e5+10;\nint n,W,w[N],v[N];\nlong long dp[100*N];\nvoid solve()\n{\n    cin>>W>>n;\n    for(int i=1;i<=n;i++) cin>>w[i]>>v[i];\n    for(int i=1;i<=n;i++){\n        for(int j=W;j>=w[i];j--){\n            dp[j]=max(dp[j],dp[j-w[i]]+v[i]);\n        }\n    }\n    cout<<dp[W]<<endl;\n}\n```\n***分析：***\n\n建立状态表示 ```dp[i][j]```: 从前 ```i``` 个物品选择放入容量为 ```j``` 的背包中的最大价值。\n\n二维动态规划状态转移方程：$dp[i][j] = max(dp[i-1][j], dp[i-1][j-v[i]] + w[i])$\n\n一维动态规划状态转移方程：$dp[j] = max(dp[j], dp[j - v[i]] + w[i])$\n\n","slug":"背包问题","published":1,"updated":"2025-06-29T13:53:31.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzkn000u3od93obo45xn","content":"<h1 id=\"背包问题\">背包问题</h1>\r\n<h2 id=\"引入\">引入</h2>\r\n<p>简介：背包问题是一个经典的\r\n<strong>组合优化问题</strong>，用于描述在给定的背包容量下如何选择物品以使得其价值最大化。通常情况下，背包问题可以分为\r\n<strong>0-1 背包问题</strong> 和 <strong>分数背包问题</strong>\r\n两种，其他还有\r\n<strong>完全背包问题</strong>，<strong>分组背包问题</strong>。</p>\r\n<p>解决方法：常见的解决方法有动态规划、贪心算法和回溯算法等。其中，动态规划是解决这类问题的主流方法之一，其时间复杂度相对较低。</p>\r\n<h2 id=\"背包\">0-1 背包</h2>\r\n<p><strong><em>例题：</em></strong></p>\r\n<blockquote>\r\n<p>题意概要：有 n 种物品和一个容量为 <strong><em>W</em></strong>\r\n的背包，每种物品有重量 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.36ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -443 1043 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(749,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> 和价值\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.837ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -443 812 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(518,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></g></g></svg></mjx-container></span>\r\n两种属性并且每种物品只有一个，要求选若干个物品放入背包使背包中物品的总价值最大且背包中物品的总重量不超过背包的容量。</p>\r\n</blockquote>\r\n<p><strong><em>Code:</em></strong></p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N=<span class=\"number\">1e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n,W,w[N],v[N];</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> dp[<span class=\"number\">100</span>*N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    cin&gt;&gt;W&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;w[i]&gt;&gt;v[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=W;j&gt;=w[i];j--){</span><br><span class=\"line\">            dp[j]=<span class=\"built_in\">max</span>(dp[j],dp[j-w[i]]+v[i]);</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    cout&lt;&lt;dp[W]&lt;&lt;endl;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n<p><strong><em>分析：</em></strong></p>\r\n<p>建立状态表示 <code>dp[i][j]</code>: 从前 <code>i</code>\r\n个物品选择放入容量为 <code>j</code> 的背包中的最大价值。</p>\r\n<p>二维动态规划状态转移方程：<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50.009ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 22104 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1023,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1301,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1646,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1924,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2202,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2614,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(3169.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4225.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5103.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5632.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(6204.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(6593.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7113.6,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7616.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7894.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(8461.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(9462,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(9962,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10240,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(10518,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10930,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(11208,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(11652.7,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(12172.7,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12675.7,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(12953.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(13520.9,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(14521.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15021.1,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15299.1,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(15577.1,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(16211.3,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(17211.6,0)\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(17696.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(17974.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(18319.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(18597.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(19097.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(20098,0)\"><path data-c=\"1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(20814,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(21092,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(21437,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(21715,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span></p>\r\n<p>一维动态规划状态转移方程：<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36.1ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 15956.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1023,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1301,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1713,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2268.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(3324.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4202.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4731.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(5303.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5692.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(6212.6,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(6715.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(6993.6,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7405.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7683.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(8128.2,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(8648.2,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(9151.2,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(9429.2,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10063.4,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(11063.7,0)\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(11548.7,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(11826.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12171.7,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12449.7,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12949.9,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(13950.1,0)\"><path data-c=\"1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(14666.1,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(14944.1,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15289.1,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15567.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span></p>\r\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背包问题\">背包问题</h1>\r\n<h2 id=\"引入\">引入</h2>\r\n<p>简介：背包问题是一个经典的\r\n<strong>组合优化问题</strong>，用于描述在给定的背包容量下如何选择物品以使得其价值最大化。通常情况下，背包问题可以分为\r\n<strong>0-1 背包问题</strong> 和 <strong>分数背包问题</strong>\r\n两种，其他还有\r\n<strong>完全背包问题</strong>，<strong>分组背包问题</strong>。</p>\r\n<p>解决方法：常见的解决方法有动态规划、贪心算法和回溯算法等。其中，动态规划是解决这类问题的主流方法之一，其时间复杂度相对较低。</p>\r\n<h2 id=\"背包\">0-1 背包</h2>\r\n<p><strong><em>例题：</em></strong></p>\r\n<blockquote>\r\n<p>题意概要：有 n 种物品和一个容量为 <strong><em>W</em></strong>\r\n的背包，每种物品有重量 <span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.36ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -443 1043 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(749,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container></span> 和价值\r\n<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.837ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -443 812 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(518,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g></g></g></g></g></svg></mjx-container></span>\r\n两种属性并且每种物品只有一个，要求选若干个物品放入背包使背包中物品的总价值最大且背包中物品的总重量不超过背包的容量。</p>\r\n</blockquote>\r\n<p><strong><em>Code:</em></strong></p>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N=<span class=\"number\">1e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n,W,w[N],v[N];</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> dp[<span class=\"number\">100</span>*N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    cin&gt;&gt;W&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;w[i]&gt;&gt;v[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++){</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=W;j&gt;=w[i];j--){</span><br><span class=\"line\">            dp[j]=<span class=\"built_in\">max</span>(dp[j],dp[j-w[i]]+v[i]);</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    cout&lt;&lt;dp[W]&lt;&lt;endl;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n<p><strong><em>分析：</em></strong></p>\r\n<p>建立状态表示 <code>dp[i][j]</code>: 从前 <code>i</code>\r\n个物品选择放入容量为 <code>j</code> 的背包中的最大价值。</p>\r\n<p>二维动态规划状态转移方程：<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50.009ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 22104 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1023,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1301,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1646,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1924,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(2202,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2614,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(3169.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4225.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5103.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5632.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(6204.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(6593.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7113.6,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7616.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(7894.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(8461.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(9462,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(9962,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10240,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(10518,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10930,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(11208,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(11652.7,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(12172.7,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12675.7,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(12953.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(13520.9,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(14521.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15021.1,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15299.1,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(15577.1,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(16211.3,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(17211.6,0)\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(17696.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(17974.6,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(18319.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(18597.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(19097.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(20098,0)\"><path data-c=\"1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(20814,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(21092,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(21437,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(21715,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span></p>\r\n<p>一维动态规划状态转移方程：<span class=\"math inline\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36.1ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -750 15956.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1023,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(1301,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1713,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(2268.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(3324.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4202.6,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(4731.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(5303.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(5692.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(6212.6,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(6715.6,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(6993.6,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7405.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(7683.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(8128.2,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(8648.2,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(9151.2,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(9429.2,0)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(10063.4,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(11063.7,0)\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(11548.7,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(11826.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12171.7,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12449.7,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(12949.9,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(13950.1,0)\"><path data-c=\"1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(14666.1,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(14944.1,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15289.1,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(15567.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/></g></g></g></svg></mjx-container></span></p>\r\n"},{"title":"树状数组维护区间最值","date":"2024-05-10T13:06:46.000Z","mathjax":true,"_content":"# 树状数组维护区间最值\n\n## 一, 工作原理\n\n> 树状数组是一种支持**单点修改**和**区间查询**的数据结构。普通树状数组维护的信息及运算要满足**结合律**且**可差分**，如加法（和）、乘法（积）、异或等。 ——OI WIKI\n\n![img](树状数组维护区间最值\\01.svg)\n\n数组中下标为x的元素管辖区间为```[x-lowbit(x)+1,x]```\n\n## 二，建树\n\n```c++\nvoid build()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        tree[i] = max(tree[i], a[i]);\n        int j = i + lowbit(i);\n        if (j <= n) tree[j] = max(tree[j], tree[i]);\n    }\n}\n```\n\n## 三，单点修改\n\n![img](树状数组维护区间最值\\02.png)\n\n```c++\nvoid add(int x, int c)\n{\n    tree[x] = a[x] = c;\n    for (int i = 1; i < lowbit(x); i <<= 1) tree[x] = max(tree[x], tree[x - i]);\n\n    for (int i = x; i + lowbit(i) <= n; i += lowbit(i))\n    {\n        int j = lowbit(i);\n        tree[i + j] = max(tree[i + j], tree[i]);\n    }\n}\n```\n\n## 四，区间查询\n\n```c++\nint query(int l, int r)\n{\n    int res = -INF;\n    while (l <= r)\n    {\n        for (; l <= r && r - lowbit(r) + 1 >= l; r -= lowbit(r))\n        {\n            res = max(tree[r], res);\n        }\n\n        if (l > r) break;\n        res = max(a[r], res);\n        r--;\n    }\n    return res;\n}\n```","source":"_posts/树状数组维护区间最值.md","raw":"---\ntitle: 树状数组维护区间最值\ndate: 2024-05-10 21:06:46\ntags: codeforces\nmathjax: true\ncategories: codeforces\n---\n# 树状数组维护区间最值\n\n## 一, 工作原理\n\n> 树状数组是一种支持**单点修改**和**区间查询**的数据结构。普通树状数组维护的信息及运算要满足**结合律**且**可差分**，如加法（和）、乘法（积）、异或等。 ——OI WIKI\n\n![img](树状数组维护区间最值\\01.svg)\n\n数组中下标为x的元素管辖区间为```[x-lowbit(x)+1,x]```\n\n## 二，建树\n\n```c++\nvoid build()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        tree[i] = max(tree[i], a[i]);\n        int j = i + lowbit(i);\n        if (j <= n) tree[j] = max(tree[j], tree[i]);\n    }\n}\n```\n\n## 三，单点修改\n\n![img](树状数组维护区间最值\\02.png)\n\n```c++\nvoid add(int x, int c)\n{\n    tree[x] = a[x] = c;\n    for (int i = 1; i < lowbit(x); i <<= 1) tree[x] = max(tree[x], tree[x - i]);\n\n    for (int i = x; i + lowbit(i) <= n; i += lowbit(i))\n    {\n        int j = lowbit(i);\n        tree[i + j] = max(tree[i + j], tree[i]);\n    }\n}\n```\n\n## 四，区间查询\n\n```c++\nint query(int l, int r)\n{\n    int res = -INF;\n    while (l <= r)\n    {\n        for (; l <= r && r - lowbit(r) + 1 >= l; r -= lowbit(r))\n        {\n            res = max(tree[r], res);\n        }\n\n        if (l > r) break;\n        res = max(a[r], res);\n        r--;\n    }\n    return res;\n}\n```","slug":"树状数组维护区间最值","published":1,"updated":"2025-04-15T14:08:52.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cmchrzzko00113od96bl64oqm","content":"<h1 id=\"树状数组维护区间最值\">树状数组维护区间最值</h1>\r\n<h2 id=\"一-工作原理\">一, 工作原理</h2>\r\n<blockquote>\r\n<p>树状数组是一种支持<strong>单点修改</strong>和<strong>区间查询</strong>的数据结构。普通树状数组维护的信息及运算要满足<strong>结合律</strong>且<strong>可差分</strong>，如加法（和）、乘法（积）、异或等。\r\n——OI WIKI</p>\r\n</blockquote>\r\n<figure>\r\n<img src=\"/.io//01.svg\" alt=\"img\">\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<p>数组中下标为x的元素管辖区间为<code>[x-lowbit(x)+1,x]</code></p>\r\n<h2 id=\"二建树\">二，建树</h2>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">build</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        tree[i] = <span class=\"built_in\">max</span>(tree[i], a[i]);</span><br><span class=\"line\">        <span class=\"type\">int</span> j = i + <span class=\"built_in\">lowbit</span>(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &lt;= n) tree[j] = <span class=\"built_in\">max</span>(tree[j], tree[i]);</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"三单点修改\">三，单点修改</h2>\r\n<figure>\r\n<img src=\"/.io//02.png\" alt=\"img\">\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    tree[x] = a[x] = c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"built_in\">lowbit</span>(x); i &lt;&lt;= <span class=\"number\">1</span>) tree[x] = <span class=\"built_in\">max</span>(tree[x], tree[x - i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = x; i + <span class=\"built_in\">lowbit</span>(i) &lt;= n; i += <span class=\"built_in\">lowbit</span>(i))</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"type\">int</span> j = <span class=\"built_in\">lowbit</span>(i);</span><br><span class=\"line\">        tree[i + j] = <span class=\"built_in\">max</span>(tree[i + j], tree[i]);</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"四区间查询\">四，区间查询</h2>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">query</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">int</span> res = -INF;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (l &lt;= r)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; l &lt;= r &amp;&amp; r - <span class=\"built_in\">lowbit</span>(r) + <span class=\"number\">1</span> &gt;= l; r -= <span class=\"built_in\">lowbit</span>(r))</span><br><span class=\"line\">        {</span><br><span class=\"line\">            res = <span class=\"built_in\">max</span>(tree[r], res);</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (l &gt; r) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        res = <span class=\"built_in\">max</span>(a[r], res);</span><br><span class=\"line\">        r--;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"树状数组维护区间最值\">树状数组维护区间最值</h1>\r\n<h2 id=\"一-工作原理\">一, 工作原理</h2>\r\n<blockquote>\r\n<p>树状数组是一种支持<strong>单点修改</strong>和<strong>区间查询</strong>的数据结构。普通树状数组维护的信息及运算要满足<strong>结合律</strong>且<strong>可差分</strong>，如加法（和）、乘法（积）、异或等。\r\n——OI WIKI</p>\r\n</blockquote>\r\n<figure>\r\n<img src=\"/.io//01.svg\" alt=\"img\">\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<p>数组中下标为x的元素管辖区间为<code>[x-lowbit(x)+1,x]</code></p>\r\n<h2 id=\"二建树\">二，建树</h2>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">build</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        tree[i] = <span class=\"built_in\">max</span>(tree[i], a[i]);</span><br><span class=\"line\">        <span class=\"type\">int</span> j = i + <span class=\"built_in\">lowbit</span>(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &lt;= n) tree[j] = <span class=\"built_in\">max</span>(tree[j], tree[i]);</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"三单点修改\">三，单点修改</h2>\r\n<figure>\r\n<img src=\"/.io//02.png\" alt=\"img\">\r\n<figcaption aria-hidden=\"true\">img</figcaption>\r\n</figure>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    tree[x] = a[x] = c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"built_in\">lowbit</span>(x); i &lt;&lt;= <span class=\"number\">1</span>) tree[x] = <span class=\"built_in\">max</span>(tree[x], tree[x - i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = x; i + <span class=\"built_in\">lowbit</span>(i) &lt;= n; i += <span class=\"built_in\">lowbit</span>(i))</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"type\">int</span> j = <span class=\"built_in\">lowbit</span>(i);</span><br><span class=\"line\">        tree[i + j] = <span class=\"built_in\">max</span>(tree[i + j], tree[i]);</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"四区间查询\">四，区间查询</h2>\r\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">query</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">    <span class=\"type\">int</span> res = -INF;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (l &lt;= r)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; l &lt;= r &amp;&amp; r - <span class=\"built_in\">lowbit</span>(r) + <span class=\"number\">1</span> &gt;= l; r -= <span class=\"built_in\">lowbit</span>(r))</span><br><span class=\"line\">        {</span><br><span class=\"line\">            res = <span class=\"built_in\">max</span>(tree[r], res);</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (l &gt; r) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        res = <span class=\"built_in\">max</span>(a[r], res);</span><br><span class=\"line\">        r--;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\r\n"}],"PostAsset":[{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/01.png","slug":"01.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/02.png","slug":"02.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/03.png","slug":"03.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/04.png","slug":"04.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/05.png","slug":"05.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/06.png","slug":"06.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/07.png","slug":"07.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/08.png","slug":"08.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/09.png","slug":"09.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/10.png","slug":"10.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/11.png","slug":"11.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/12.png","slug":"12.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/13.png","slug":"13.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/14.png","slug":"14.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Proxifier-2023年11月时最新版-激活教程/15.png","slug":"15.png","post":"cmchrzzkh00073od97cpn2duu","modified":0,"renderable":0},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_01.png","slug":"image_01.png","post":"cmchrzzkj000b3od928zg77sz","modified":0,"renderable":0},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_02.png","slug":"image_02.png","post":"cmchrzzkj000b3od928zg77sz","modified":0,"renderable":0},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_03.png","slug":"image_03.png","post":"cmchrzzkj000b3od928zg77sz","modified":0,"renderable":0},{"_id":"source/_posts/Windows与Ubuntu22-04-双系统安装/image_04.png","slug":"image_04.png","post":"cmchrzzkj000b3od928zg77sz","modified":0,"renderable":0},{"_id":"source/_posts/树状数组维护区间最值/01.svg","slug":"01.svg","post":"cmchrzzko00113od96bl64oqm","modified":0,"renderable":0},{"_id":"source/_posts/树状数组维护区间最值/02.png","slug":"02.png","post":"cmchrzzko00113od96bl64oqm","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cmchrzzkh00053od9etcrf0th","category_id":"cmchrzzki00083od9hwb30g37","_id":"cmchrzzkk000e3od92ohi37eg"},{"post_id":"cmchrzzkj000a3od9fe05ckhk","category_id":"cmchrzzkk000d3od958tp1r4b","_id":"cmchrzzkk000g3od91g9jciql"},{"post_id":"cmchrzzkl000h3od9ey54c1u7","category_id":"cmchrzzkk000d3od958tp1r4b","_id":"cmchrzzkm000n3od9hp7095a2"},{"post_id":"cmchrzzkl000i3od921hle7m3","category_id":"cmchrzzkk000d3od958tp1r4b","_id":"cmchrzzkn000q3od9df5p8a5p"},{"post_id":"cmchrzzkm000k3od9g6gnazro","category_id":"cmchrzzkk000d3od958tp1r4b","_id":"cmchrzzkn000s3od95mvl7vn9"},{"post_id":"cmchrzzkn000r3od94vyc7x7t","category_id":"cmchrzzkn000v3od93lqx9nfw","_id":"cmchrzzko000z3od92a5r3d69"},{"post_id":"cmchrzzko00113od96bl64oqm","category_id":"cmchrzzkk000d3od958tp1r4b","_id":"cmchrzzkp00133od9e4e46c6d"}],"PostTag":[{"post_id":"cmchrzzkj000a3od9fe05ckhk","tag_id":"cmchrzzkk000c3od99huy88t0","_id":"cmchrzzkk000f3od9gq2sghkl"},{"post_id":"cmchrzzkl000h3od9ey54c1u7","tag_id":"cmchrzzkk000c3od99huy88t0","_id":"cmchrzzkm000j3od938ds8zut"},{"post_id":"cmchrzzkl000i3od921hle7m3","tag_id":"cmchrzzkk000c3od99huy88t0","_id":"cmchrzzkm000l3od9fkjmhex4"},{"post_id":"cmchrzzkm000k3od9g6gnazro","tag_id":"cmchrzzkk000c3od99huy88t0","_id":"cmchrzzkm000o3od9gt83a9qy"},{"post_id":"cmchrzzkn000u3od93obo45xn","tag_id":"cmchrzzkk000c3od99huy88t0","_id":"cmchrzzko000w3od9crwq0az5"},{"post_id":"cmchrzzkm000p3od9acprhf9w","tag_id":"cmchrzzkn000t3od9htgrctl0","_id":"cmchrzzko000y3od9hq251iy5"},{"post_id":"cmchrzzkn000r3od94vyc7x7t","tag_id":"cmchrzzko000x3od9a2ic0avo","_id":"cmchrzzko00103od9ctda2m6y"},{"post_id":"cmchrzzko00113od96bl64oqm","tag_id":"cmchrzzkk000c3od99huy88t0","_id":"cmchrzzkp00123od9g2nu3uof"}],"Tag":[{"name":"codeforces","_id":"cmchrzzkk000c3od99huy88t0"},{"name":"工具","_id":"cmchrzzkn000t3od9htgrctl0"},{"name":"实习","_id":"cmchrzzko000x3od9a2ic0avo"}]}}